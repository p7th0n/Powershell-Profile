<?xml version="1.0" encoding="utf-8"?>
<helpItems schema="maml">
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Format-Byte</command:name>
      <maml:description>
        <maml:para>PSCX Cmdlet: Displays numbers in multiples of byte units.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Format</command:verb>
      <command:noun>Byte</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>
         Turns numbers into nicely formatted byte count, using the highest possible unit.
    </maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Format-Byte</maml:name>
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="1">
          <maml:name>Value</maml:name>
          <maml:description>
            <maml:para>
                The byte count to be formated.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">Int64</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="1">
        <maml:name>Value</maml:name>
        <maml:description>
          <maml:para>
                The byte count to be formated.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">Int64</command:parameterValue>
        <dev:type>
          <maml:name>Int64</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:title />
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>10560 | Format-Byte</dev:code>
        <dev:remarks>
          <maml:para>Returns "10,313 KB".</maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks />
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-FileVersionInfo</command:name>
      <maml:description>
        <maml:para>PSCX Cmdlet: Gets a FileVersionInfo object for the specified path.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Get</command:verb>
      <command:noun>FileVersionInfo</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>
    Attempts to get the FileVersionInfo object for the specified path. Usually only executable files include file version information.
  </maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-FileVersionInfo</maml:name>
        <command:parameter required="true" globbing="true" pipelineInput="true (ByValue, ByPropertyName)" position="1">
          <maml:name>Path</maml:name>
          <maml:description>
            <maml:para>
        Specifies the path to the file to process. Wildcard syntax is allowed.
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Get-FileVersionInfo</maml:name>
        <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
          <maml:name>LiteralPath</maml:name>
          <maml:description>
            <maml:para>
        Specifies a path to the item. The value of -LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
        <maml:name>LiteralPath</maml:name>
        <maml:description>
          <maml:para>
        Specifies a path to the item. The value of -LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" globbing="true" pipelineInput="true (ByValue, ByPropertyName)" position="1">
        <maml:name>Path</maml:name>
        <maml:description>
          <maml:para>
        Specifies the path to the file to process. Wildcard syntax is allowed.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:title />
      <maml:alert>
        <maml:para>
        </maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>Get-FileVersionInfo $PSHOME\PowerShell.exe | Format-List *</dev:code>
        <dev:remarks>
          <maml:para>Gets the file version information for PowerShell.exe.</maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks />
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Format-Hex</command:name>
      <maml:description>
        <maml:para>PSCX Cmdlet: Displays the contents of files or byte streams in hex format and optionally ASCII.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Format</command:verb>
      <command:noun>Hex</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>
         The Format-Hex command displays the contents of the specified files in hex format.  This cmdlet will also accept pipeline input in the form of a byte stream.  The output can be controlled via various parameters to indicate the number of columns that should be displayed or alternatively you can specify the width of the output.  The header, address and ASCII portions of the display can also be turned off individually.  The offset and count can also be specified via parameters to control where in the input to start displaying and how much to display.
    </maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Format-Hex</maml:name>
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>InputObject</maml:name>
          <maml:description>
            <maml:para>
                Accepts an object as input to the cmdlet. Enter a variable that contains the objects or type a command or expression that gets the objects.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">PSObject</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Columns</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Count</maml:name>
          <maml:description>
            <maml:para>
                Specifies the number of bytes to display.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>HideAddress</maml:name>
          <maml:description>
            <maml:para>
                Hides the address information.
            </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>HideAscii</maml:name>
          <maml:description>
            <maml:para>
                Hides the ASCII representation of the bytes.
            </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>HideHeader</maml:name>
          <maml:description>
            <maml:para>
                Hides the header lines.
            </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Offset</maml:name>
          <maml:description>
            <maml:para>
                Specifies the number of bytes to offset into file.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">Int64</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
          <maml:name>StringEncoding</maml:name>
          <maml:description>
            <maml:para>
                The encoding to use for string InputObjects.  Valid values are: ASCII, UTF7, UTF8, UTF32, Unicode, BigEndianUnicode and Default.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">StringEncodingParameter</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Width</maml:name>
          <maml:description>
            <maml:para>
                Specifies desired width of output text.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">Int32</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Format-Hex</maml:name>
        <command:parameter required="true" globbing="true" pipelineInput="true (ByPropertyName)" position="1">
          <maml:name>Path</maml:name>
          <maml:description>
            <maml:para>
                Specifies the path to the file to process. Wildcard syntax is allowed.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Columns</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Count</maml:name>
          <maml:description>
            <maml:para>
                Specifies the number of bytes to display.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>HideAddress</maml:name>
          <maml:description>
            <maml:para>
                Hides the address information.
            </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>HideAscii</maml:name>
          <maml:description>
            <maml:para>
                Hides the ASCII representation of the bytes.
            </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>HideHeader</maml:name>
          <maml:description>
            <maml:para>
                Hides the header lines.
            </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Offset</maml:name>
          <maml:description>
            <maml:para>
                Specifies the number of bytes to offset into file.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">Int64</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Width</maml:name>
          <maml:description>
            <maml:para>
                Specifies desired width of output text.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">Int32</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Format-Hex</maml:name>
        <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
          <maml:name>LiteralPath</maml:name>
          <maml:description>
            <maml:para>
                Specifies a path to the item. The value of -LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Columns</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Count</maml:name>
          <maml:description>
            <maml:para>
                Specifies the number of bytes to display.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>HideAddress</maml:name>
          <maml:description>
            <maml:para>
                Hides the address information.
            </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>HideAscii</maml:name>
          <maml:description>
            <maml:para>
                Hides the ASCII representation of the bytes.
            </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>HideHeader</maml:name>
          <maml:description>
            <maml:para>
                Hides the header lines.
            </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Offset</maml:name>
          <maml:description>
            <maml:para>
                Specifies the number of bytes to offset into file.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">Int64</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Width</maml:name>
          <maml:description>
            <maml:para>
                Specifies desired width of output text.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">Int32</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
        <maml:name>LiteralPath</maml:name>
        <maml:description>
          <maml:para>
                Specifies a path to the item. The value of -LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" globbing="true" pipelineInput="true (ByPropertyName)" position="1">
        <maml:name>Path</maml:name>
        <maml:description>
          <maml:para>
                Specifies the path to the file to process. Wildcard syntax is allowed.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>InputObject</maml:name>
        <maml:description>
          <maml:para>
                Accepts an object as input to the cmdlet. Enter a variable that contains the objects or type a command or expression that gets the objects.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">PSObject</command:parameterValue>
        <dev:type>
          <maml:name>PSObject</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Columns</maml:name>
        <maml:description>
          <maml:para>
          </maml:para>
        </maml:description>
        <command:parameterValue required="true">Int32</command:parameterValue>
        <dev:type>
          <maml:name>Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Count</maml:name>
        <maml:description>
          <maml:para>
                Specifies the number of bytes to display.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">Int32</command:parameterValue>
        <dev:type>
          <maml:name>Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>HideAddress</maml:name>
        <maml:description>
          <maml:para>
                Hides the address information.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>HideAscii</maml:name>
        <maml:description>
          <maml:para>
                Hides the ASCII representation of the bytes.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>HideHeader</maml:name>
        <maml:description>
          <maml:para>
                Hides the header lines.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Offset</maml:name>
        <maml:description>
          <maml:para>
                Specifies the number of bytes to offset into file.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">Int64</command:parameterValue>
        <dev:type>
          <maml:name>Int64</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
        <maml:name>StringEncoding</maml:name>
        <maml:description>
          <maml:para>
                The encoding to use for string InputObjects.  Valid values are: ASCII, UTF7, UTF8, UTF32, Unicode, BigEndianUnicode and Default.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">StringEncodingParameter</command:parameterValue>
        <dev:type>
          <maml:name>StringEncodingParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Width</maml:name>
        <maml:description>
          <maml:para>
                Specifies desired width of output text.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">Int32</command:parameterValue>
        <dev:type>
          <maml:name>Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>byte</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </dev:type>
        <maml:description />
      </command:inputType>
      <command:inputType>
        <dev:type>
          <maml:name>byte[]</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </dev:type>
        <maml:description />
      </command:inputType>
      <command:inputType>
        <dev:type>
          <maml:name>string</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </dev:type>
        <maml:description />
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>Formatted text</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </dev:type>
        <maml:description />
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:title />
      <maml:alert>
        <maml:para>Strings can be viewed in hex but because the cmdlet interprets pipeline input of type string to specify a file path you need to use the -InputObject parameter.  See example number three below.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>C:\PS&gt;Format-Hex $pshome\PowerShell.exe -Count 256</dev:code>
        <dev:remarks>
          <maml:para>This displays the first 256 bytes of the PowerShell executable.</maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>C:\PS&gt;[byte[]](1..255) | Format-Hex</dev:code>
        <dev:remarks>
          <maml:para>This examples accepts a byte array as input and displays those byte values in hex and ASCII.</maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>C:\PS&gt;"hello world" | Format-Hex -InputObject {$_}</dev:code>
        <dev:remarks>
          <maml:para>In this scenario the string is always converted to bytes assuming the string encoding is Unicode which is true of PowerShell strings.
          </maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 4 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>C:\PS&gt;"hello world" | Format-Hex -InputObject {$_} -StringEncoding ASCII</dev:code>
        <dev:remarks>
          <maml:para>
            If you want to view the bytes using an alternate encoding then use the -StringEncoding parameter to specify the preferred encoding.
          </maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks />
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>ConvertTo-Metric</command:name>
      <maml:description>
        <maml:para>PSCX Cmdlet: </maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>ConvertTo</command:verb>
      <command:noun>Metric</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>
      </maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>ConvertTo-Metric</maml:name>
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
          <maml:name>Value</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">Double</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
          <maml:name>Unit</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">NonSIUnit</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
        <maml:name>Value</maml:name>
        <maml:description>
          <maml:para>
          </maml:para>
        </maml:description>
        <command:parameterValue required="true">Double</command:parameterValue>
        <dev:type>
          <maml:name>Double</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
        <maml:name>Unit</maml:name>
        <maml:description>
          <maml:para>
          </maml:para>
        </maml:description>
        <command:parameterValue required="true">NonSIUnit</command:parameterValue>
        <dev:type>
          <maml:name>NonSIUnit</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </dev:type>
        <maml:description />
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </dev:type>
        <maml:description />
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:title />
      <maml:alert>
        <maml:para>
        </maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>
        </dev:code>
        <dev:remarks>
          <maml:para>
          </maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks />
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-TypeName</command:name>
      <maml:description>
        <maml:para>PSCX Cmdlet: Get-TypeName displays the typename of the input object.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Get</command:verb>
      <command:noun>TypeName</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>
    Get-TypeName displays the typename of the input object. Normally you would use Get-Member to
    determine this but if you are only interested in the type name
    this filter produces much less output.  Also, since Get-Member
    accumulates multiple instances of the same type into a single output
    record for that type, you don't get any sense of how many objects of
    that type are traversing the pipeline.  With Get-TypeName, you will
    see the type name of *every* object passed into it.  NOTE: If you
    specify any arguments then all pipeline input is ignored. This is
    due to the fact that PowerShell executes the Process function even
    if there isn't any input so it is impossible to distinguish between
    $null pipeline input and no pipeline input.  NOTE: the type name is displayed
    directly to the host so that it doesn't interfere with pipeline operations.
    If you want the original object to pass thru, use the PassThru parameter.
  </maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-TypeName</maml:name>
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="1">
          <maml:name>InputObject</maml:name>
          <maml:description>
            <maml:para>
        The object whose typename you want to know.
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">PSObject</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>FullName</maml:name>
          <maml:description>
            <maml:para>
        Displays the full type name.
      </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PassThru</maml:name>
          <maml:description>
            <maml:para>
        Outputs the original input object and writes the typename to the host.
      </maml:para>
          </maml:description>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="1">
        <maml:name>InputObject</maml:name>
        <maml:description>
          <maml:para>
        The object whose typename you want to know.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">PSObject</command:parameterValue>
        <dev:type>
          <maml:name>PSObject</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        N/A
      </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>FullName</maml:name>
        <maml:description>
          <maml:para>
        Displays the full type name.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>PassThru</maml:name>
        <maml:description>
          <maml:para>
        Outputs the original input object and writes the typename to the host.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>PSObject</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Any object.</maml:para>
          </maml:description>
        </dev:type>
        <maml:description />
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>PSObject</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>If -PassThru is specified</maml:para>
          </maml:description>
        </dev:type>
        <maml:description />
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:title />
      <maml:alert>
        <maml:para>
        </maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>PS&gt; Get-TypeName (Get-Date)</dev:code>
        <dev:remarks>
          <maml:para>Displays the typename for the object returned by the Get-Date cmdlet.</maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>PS&gt; Get-Command Get-* | Get-TypeName</dev:code>
        <dev:remarks>
          <maml:para>Displays the typename for each of the Get cmdlets.</maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>PS&gt; Get-TypeName $PSVersionTable</dev:code>
        <dev:remarks>
          <maml:para>Displays the typename for each of the $PSVersionTable variable.</maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 4 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>PS&gt; $PSVersionTable | Get-TypeName -PassThru | Foreach {$_.PSVersion}</dev:code>
        <dev:remarks>
          <maml:para>Stick Get-TypeName -PassThru in the middle of a pipeline to observe the object types in the pipeline.</maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks />
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-Uptime</command:name>
      <maml:description>
        <maml:para>PSCX Cmdlet: Gets the operating system's uptime and last bootup time.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Get</command:verb>
      <command:noun>Uptime</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>
      Gets the operating system's uptime and last bootup time.
    </maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-Uptime</maml:name>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters />
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </dev:type>
        <maml:description />
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </dev:type>
        <maml:description />
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:title />
      <maml:alert>
        <maml:para>
        </maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>C:\PS&gt; Get-Uptime</dev:code>
        <dev:remarks>
          <maml:para>Get's the operating system's uptime and last bootup time.</maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks />
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Invoke-Apartment</command:name>
      <maml:description>
        <maml:para>PSCX Cmdlet: </maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Invoke</command:verb>
      <command:noun>Apartment</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>
      </maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Invoke-Apartment</maml:name>
        <command:parameter required="true" globbing="false" pipelineInput="false" position="1">
          <maml:name>Apartment</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">ApartmentState</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" globbing="false" pipelineInput="false" position="2">
          <maml:name>Expression</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">ScriptBlock</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" globbing="false" pipelineInput="false" position="1">
        <maml:name>Apartment</maml:name>
        <maml:description>
          <maml:para>
          </maml:para>
        </maml:description>
        <command:parameterValue required="true">ApartmentState</command:parameterValue>
        <dev:type>
          <maml:name>ApartmentState</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" globbing="false" pipelineInput="false" position="2">
        <maml:name>Expression</maml:name>
        <maml:description>
          <maml:para>
          </maml:para>
        </maml:description>
        <command:parameterValue required="true">ScriptBlock</command:parameterValue>
        <dev:type>
          <maml:name>ScriptBlock</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </dev:type>
        <maml:description />
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </dev:type>
        <maml:description />
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:title />
      <maml:alert>
        <maml:para>
        </maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>
        </dev:code>
        <dev:remarks>
          <maml:para>
          </maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks />
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Skip-Object</command:name>
      <maml:description>
        <maml:para>PSCX Cmdlet: Skips the specified objects in the pipeline.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Skip</command:verb>
      <command:noun>Object</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>
         Skips the specified number of objects at the beginning of a sequence and/or the end of a sequence.
    </maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Skip-Object</maml:name>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="1">
          <maml:name>First</maml:name>
          <maml:description>
            <maml:para>
                Skips the selected number of objects at the head of the pipeline sequence.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="2">
          <maml:name>Last</maml:name>
          <maml:description>
            <maml:para>
                Skips the selected number of objects at the tail of the pipeline sequence.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>InputObject</maml:name>
          <maml:description>
            <maml:para>
                Accepts an object as input to the cmdlet. Enter a variable that contains the objects or type a command or expression that gets the objects.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">PSObject</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="3">
          <maml:name>Index</maml:name>
          <maml:description>
            <maml:para>
                Skips objects at the selected indices within the pipeline sequence.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">Int32[]</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="1">
        <maml:name>First</maml:name>
        <maml:description>
          <maml:para>
                Skips the selected number of objects at the head of the pipeline sequence.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">Int32</command:parameterValue>
        <dev:type>
          <maml:name>Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
                0
            </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="2">
        <maml:name>Last</maml:name>
        <maml:description>
          <maml:para>
                Skips the selected number of objects at the tail of the pipeline sequence.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">Int32</command:parameterValue>
        <dev:type>
          <maml:name>Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
                0
            </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>InputObject</maml:name>
        <maml:description>
          <maml:para>
                Accepts an object as input to the cmdlet. Enter a variable that contains the objects or type a command or expression that gets the objects.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">PSObject</command:parameterValue>
        <dev:type>
          <maml:name>PSObject</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="3">
        <maml:name>Index</maml:name>
        <maml:description>
          <maml:para>
                Skips objects at the selected indices within the pipeline sequence.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">Int32[]</command:parameterValue>
        <dev:type>
          <maml:name>Int32[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>Object[]</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </dev:type>
        <maml:description />
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>PSobject</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </dev:type>
        <maml:description />
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:title />
      <maml:alert>
        <maml:para>
        </maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>0..20 | Skip-Object -first 5 -last 2 -index 10,11</dev:code>
        <dev:remarks>
          <maml:para>This command will prevent the first five objects, the last two objects and the objects at index 10 and 11 from being output by the pipeline.</maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks />
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Test-Script</command:name>
      <maml:description>
        <maml:para>PSCX Cmdlet: Determines whether a PowerShell script has any syntax errors.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Test</command:verb>
      <command:noun>Script</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>
        Determines whether a PowerShell script has any syntax errors using the PowerShell script tokenizer.
    </maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Test-Script</maml:name>
        <command:parameter required="true" globbing="true" pipelineInput="true (ByPropertyName)" position="1">
          <maml:name>Path</maml:name>
          <maml:description>
            <maml:para>
                Specifies the path to the file to process. Wildcard syntax is allowed.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Context</maml:name>
          <maml:description>
            <maml:para>
                The number of lines of source script to show before and after the line containing the syntax error.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">Int32[]</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Test-Script</maml:name>
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>InputObject</maml:name>
          <maml:description>
            <maml:para>
                Accepts an object as input to the cmdlet. Enter a variable that contains the objects or type a command or expression that gets the objects.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">PSObject</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Context</maml:name>
          <maml:description>
            <maml:para>
                The number of lines of source script to show before and after the line containing the syntax error.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">Int32[]</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Test-Script</maml:name>
        <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
          <maml:name>LiteralPath</maml:name>
          <maml:description>
            <maml:para>
                Specifies a path to the item. The value of -LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Context</maml:name>
          <maml:description>
            <maml:para>
                The number of lines of source script to show before and after the line containing the syntax error.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">Int32[]</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
        <maml:name>LiteralPath</maml:name>
        <maml:description>
          <maml:para>
                Specifies a path to the item. The value of -LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" globbing="true" pipelineInput="true (ByPropertyName)" position="1">
        <maml:name>Path</maml:name>
        <maml:description>
          <maml:para>
                Specifies the path to the file to process. Wildcard syntax is allowed.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>InputObject</maml:name>
        <maml:description>
          <maml:para>
                Accepts an object as input to the cmdlet. Enter a variable that contains the objects or type a command or expression that gets the objects.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">PSObject</command:parameterValue>
        <dev:type>
          <maml:name>PSObject</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Context</maml:name>
        <maml:description>
          <maml:para>
                The number of lines of source script to show before and after the line containing the syntax error.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">Int32[]</command:parameterValue>
        <dev:type>
          <maml:name>Int32[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>You can pipe a string that contains a path (but not a literal path) to Test-Path.</maml:para>
          </maml:description>
        </dev:type>
        <maml:description />
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>System.Boolean</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>The cmdlet returns "True" when the script has syntax errors and "False" when it does not.</maml:para>
          </maml:description>
        </dev:type>
        <maml:description />
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:title />
      <maml:alert>
        <maml:para>
        </maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>C:\PS&gt; Test-Script foo.ps1</dev:code>
        <dev:remarks>
          <maml:para>Displays syntax errors and returns a boolean indicating if there were.</maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>C:\PS&gt; Test-Script foo.ps1 -WarningAction SilentlyContinue</dev:code>
        <dev:remarks>
          <maml:para>Returns a boolean indicating if there were any syntax errors, suppressing all warnings.</maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>C:\PS&gt; Test-Script foo.ps1 -Context 1</dev:code>
        <dev:remarks>
          <maml:para>Displays syntax errors as well as the line of script before and after the line containing each syntax error.  Returns a boolean indicating if there was a syntax error.</maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks />
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Disconnect-TerminalSession</command:name>
      <maml:description>
        <maml:para>PSCX Cmdlet: Disconnects a specific remote desktop session on a system running Terminal Services/Remote Desktop</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Disconnect</command:verb>
      <command:noun>TerminalSession</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>
         Disconnects a specific remote desktop session on a system running Terminal Services/Remote Desktop
    </maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Disconnect-TerminalSession</maml:name>
        <command:parameter required="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
          <maml:name>ComputerName</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">Int32[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Wait</maml:name>
          <maml:description>
            <maml:para>
                Wait for results before returning.
            </maml:para>
          </maml:description>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
        <maml:name>ComputerName</maml:name>
        <maml:description>
          <maml:para>
          </maml:para>
        </maml:description>
        <command:parameterValue required="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
        <maml:name>Id</maml:name>
        <maml:description>
          <maml:para>
          </maml:para>
        </maml:description>
        <command:parameterValue required="true">Int32[]</command:parameterValue>
        <dev:type>
          <maml:name>Int32[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Wait</maml:name>
        <maml:description>
          <maml:para>
                Wait for results before returning.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </dev:type>
        <maml:description />
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </dev:type>
        <maml:description />
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:title />
      <maml:alert>
        <maml:para>
        </maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>
        </dev:code>
        <dev:remarks>
          <maml:para>
          </maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks />
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-TerminalSession</command:name>
      <maml:description>
        <maml:para>PSCX Cmdlet: Gets information on terminal services sessions.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Get</command:verb>
      <command:noun>TerminalSession</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>
         Gets information on terminal services sessions.
    </maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-TerminalSession</maml:name>
        <command:parameter required="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
          <maml:name>ComputerName</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">Int32[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Resolve</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Wait</maml:name>
          <maml:description>
            <maml:para>
                Wait for results before returning.
            </maml:para>
          </maml:description>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
        <maml:name>ComputerName</maml:name>
        <maml:description>
          <maml:para>
          </maml:para>
        </maml:description>
        <command:parameterValue required="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
        <maml:name>Id</maml:name>
        <maml:description>
          <maml:para>
          </maml:para>
        </maml:description>
        <command:parameterValue required="true">Int32[]</command:parameterValue>
        <dev:type>
          <maml:name>Int32[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Resolve</maml:name>
        <maml:description>
          <maml:para>
          </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Wait</maml:name>
        <maml:description>
          <maml:para>
                Wait for results before returning.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </dev:type>
        <maml:description />
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </dev:type>
        <maml:description />
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:title />
      <maml:alert>
        <maml:para>
        </maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>
        </dev:code>
        <dev:remarks>
          <maml:para>
          </maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks />
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Stop-TerminalSession</command:name>
      <maml:description>
        <maml:para>PSCX Cmdlet: Logs off a specific remote desktop session on a system running Terminal Services/Remote Desktop</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Stop</command:verb>
      <command:noun>TerminalSession</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>
         Logs off a specific remote desktop session on a system running Terminal Services/Remote Desktop
    </maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Stop-TerminalSession</maml:name>
        <command:parameter required="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
          <maml:name>ComputerName</maml:name>
          <maml:description>
            <maml:para>
				Logs off a remote desktop session on the specified computers. The default is the local computer. Type the NETBIOS name, an IP address or a fully-qualified domain name of one or more computers.
			</maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
          <maml:name>Id</maml:name>
          <maml:description>
            <maml:para>
                Identifier of the session to be logged of.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">Int32[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Force</maml:name>
          <maml:description>
            <maml:para>
				Does not ask for confirmation.
			</maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Wait</maml:name>
          <maml:description>
            <maml:para>
                Wait for results before returning.
            </maml:para>
          </maml:description>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
        <maml:name>ComputerName</maml:name>
        <maml:description>
          <maml:para>
				Logs off a remote desktop session on the specified computers. The default is the local computer. Type the NETBIOS name, an IP address or a fully-qualified domain name of one or more computers.
			</maml:para>
        </maml:description>
        <command:parameterValue required="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>localhost</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
        <maml:name>Id</maml:name>
        <maml:description>
          <maml:para>
                Identifier of the session to be logged of.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">Int32[]</command:parameterValue>
        <dev:type>
          <maml:name>Int32[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Force</maml:name>
        <maml:description>
          <maml:para>
				Does not ask for confirmation.
			</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Wait</maml:name>
        <maml:description>
          <maml:para>
                Wait for results before returning.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </dev:type>
        <maml:description />
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </dev:type>
        <maml:description />
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:title />
      <maml:alert>
        <maml:para>
        </maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>
        </dev:code>
        <dev:remarks>
          <maml:para>
          </maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks />
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-PSSnapinHelp</command:name>
      <maml:description>
        <maml:para>PSCX Cmdlet: Generates a XML file containing all documentation data.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Get</command:verb>
      <command:noun>PSSnapinHelp</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>
      Generates a XML file containing all documentation data.
    </maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-PSSnapinHelp</maml:name>
        <command:parameter required="true" globbing="true" pipelineInput="true (ByPropertyName)" position="1">
          <maml:name>Path</maml:name>
          <maml:description>
            <maml:para>
                Specifies the path to the file to process. Wildcard syntax is allowed.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>LocalizedHelpPath</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>OutputPath</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Get-PSSnapinHelp</maml:name>
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>InputObject</maml:name>
          <maml:description>
            <maml:para>
                Accepts an object as input to the cmdlet. Enter a variable that contains the objects or type a command or expression that gets the objects.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">PSObject</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>LocalizedHelpPath</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>OutputPath</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Get-PSSnapinHelp</maml:name>
        <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
          <maml:name>LiteralPath</maml:name>
          <maml:description>
            <maml:para>
                Specifies a path to the item. The value of -LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>LocalizedHelpPath</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>OutputPath</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
        <maml:name>LiteralPath</maml:name>
        <maml:description>
          <maml:para>
                Specifies a path to the item. The value of -LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" globbing="true" pipelineInput="true (ByPropertyName)" position="1">
        <maml:name>Path</maml:name>
        <maml:description>
          <maml:para>
                Specifies the path to the file to process. Wildcard syntax is allowed.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>InputObject</maml:name>
        <maml:description>
          <maml:para>
                Accepts an object as input to the cmdlet. Enter a variable that contains the objects or type a command or expression that gets the objects.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">PSObject</command:parameterValue>
        <dev:type>
          <maml:name>PSObject</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>LocalizedHelpPath</maml:name>
        <maml:description>
          <maml:para>
          </maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>OutputPath</maml:name>
        <maml:description>
          <maml:para>
          </maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:title />
      <maml:alert>
        <maml:para>
        </maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>
        </dev:code>
        <dev:remarks>
          <maml:para>
          </maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks />
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Clear-MSMQueue</command:name>
      <maml:description>
        <maml:para>PSCX Cmdlet: Purges all messages from a queue</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Clear</command:verb>
      <command:noun>MSMQueue</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>
		Purges all messages from a queue
	</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Clear-MSMQueue</maml:name>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Path</maml:name>
          <maml:description>
            <maml:para>
				The queue's path
			</maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Clear-MSMQueue</maml:name>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="1">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>MachineName</maml:name>
          <maml:description>
            <maml:para>
				The name of the computer where the Message Queuing queue is located
			</maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Private</maml:name>
          <maml:description>
            <maml:para>
				The visibility of the queue
			</maml:para>
          </maml:description>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Clear-MSMQueue</maml:name>
        <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Queue</maml:name>
          <maml:description>
            <maml:para>
				MessageQueueInfo object holding the message queue information
			</maml:para>
          </maml:description>
          <command:parameterValue required="true">MessageQueueInfo</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="1">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>
          </maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>MachineName</maml:name>
        <maml:description>
          <maml:para>
				The name of the computer where the Message Queuing queue is located
			</maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Path</maml:name>
        <maml:description>
          <maml:para>
				The queue's path
			</maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Private</maml:name>
        <maml:description>
          <maml:para>
				The visibility of the queue
			</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>Queue</maml:name>
        <maml:description>
          <maml:para>
				MessageQueueInfo object holding the message queue information
			</maml:para>
        </maml:description>
        <command:parameterValue required="true">MessageQueueInfo</command:parameterValue>
        <dev:type>
          <maml:name>MessageQueueInfo</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </dev:type>
        <maml:description />
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </dev:type>
        <maml:description />
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:title />
      <maml:alert>
        <maml:para>
        </maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>
        </dev:code>
        <dev:remarks>
          <maml:para>
          </maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks />
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-MSMQueue</command:name>
      <maml:description>
        <maml:para>PSCX Cmdlet: Returns a list of all queues matching the filter parameters</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Get</command:verb>
      <command:noun>MSMQueue</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>
		Returns a list of all queues matching the filter parameters
	</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-MSMQueue</maml:name>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="1">
          <maml:name>QueueName</maml:name>
          <maml:description>
            <maml:para>
				Filter by queue name
			</maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Category</maml:name>
          <maml:description>
            <maml:para>
				Filter by category
			</maml:para>
          </maml:description>
          <command:parameterValue required="true">Nullable`1</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>CreatedAfter</maml:name>
          <maml:description>
            <maml:para>
				Filter by creation date
			</maml:para>
          </maml:description>
          <command:parameterValue required="true">Nullable`1</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>CreatedBefore</maml:name>
          <maml:description>
            <maml:para>
				Filter by creation date
			</maml:para>
          </maml:description>
          <command:parameterValue required="true">Nullable`1</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Label</maml:name>
          <maml:description>
            <maml:para>
				Filter by label
			</maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>MachineName</maml:name>
          <maml:description>
            <maml:para>
				Filter by machine name
			</maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ModifiedAfter</maml:name>
          <maml:description>
            <maml:para>
				Filter by modification date
			</maml:para>
          </maml:description>
          <command:parameterValue required="true">Nullable`1</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ModifiedBefore</maml:name>
          <maml:description>
            <maml:para>
				Filter by modification date
			</maml:para>
          </maml:description>
          <command:parameterValue required="true">Nullable`1</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Path</maml:name>
          <maml:description>
            <maml:para>
				Filter by queue path
			</maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Private</maml:name>
          <maml:description>
            <maml:para>
				Return only private queues
			</maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Public</maml:name>
          <maml:description>
            <maml:para>
				Return only public queues
			</maml:para>
          </maml:description>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="1">
        <maml:name>QueueName</maml:name>
        <maml:description>
          <maml:para>
				Filter by queue name
			</maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Category</maml:name>
        <maml:description>
          <maml:para>
				Filter by category
			</maml:para>
        </maml:description>
        <command:parameterValue required="true">Nullable`1</command:parameterValue>
        <dev:type>
          <maml:name>Nullable`1</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>CreatedAfter</maml:name>
        <maml:description>
          <maml:para>
				Filter by creation date
			</maml:para>
        </maml:description>
        <command:parameterValue required="true">Nullable`1</command:parameterValue>
        <dev:type>
          <maml:name>Nullable`1</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>CreatedBefore</maml:name>
        <maml:description>
          <maml:para>
				Filter by creation date
			</maml:para>
        </maml:description>
        <command:parameterValue required="true">Nullable`1</command:parameterValue>
        <dev:type>
          <maml:name>Nullable`1</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Label</maml:name>
        <maml:description>
          <maml:para>
				Filter by label
			</maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>MachineName</maml:name>
        <maml:description>
          <maml:para>
				Filter by machine name
			</maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>ModifiedAfter</maml:name>
        <maml:description>
          <maml:para>
				Filter by modification date
			</maml:para>
        </maml:description>
        <command:parameterValue required="true">Nullable`1</command:parameterValue>
        <dev:type>
          <maml:name>Nullable`1</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>ModifiedBefore</maml:name>
        <maml:description>
          <maml:para>
				Filter by modification date
			</maml:para>
        </maml:description>
        <command:parameterValue required="true">Nullable`1</command:parameterValue>
        <dev:type>
          <maml:name>Nullable`1</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Path</maml:name>
        <maml:description>
          <maml:para>
				Filter by queue path
			</maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Private</maml:name>
        <maml:description>
          <maml:para>
				Return only private queues
			</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Public</maml:name>
        <maml:description>
          <maml:para>
				Return only public queues
			</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </dev:type>
        <maml:description />
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>MessageQueueInfo</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>A MessageQueueInfo object holding information of the newly created queue.</maml:para>
          </maml:description>
        </dev:type>
        <maml:description />
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:title />
      <maml:alert>
        <maml:para>
        </maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>
        </dev:code>
        <dev:remarks>
          <maml:para>
          </maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks />
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>New-MSMQueue</command:name>
      <maml:description>
        <maml:para>PSCX Cmdlet: Creates a new queue object with the defined properties</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>New</command:verb>
      <command:noun>MSMQueue</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>
		Creates a new queue object with the defined properties
	</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>New-MSMQueue</maml:name>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Force</maml:name>
          <maml:description>
            <maml:para>
				Force the creation of the queue, even if a queue already exists with the given name
			</maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Path</maml:name>
          <maml:description>
            <maml:para>
				The queue's path
			</maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Transactional</maml:name>
          <maml:description>
            <maml:para>
				Create a transactional queue. If true, the queue will accept only messages sent as part of a transaction.
			</maml:para>
          </maml:description>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>New-MSMQueue</maml:name>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="1">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Force</maml:name>
          <maml:description>
            <maml:para>
				Force the creation of the queue, even if a queue already exists with the given name
			</maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>MachineName</maml:name>
          <maml:description>
            <maml:para>
				The name of the computer where the Message Queuing queue is located
			</maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Private</maml:name>
          <maml:description>
            <maml:para>
				The visibility of the queue
			</maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Transactional</maml:name>
          <maml:description>
            <maml:para>
				Create a transactional queue. If true, the queue will accept only messages sent as part of a transaction.
			</maml:para>
          </maml:description>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>New-MSMQueue</maml:name>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Force</maml:name>
          <maml:description>
            <maml:para>
				Force the creation of the queue, even if a queue already exists with the given name
			</maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Queue</maml:name>
          <maml:description>
            <maml:para>
				MessageQueueInfo object holding the message queue information
			</maml:para>
          </maml:description>
          <command:parameterValue required="true">MessageQueueInfo</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Transactional</maml:name>
          <maml:description>
            <maml:para>
				Create a transactional queue. If true, the queue will accept only messages sent as part of a transaction.
			</maml:para>
          </maml:description>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="1">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>
          </maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Force</maml:name>
        <maml:description>
          <maml:para>
				Force the creation of the queue, even if a queue already exists with the given name
			</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>MachineName</maml:name>
        <maml:description>
          <maml:para>
				The name of the computer where the Message Queuing queue is located
			</maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Path</maml:name>
        <maml:description>
          <maml:para>
				The queue's path
			</maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Private</maml:name>
        <maml:description>
          <maml:para>
				The visibility of the queue
			</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>Queue</maml:name>
        <maml:description>
          <maml:para>
				MessageQueueInfo object holding the message queue information
			</maml:para>
        </maml:description>
        <command:parameterValue required="true">MessageQueueInfo</command:parameterValue>
        <dev:type>
          <maml:name>MessageQueueInfo</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Transactional</maml:name>
        <maml:description>
          <maml:para>
				Create a transactional queue. If true, the queue will accept only messages sent as part of a transaction.
			</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </dev:type>
        <maml:description />
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </dev:type>
        <maml:description />
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:title />
      <maml:alert>
        <maml:para>
        </maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>
        </dev:code>
        <dev:remarks>
          <maml:para>
          </maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks />
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Receive-MSMQueue</command:name>
      <maml:description>
        <maml:para>PSCX Cmdlet: Receives the first message available in the queue. This call is synchronous, and blocks the current thread of execution until a message is available.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Receive</command:verb>
      <command:noun>MSMQueue</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>
		Receives the first message available in the queue. This call is synchronous, and blocks the current thread of execution and waits until either a message is available in the queue, or the time-out expires.
	</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Receive-MSMQueue</maml:name>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Formatter</maml:name>
          <maml:description>
            <maml:para>
				The formatter used to serialize an object into or deserialize an object from the body of a message read from or written to the queue. If supplied, TargetType property will be ignored.
			</maml:para>
          </maml:description>
          <command:parameterValue required="true">IMessageFormatter</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Path</maml:name>
          <maml:description>
            <maml:para>
				The queue's path
			</maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Peek</maml:name>
          <maml:description>
            <maml:para>
				If present, returns without removing (peeks) the first message in the queue.
			</maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>TargetType</maml:name>
          <maml:description>
            <maml:para>
				Type of object to convert the message body to, using an XMLFormatter. If Formatter property is provided, this property will be ignored.
			</maml:para>
          </maml:description>
          <command:parameterValue required="true">Type</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Timeout</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">TimeSpan</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Receive-MSMQueue</maml:name>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="1">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Formatter</maml:name>
          <maml:description>
            <maml:para>
				The formatter used to serialize an object into or deserialize an object from the body of a message read from or written to the queue. If supplied, TargetType property will be ignored.
			</maml:para>
          </maml:description>
          <command:parameterValue required="true">IMessageFormatter</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>MachineName</maml:name>
          <maml:description>
            <maml:para>
				The name of the computer where the Message Queuing queue is located
			</maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Peek</maml:name>
          <maml:description>
            <maml:para>
				If present, returns without removing (peeks) the first message in the queue.
			</maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Private</maml:name>
          <maml:description>
            <maml:para>
				The visibility of the queue
			</maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>TargetType</maml:name>
          <maml:description>
            <maml:para>
				Type of object to convert the message body to, using an XMLFormatter. If Formatter property is provided, this property will be ignored.
			</maml:para>
          </maml:description>
          <command:parameterValue required="true">Type</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Timeout</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">TimeSpan</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Receive-MSMQueue</maml:name>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Formatter</maml:name>
          <maml:description>
            <maml:para>
				The formatter used to serialize an object into or deserialize an object from the body of a message read from or written to the queue. If supplied, TargetType property will be ignored.
			</maml:para>
          </maml:description>
          <command:parameterValue required="true">IMessageFormatter</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Peek</maml:name>
          <maml:description>
            <maml:para>
				If present, returns without removing (peeks) the first message in the queue.
			</maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Queue</maml:name>
          <maml:description>
            <maml:para>
				MessageQueueInfo object holding the message queue information
			</maml:para>
          </maml:description>
          <command:parameterValue required="true">MessageQueueInfo</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>TargetType</maml:name>
          <maml:description>
            <maml:para>
				Type of object to convert the message body to, using an XMLFormatter. If Formatter property is provided, this property will be ignored.
			</maml:para>
          </maml:description>
          <command:parameterValue required="true">Type</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Timeout</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">TimeSpan</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="1">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>
          </maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Formatter</maml:name>
        <maml:description>
          <maml:para>
				The formatter used to serialize an object into or deserialize an object from the body of a message read from or written to the queue. If supplied, TargetType property will be ignored.
			</maml:para>
        </maml:description>
        <command:parameterValue required="true">IMessageFormatter</command:parameterValue>
        <dev:type>
          <maml:name>IMessageFormatter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>MachineName</maml:name>
        <maml:description>
          <maml:para>
				The name of the computer where the Message Queuing queue is located
			</maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Path</maml:name>
        <maml:description>
          <maml:para>
				The queue's path
			</maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Peek</maml:name>
        <maml:description>
          <maml:para>
				If present, returns without removing (peeks) the first message in the queue.
			</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Private</maml:name>
        <maml:description>
          <maml:para>
				The visibility of the queue
			</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>Queue</maml:name>
        <maml:description>
          <maml:para>
				MessageQueueInfo object holding the message queue information
			</maml:para>
        </maml:description>
        <command:parameterValue required="true">MessageQueueInfo</command:parameterValue>
        <dev:type>
          <maml:name>MessageQueueInfo</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>TargetType</maml:name>
        <maml:description>
          <maml:para>
				Type of object to convert the message body to, using an XMLFormatter. If Formatter property is provided, this property will be ignored.
			</maml:para>
        </maml:description>
        <command:parameterValue required="true">Type</command:parameterValue>
        <dev:type>
          <maml:name>Type</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Timeout</maml:name>
        <maml:description>
          <maml:para>
          </maml:para>
        </maml:description>
        <command:parameterValue required="true">TimeSpan</command:parameterValue>
        <dev:type>
          <maml:name>TimeSpan</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </dev:type>
        <maml:description />
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>An object deserialized from the body of the message.</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>An object deserialized from the body of the message, or null if no message is present.</maml:para>
          </maml:description>
        </dev:type>
        <maml:description />
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:title />
      <maml:alert>
        <maml:para>
        </maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>
        </dev:code>
        <dev:remarks>
          <maml:para>
          </maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks />
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Send-MSMQueue</command:name>
      <maml:description>
        <maml:para>PSCX Cmdlet: Wraps an object in a Message, and places it onto the defined queue.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Send</command:verb>
      <command:noun>MSMQueue</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>
		Wraps an object in a Message, and places it onto the defined queue.
	</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Send-MSMQueue</maml:name>
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>InputObject</maml:name>
          <maml:description>
            <maml:para>
				Object to place on the queue. Will be wrapped in a MessageQueue object.
			</maml:para>
          </maml:description>
          <command:parameterValue required="true">PSObject</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
          <maml:name>Label</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Path</maml:name>
          <maml:description>
            <maml:para>
				The queue's path
			</maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
          <maml:name>Recoverable</maml:name>
          <maml:description>
            <maml:para>
				Indicates whether the message is guaranteed to be delivered in the event of a computer failure or network problem
			</maml:para>
          </maml:description>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Send-MSMQueue</maml:name>
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>InputObject</maml:name>
          <maml:description>
            <maml:para>
				Object to place on the queue. Will be wrapped in a MessageQueue object.
			</maml:para>
          </maml:description>
          <command:parameterValue required="true">PSObject</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="1">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
          <maml:name>Label</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>MachineName</maml:name>
          <maml:description>
            <maml:para>
				The name of the computer where the Message Queuing queue is located
			</maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Private</maml:name>
          <maml:description>
            <maml:para>
				The visibility of the queue
			</maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
          <maml:name>Recoverable</maml:name>
          <maml:description>
            <maml:para>
				Indicates whether the message is guaranteed to be delivered in the event of a computer failure or network problem
			</maml:para>
          </maml:description>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Send-MSMQueue</maml:name>
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>InputObject</maml:name>
          <maml:description>
            <maml:para>
				Object to place on the queue. Will be wrapped in a MessageQueue object.
			</maml:para>
          </maml:description>
          <command:parameterValue required="true">PSObject</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
          <maml:name>Label</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Queue</maml:name>
          <maml:description>
            <maml:para>
				MessageQueueInfo object holding the message queue information
			</maml:para>
          </maml:description>
          <command:parameterValue required="true">MessageQueueInfo</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
          <maml:name>Recoverable</maml:name>
          <maml:description>
            <maml:para>
				Indicates whether the message is guaranteed to be delivered in the event of a computer failure or network problem
			</maml:para>
          </maml:description>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>InputObject</maml:name>
        <maml:description>
          <maml:para>
				Object to place on the queue. Will be wrapped in a MessageQueue object.
			</maml:para>
        </maml:description>
        <command:parameterValue required="true">PSObject</command:parameterValue>
        <dev:type>
          <maml:name>PSObject</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="1">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>
          </maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
        <maml:name>Label</maml:name>
        <maml:description>
          <maml:para>
          </maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>MachineName</maml:name>
        <maml:description>
          <maml:para>
				The name of the computer where the Message Queuing queue is located
			</maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Path</maml:name>
        <maml:description>
          <maml:para>
				The queue's path
			</maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Private</maml:name>
        <maml:description>
          <maml:para>
				The visibility of the queue
			</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>Queue</maml:name>
        <maml:description>
          <maml:para>
				MessageQueueInfo object holding the message queue information
			</maml:para>
        </maml:description>
        <command:parameterValue required="true">MessageQueueInfo</command:parameterValue>
        <dev:type>
          <maml:name>MessageQueueInfo</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
        <maml:name>Recoverable</maml:name>
        <maml:description>
          <maml:para>
				Indicates whether the message is guaranteed to be delivered in the event of a computer failure or network problem
			</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </dev:type>
        <maml:description />
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </dev:type>
        <maml:description />
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:title />
      <maml:alert>
        <maml:para>
        </maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>
        </dev:code>
        <dev:remarks>
          <maml:para>
          </maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks />
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Test-MSMQueue</command:name>
      <maml:description>
        <maml:para>PSCX Cmdlet: </maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Test</command:verb>
      <command:noun>MSMQueue</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>
      </maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Test-MSMQueue</maml:name>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Path</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Test-MSMQueue</maml:name>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="1">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>MachineName</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Private</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Test-MSMQueue</maml:name>
        <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Queue</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">MessageQueueInfo</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="1">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>
          </maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>MachineName</maml:name>
        <maml:description>
          <maml:para>
          </maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Path</maml:name>
        <maml:description>
          <maml:para>
          </maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Private</maml:name>
        <maml:description>
          <maml:para>
          </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>Queue</maml:name>
        <maml:description>
          <maml:para>
          </maml:para>
        </maml:description>
        <command:parameterValue required="true">MessageQueueInfo</command:parameterValue>
        <dev:type>
          <maml:name>MessageQueueInfo</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </dev:type>
        <maml:description />
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </dev:type>
        <maml:description />
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:title />
      <maml:alert>
        <maml:para>
        </maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>
        </dev:code>
        <dev:remarks>
          <maml:para>
          </maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks />
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Add-PathVariable</command:name>
      <maml:description>
        <maml:para>PSCX Cmdlet: Adds the specified paths to the end of the named, path-oriented environment variable.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Add</command:verb>
      <command:noun>PathVariable</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>
    Adds the specified paths to the end of the named, path-oriented environment variable by taking the paths specified by the Value parameter and concatenating them into a semi-colon separated string.  The paths can be prepended to the environment variable by using the -Prepend switch parameter.
  </maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Add-PathVariable</maml:name>
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="1">
          <maml:name>Value</maml:name>
          <maml:description>
            <maml:para>
        The paths to concat together with semi-colon separators.
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>
        The name of the environment variable to add to.  Typically either Path (default), Lib, Include, etc.
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Prepend</maml:name>
          <maml:description>
            <maml:para>
        The specified paths will be prepended to the environment variable instead of appended.
      </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Target</maml:name>
          <maml:description>
            <maml:para>
        Specifies which target scope to modify.  The valid values are Process (default), User or Machine.  Using either the User or the Machine target scope will cause the new value to persist.
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">EnvironmentVariableTarget</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="1">
        <maml:name>Value</maml:name>
        <maml:description>
          <maml:para>
        The paths to concat together with semi-colon separators.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>
        The name of the environment variable to add to.  Typically either Path (default), Lib, Include, etc.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        Path
      </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Prepend</maml:name>
        <maml:description>
          <maml:para>
        The specified paths will be prepended to the environment variable instead of appended.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        False
      </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Target</maml:name>
        <maml:description>
          <maml:para>
        Specifies which target scope to modify.  The valid values are Process (default), User or Machine.  Using either the User or the Machine target scope will cause the new value to persist.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">EnvironmentVariableTarget</command:parameterValue>
        <dev:type>
          <maml:name>EnvironmentVariableTarget</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        Process
      </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </dev:type>
        <maml:description />
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </dev:type>
        <maml:description />
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:title />
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>Add-PathVariable Lib C:\Lib, C:\ProjA\Lib</dev:code>
        <dev:remarks>
          <maml:para>Adds the specified paths to the end of current Lib environment variable setting (creating it if necessary) in the Process scope.</maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>Add-PathVariable Lib C:\Lib, C:\ProjA\Lib -Target User</dev:code>
        <dev:remarks>
          <maml:para>Adds the specified paths to the end of current Lib environment variable setting (creating it if necessary) in the User scope.</maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Get-PathVariable</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-PathVariable</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Pop-EnvironmentBlock</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Push-EnvironmentBlock</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-EnvironmentBlock</command:name>
      <maml:description>
        <maml:para>PSCX Cmdlet: Lists the environment blocks stored on the environment block stack.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Get</command:verb>
      <command:noun>EnvironmentBlock</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>
      Lists the environment blocks stored on the environment block stack.
    </maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-EnvironmentBlock</maml:name>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters />
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </dev:type>
        <maml:description />
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </dev:type>
        <maml:description />
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:title />
      <maml:alert>
        <maml:para>
        </maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>
        </dev:code>
        <dev:remarks>
          <maml:para>
          </maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Add-PathVariable</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-PathVariable</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-PathVariable</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Pop-EnvironmentBlock</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Push-EnvironmentBlock</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-PathVariable</command:name>
      <maml:description>
        <maml:para>PSCX Cmdlet: Gets the specified path-oriented environment variable.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Get</command:verb>
      <command:noun>PathVariable</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>
    Gets the specified path-oriented environment variable and outputs an array of strings.  One string for each path.  The environment variable string is split a semi-colon and you can option specify that empty paths be removed and unnecessary quotes be removed from each path.
  </maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-PathVariable</maml:name>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="1">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>
        The name of the environment variable to get.  Typically either Path, Lib, Include, etc.
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>RemoveEmptyPaths</maml:name>
          <maml:description>
            <maml:para>
        Empty paths, as represented by back-to-back semi-colons will be removed from the output.
      </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>StripQuotes</maml:name>
          <maml:description>
            <maml:para>
        Removes unnecessary quotes from each path. Most path-oriented environments variables do not require quotes around paths (even those paths with spaces in them).  Since the semi-colon is not a valid path character it is sufficient to mark the beginning and ending of a path.
      </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Target</maml:name>
          <maml:description>
            <maml:para>
        Specifies which target scope to get: Process (default), User or Machine.
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">EnvironmentVariableTarget</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="1">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>
        The name of the environment variable to get.  Typically either Path, Lib, Include, etc.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>RemoveEmptyPaths</maml:name>
        <maml:description>
          <maml:para>
        Empty paths, as represented by back-to-back semi-colons will be removed from the output.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        False
      </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>StripQuotes</maml:name>
        <maml:description>
          <maml:para>
        Removes unnecessary quotes from each path. Most path-oriented environments variables do not require quotes around paths (even those paths with spaces in them).  Since the semi-colon is not a valid path character it is sufficient to mark the beginning and ending of a path.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        False
      </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Target</maml:name>
        <maml:description>
          <maml:para>
        Specifies which target scope to get: Process (default), User or Machine.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">EnvironmentVariableTarget</command:parameterValue>
        <dev:type>
          <maml:name>EnvironmentVariableTarget</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        Process
      </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </dev:type>
        <maml:description />
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </dev:type>
        <maml:description />
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:title />
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>Get-PathVariable Path</dev:code>
        <dev:remarks>
          <maml:para>Gets the Path environment variable from the Process scope as an array of strings.</maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>Get-PathVariable Path -Target User</dev:code>
        <dev:remarks>
          <maml:para>Gets the Path environment variable as it is configured in the User scope.</maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>Get-PathVariable Path -RemoveEmptyPaths -StripQuotes -Target Machine | Set-PathVariable Path -Target Machine</dev:code>
        <dev:remarks>
          <maml:para>Gets the Machine scope Path environment variable while removing unnecessary quotes and empty paths and then sets it to the updated value. This enviornment variable will be persisted across PowerShell sessions.</maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Add-PathVariable</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-PathVariable</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Pop-EnvironmentBlock</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Push-EnvironmentBlock</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Pop-EnvironmentBlock</command:name>
      <maml:description>
        <maml:para>PSCX Cmdlet: Pops the topmost environment block.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Pop</command:verb>
      <command:noun>EnvironmentBlock</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>
    Pops the environment block and restores the state of all environment variables to the values stored in the environment block.
  </maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Pop-EnvironmentBlock</maml:name>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters />
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </dev:type>
        <maml:description />
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </dev:type>
        <maml:description />
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:title />
      <maml:alert>
        <maml:para>
        </maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>C:\&gt; Pop-EnvironmentBlock</dev:code>
        <dev:remarks>
          <maml:para>Restores the current set of environment variables from the set at the top of the environment block stack.</maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Add-PathVariable</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-PathVariable</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-PathVariable</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Push-EnvironmentBlock</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Push-EnvironmentBlock</command:name>
      <maml:description>
        <maml:para>PSCX Cmdlet: Pushes the current environment onto the environment block stack.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Push</command:verb>
      <command:noun>EnvironmentBlock</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>
    Stores the state of all environment variables into an environment block and pushes that onto the environment block stack.
  </maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Push-EnvironmentBlock</maml:name>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Description</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Description</maml:name>
        <maml:description>
          <maml:para>
          </maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </dev:type>
        <maml:description />
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </dev:type>
        <maml:description />
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:title />
      <maml:alert>
        <maml:para>
        </maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>C:\&gt; Push-EnvironmentBlock -Description "Before loading VS 2010 env vars"</dev:code>
        <dev:remarks>
          <maml:para>
          </maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Add-PathVariable</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-PathVariable</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-PathVariable</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Pop-EnvironmentBlock</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Set-PathVariable</command:name>
      <maml:description>
        <maml:para>PSCX Cmdlet: Sets the specified path-oriented environment variable.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Set</command:verb>
      <command:noun>PathVariable</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>
    Sets the specified path-oriented environment variable by taking the paths specified by the Value parameter and concatenating them into a semi-colon separated string.
  </maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Set-PathVariable</maml:name>
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="1">
          <maml:name>Value</maml:name>
          <maml:description>
            <maml:para>
        The paths to concat together with semi-colon separators.
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>
        The name of the environment variable to set.  Typically either Path (default), Lib, Include, etc.
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Target</maml:name>
          <maml:description>
            <maml:para>
        Specifies which target scope to modify.  The valid values are Process (default), User or Machine.  Using either the User or the Machine target scope will cause the new value to persist.
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">EnvironmentVariableTarget</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="1">
        <maml:name>Value</maml:name>
        <maml:description>
          <maml:para>
        The paths to concat together with semi-colon separators.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>
        The name of the environment variable to set.  Typically either Path (default), Lib, Include, etc.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        Path
      </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Target</maml:name>
        <maml:description>
          <maml:para>
        Specifies which target scope to modify.  The valid values are Process (default), User or Machine.  Using either the User or the Machine target scope will cause the new value to persist.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">EnvironmentVariableTarget</command:parameterValue>
        <dev:type>
          <maml:name>EnvironmentVariableTarget</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        Process
      </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </dev:type>
        <maml:description />
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </dev:type>
        <maml:description />
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:title />
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>Set-PathVariable Lib C:\Lib, C:\ProjA\Lib</dev:code>
        <dev:remarks>
          <maml:para>Sets the Lib environment variable (creating it if necessary) to the value "C:\Lib;C:\ProjA\Lib" in the Process scope.</maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>Set-PathVariable Lib C:\Lib, C:\ProjA\Lib -Target User</dev:code>
        <dev:remarks>
          <maml:para>Sets the Lib environment variable (creating it if necessary) to the value "C:\Lib;C:\ProjA\Lib" in the User scope.  This enviornment variable will be persisted across PowerShell sessions.</maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>Get-PathVariable Path -RemoveEmptyPaths -StripQuotes -Target Machine | Set-PathVariable Path -Target Machine</dev:code>
        <dev:remarks>
          <maml:para>Gets the Machine scope Path environment variable while removing unnecessary quotes and empty paths and then sets it to the updated value. This enviornment variable will be persisted across PowerShell sessions.</maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Add-PathVariable</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-PathVariable</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Pop-EnvironmentBlock</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Push-EnvironmentBlock</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-ADObject</command:name>
      <maml:description>
        <maml:para>PSCX Cmdlet: Search for objects in the Active Directory/Global Catalog.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Get</command:verb>
      <command:noun>ADObject</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>
    Search for objects in the Active Directory/Global Catalog.
  </maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-ADObject</maml:name>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Class</maml:name>
          <maml:description>
            <maml:para>
        Result returns only objects form the selected classes.
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">ObjectClass[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Credential</maml:name>
          <maml:description>
            <maml:para>
        Specifies credentials required to authenticate on the domain controller.
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">PSCredential</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>DistinguishedName</maml:name>
          <maml:description>
            <maml:para>
        Specify the search path (Format: distinguished name  e.g. "DC=some,DC=domain,DC=xx")
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Domain</maml:name>
          <maml:description>
            <maml:para>
        Specify the domain name for the search. (Format: canonical name  e.g. some.domain.xx)
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Filter</maml:name>
          <maml:description>
            <maml:para>
        Specify the search filter
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>GlobalCatalog</maml:name>
          <maml:description>
            <maml:para>
        Use Global Catalog for the search
      </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PageSize</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Scope</maml:name>
          <maml:description>
            <maml:para>
        Search scope
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">SearchScope</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Server</maml:name>
          <maml:description>
            <maml:para>
        Send the request to this active directory domain controller.
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SizeLimit</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="true" pipelineInput="false" position="named">
          <maml:name>Value</maml:name>
          <maml:description>
            <maml:para>
        Search string. Wildcards are permitted.
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Class</maml:name>
        <maml:description>
          <maml:para>
        Result returns only objects form the selected classes.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">ObjectClass[]</command:parameterValue>
        <dev:type>
          <maml:name>ObjectClass[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Credential</maml:name>
        <maml:description>
          <maml:para>
        Specifies credentials required to authenticate on the domain controller.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">PSCredential</command:parameterValue>
        <dev:type>
          <maml:name>PSCredential</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>DistinguishedName</maml:name>
        <maml:description>
          <maml:para>
        Specify the search path (Format: distinguished name  e.g. "DC=some,DC=domain,DC=xx")
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Domain</maml:name>
        <maml:description>
          <maml:para>
        Specify the domain name for the search. (Format: canonical name  e.g. some.domain.xx)
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        Logon domain from the user.
      </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Filter</maml:name>
        <maml:description>
          <maml:para>
        Specify the search filter
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>GlobalCatalog</maml:name>
        <maml:description>
          <maml:para>
        Use Global Catalog for the search
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        False
      </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>PageSize</maml:name>
        <maml:description>
          <maml:para>
          </maml:para>
        </maml:description>
        <command:parameterValue required="true">Int32</command:parameterValue>
        <dev:type>
          <maml:name>Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Scope</maml:name>
        <maml:description>
          <maml:para>
        Search scope
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">SearchScope</command:parameterValue>
        <dev:type>
          <maml:name>SearchScope</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        Subtree
      </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Server</maml:name>
        <maml:description>
          <maml:para>
        Send the request to this active directory domain controller.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>SizeLimit</maml:name>
        <maml:description>
          <maml:para>
          </maml:para>
        </maml:description>
        <command:parameterValue required="true">Int32</command:parameterValue>
        <dev:type>
          <maml:name>Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="true" pipelineInput="false" position="named">
        <maml:name>Value</maml:name>
        <maml:description>
          <maml:para>
        Search string. Wildcards are permitted.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:title />
      <maml:alert>
        <maml:para>
        Using this cmdlet without a parameter will return all Active Directory objects from
        the current domain. Depending on the size of the logon domain this operation can take
        longer.
      </maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>PS&gt; Get-AdObject -domain example.com -class user</dev:code>
        <dev:remarks>
          <maml:para>This command displays all Active Directory user from the domain example.com.</maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>PS&gt; Get-ADObject -value "*user*"</dev:code>
        <dev:remarks>
          <maml:para>This command returns all Active Directory objects that contain the word "user".</maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>PS&gt; Get-ADObject -filter "(&amp;(mail=*user*)(sn=*user*))"</dev:code>
        <dev:remarks>
          <maml:para>This command returns all Active Directory objects that contain the word "user" 
        within the e-mail and surename fields.</maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks />
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-DhcpServer</command:name>
      <maml:description>
        <maml:para>PSCX Cmdlet: Gets a list of authorized DHCP servers.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Get</command:verb>
      <command:noun>DhcpServer</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>
         Gets a list of authorized DHCP servers.
    </maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-DhcpServer</maml:name>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Credential</maml:name>
          <maml:description>
            <maml:para>
                Specifies credentials required to authenticate on the domain controller.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">PSCredential</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Server</maml:name>
          <maml:description>
            <maml:para>
                Send the request to this active directory domain controller.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Credential</maml:name>
        <maml:description>
          <maml:para>
                Specifies credentials required to authenticate on the domain controller.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">PSCredential</command:parameterValue>
        <dev:type>
          <maml:name>PSCredential</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Server</maml:name>
        <maml:description>
          <maml:para>
                Send the request to this active directory domain controller.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:title />
      <maml:alert>
        <maml:para>
        </maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>
        </dev:code>
        <dev:remarks>
          <maml:para>
          </maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks />
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-DomainController</command:name>
      <maml:description>
        <maml:para>PSCX Cmdlet: Gets domain controllers.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Get</command:verb>
      <command:noun>DomainController</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>
    Gets all domain controllers at the specified scope. 
  </maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-DomainController</maml:name>
        <command:parameter required="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>
        Name of the server, site, domain, or forest.
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Credential</maml:name>
          <maml:description>
            <maml:para>
        Specifies credentials required to authenticate on the domain controller.
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">PSCredential</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Server</maml:name>
          <maml:description>
            <maml:para>
        Returns specified domain controller. When no server specified, returns the domain controller which authenticated the current session.
      </maml:para>
          </maml:description>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Get-DomainController</maml:name>
        <command:parameter required="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>
        Name of the server, site, domain, or forest.
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Credential</maml:name>
          <maml:description>
            <maml:para>
        Specifies credentials required to authenticate on the domain controller.
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">PSCredential</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Site</maml:name>
          <maml:description>
            <maml:para>
        Returns all domain controllers in the specified site. When no site specified, returns all domain controllers in the site this machine is member of.
      </maml:para>
          </maml:description>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Get-DomainController</maml:name>
        <command:parameter required="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>
        Name of the server, site, domain, or forest.
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Credential</maml:name>
          <maml:description>
            <maml:para>
        Specifies credentials required to authenticate on the domain controller.
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">PSCredential</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Domain</maml:name>
          <maml:description>
            <maml:para>
        Returns all domain controllers in the specified domain. When no domain specified, returns all domain controllers in the current domain.
      </maml:para>
          </maml:description>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Get-DomainController</maml:name>
        <command:parameter required="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>
        Name of the server, site, domain, or forest.
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Credential</maml:name>
          <maml:description>
            <maml:para>
        Specifies credentials required to authenticate on the domain controller.
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">PSCredential</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Forest</maml:name>
          <maml:description>
            <maml:para>
        Returns all domain controllers in the specified forest. When no forest specified, returns all domain controllers in the forest.
      </maml:para>
          </maml:description>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" globbing="false" pipelineInput="true (ByValue, ByPropertyName)" position="1">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>
        Name of the server, site, domain, or forest.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Credential</maml:name>
        <maml:description>
          <maml:para>
        Specifies credentials required to authenticate on the domain controller.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">PSCredential</command:parameterValue>
        <dev:type>
          <maml:name>PSCredential</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Domain</maml:name>
        <maml:description>
          <maml:para>
        Returns all domain controllers in the specified domain. When no domain specified, returns all domain controllers in the current domain.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Forest</maml:name>
        <maml:description>
          <maml:para>
        Returns all domain controllers in the specified forest. When no forest specified, returns all domain controllers in the forest.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Server</maml:name>
        <maml:description>
          <maml:para>
        Returns specified domain controller. When no server specified, returns the domain controller which authenticated the current session.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Site</maml:name>
        <maml:description>
          <maml:para>
        Returns all domain controllers in the specified site. When no site specified, returns all domain controllers in the site this machine is member of.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes />
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:title />
      <maml:alert>
        <maml:para>
        </maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>Get-DomainController</dev:code>
        <dev:remarks>
          <maml:para>Gets the domain controller that authenticated the current session.</maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>Get-DomainController -Domain Europe</dev:code>
        <dev:remarks>
          <maml:para>Gets all domain controllers in the EUROPE domain.</maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>Get-DomainController -Site</dev:code>
        <dev:remarks>
          <maml:para>Gets all domain controllers in the site this computer is in.</maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks />
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-AdoConnection</command:name>
      <maml:description>
        <maml:para>PSCX Cmdlet: Create an ADO connection to any database supported by .NET on the current machine. You can enumerate available ADO.NET Data Providers with the Get-AdoDataProvider Cmdlet.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Get</command:verb>
      <command:noun>AdoConnection</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>Create an ADO connection to any database supported by .NET on the current machine. You can enumerate available ADO.NET Data Providers with the Get-AdoDataProvider Cmdlet.Data connections to supported providers are constructed using provider-agnostic common parameters like Server, Username, Password etc.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-AdoConnection</maml:name>
        <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
          <maml:name>ProviderName</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" globbing="false" pipelineInput="false" position="2">
          <maml:name>ConnectionProperties</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">Hashtable</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Get-AdoConnection</maml:name>
        <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
          <maml:name>ProviderName</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" globbing="false" pipelineInput="false" position="2">
          <maml:name>ConnectionString</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Get-AdoConnection</maml:name>
        <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
          <maml:name>ProviderName</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Database</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Password</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Server</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>UserName</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
        <maml:name>ProviderName</maml:name>
        <maml:description>
          <maml:para>
          </maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" globbing="false" pipelineInput="false" position="2">
        <maml:name>ConnectionProperties</maml:name>
        <maml:description>
          <maml:para>
          </maml:para>
        </maml:description>
        <command:parameterValue required="true">Hashtable</command:parameterValue>
        <dev:type>
          <maml:name>Hashtable</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" globbing="false" pipelineInput="false" position="2">
        <maml:name>ConnectionString</maml:name>
        <maml:description>
          <maml:para>
          </maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Database</maml:name>
        <maml:description>
          <maml:para>
          </maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Password</maml:name>
        <maml:description>
          <maml:para>
          </maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Server</maml:name>
        <maml:description>
          <maml:para>
          </maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>UserName</maml:name>
        <maml:description>
          <maml:para>
          </maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </dev:type>
        <maml:description />
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </dev:type>
        <maml:description />
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:title />
      <maml:alert>
        <maml:para>
        </maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>
        </dev:code>
        <dev:remarks>
          <maml:para>
          </maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks />
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-AdoDataProvider</command:name>
      <maml:description>
        <maml:para>PSCX Cmdlet: List all registered ADO.NET Data Providers on the current machine.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Get</command:verb>
      <command:noun>AdoDataProvider</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>List all registered ADO.NET Data Providers on the current machine.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-AdoDataProvider</maml:name>
        <command:parameter required="false" globbing="true" pipelineInput="true (ByValue)" position="1">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>
                 The name of the ADO provider you wish to retrieve. Wildcards * and ? are accepted.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" globbing="true" pipelineInput="true (ByValue)" position="1">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>
                 The name of the ADO provider you wish to retrieve. Wildcards * and ? are accepted.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </dev:type>
        <maml:description />
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </dev:type>
        <maml:description />
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:title />
      <maml:alert>
        <maml:para>
        </maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>
        </dev:code>
        <dev:remarks>
          <maml:para>
          </maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks />
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Invoke-AdoCommand</command:name>
      <maml:description>
        <maml:para>PSCX Cmdlet: Execute a SQL query against an ADO.NET datasource.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Invoke</command:verb>
      <command:noun>AdoCommand</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>Execute a SQL query against an ADO.NET datasource.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Invoke-AdoCommand</maml:name>
        <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
          <maml:name>ProviderName</maml:name>
          <maml:description>
            <maml:para>
                The name of the desired .NET data provider. Typical values are System.Data.SqlClient, System.Data.OleDb,
                System.Data.Odbc and System.Data.OracleClient. Accepts pipeline input from Get-AdoProvider command.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" globbing="false" pipelineInput="false" position="2">
          <maml:name>Connection</maml:name>
          <maml:description>
            <maml:para>
                The connection object used in lieu of a connection string.  This object is created using the 
                Get-AdoConnection cmdlet.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">DbConnection</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" globbing="false" pipelineInput="false" position="3">
          <maml:name>CommandText</maml:name>
          <maml:description>
            <maml:para>
              The Transact-SQL statement, table name or stored procedure to execute at the data source.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>AsDataSet</maml:name>
          <maml:description>
            <maml:para>
                If specified returns the result as an ADO.NET DataSet.
            </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>AsPSObject</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>CommandType</maml:name>
          <maml:description>
            <maml:para>
                Specifies the type of command.  Valid values are StoredProcedure, TableDirect and Text.  The default value is Text.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">CommandType</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>NonQuery</maml:name>
          <maml:description>
            <maml:para>
                Executes a command returning the number of rows affected.  If specified then -AsDataSet is ignored.
            </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="4">
          <maml:name>CommandParameters</maml:name>
          <maml:description>
            <maml:para>
              The parameters of the Transact-SQL statement or stored procedure. The default is an empty collection.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">Hashtable</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Invoke-AdoCommand</maml:name>
        <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
          <maml:name>ProviderName</maml:name>
          <maml:description>
            <maml:para>
                The name of the desired .NET data provider. Typical values are System.Data.SqlClient, System.Data.OleDb,
                System.Data.Odbc and System.Data.OracleClient. Accepts pipeline input from Get-AdoProvider command.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" globbing="false" pipelineInput="false" position="2">
          <maml:name>ConnectionProperties</maml:name>
          <maml:description>
            <maml:para>
                Accepts a hashtable of one or more common connection properties such as Server, User, Password and Database.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">Hashtable</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" globbing="false" pipelineInput="false" position="3">
          <maml:name>CommandText</maml:name>
          <maml:description>
            <maml:para>
              The Transact-SQL statement, table name or stored procedure to execute at the data source.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>AsDataSet</maml:name>
          <maml:description>
            <maml:para>
                If specified returns the result as an ADO.NET DataSet.
            </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>AsPSObject</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>CommandType</maml:name>
          <maml:description>
            <maml:para>
                Specifies the type of command.  Valid values are StoredProcedure, TableDirect and Text.  The default value is Text.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">CommandType</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>NonQuery</maml:name>
          <maml:description>
            <maml:para>
                Executes a command returning the number of rows affected.  If specified then -AsDataSet is ignored.
            </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="4">
          <maml:name>CommandParameters</maml:name>
          <maml:description>
            <maml:para>
              The parameters of the Transact-SQL statement or stored procedure. The default is an empty collection.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">Hashtable</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Invoke-AdoCommand</maml:name>
        <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
          <maml:name>ProviderName</maml:name>
          <maml:description>
            <maml:para>
                The name of the desired .NET data provider. Typical values are System.Data.SqlClient, System.Data.OleDb,
                System.Data.Odbc and System.Data.OracleClient. Accepts pipeline input from Get-AdoProvider command.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" globbing="false" pipelineInput="false" position="2">
          <maml:name>ConnectionString</maml:name>
          <maml:description>
            <maml:para>
              The connecion string required to connect to the database.  For help with connection strings see
              the following link - http://msdn.microsoft.com/en-us/library/ms254500.aspx.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" globbing="false" pipelineInput="false" position="3">
          <maml:name>CommandText</maml:name>
          <maml:description>
            <maml:para>
              The Transact-SQL statement, table name or stored procedure to execute at the data source.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>AsDataSet</maml:name>
          <maml:description>
            <maml:para>
                If specified returns the result as an ADO.NET DataSet.
            </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>AsPSObject</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>CommandType</maml:name>
          <maml:description>
            <maml:para>
                Specifies the type of command.  Valid values are StoredProcedure, TableDirect and Text.  The default value is Text.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">CommandType</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>NonQuery</maml:name>
          <maml:description>
            <maml:para>
                Executes a command returning the number of rows affected.  If specified then -AsDataSet is ignored.
            </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="4">
          <maml:name>CommandParameters</maml:name>
          <maml:description>
            <maml:para>
              The parameters of the Transact-SQL statement or stored procedure. The default is an empty collection.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">Hashtable</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Invoke-AdoCommand</maml:name>
        <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
          <maml:name>ProviderName</maml:name>
          <maml:description>
            <maml:para>
                The name of the desired .NET data provider. Typical values are System.Data.SqlClient, System.Data.OleDb,
                System.Data.Odbc and System.Data.OracleClient. Accepts pipeline input from Get-AdoProvider command.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" globbing="false" pipelineInput="false" position="3">
          <maml:name>CommandText</maml:name>
          <maml:description>
            <maml:para>
              The Transact-SQL statement, table name or stored procedure to execute at the data source.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>AsDataSet</maml:name>
          <maml:description>
            <maml:para>
                If specified returns the result as an ADO.NET DataSet.
            </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>AsPSObject</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>CommandType</maml:name>
          <maml:description>
            <maml:para>
                Specifies the type of command.  Valid values are StoredProcedure, TableDirect and Text.  The default value is Text.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">CommandType</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Database</maml:name>
          <maml:description>
            <maml:para>
              The name of the current database or the database to be used after a connection is opened.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>NonQuery</maml:name>
          <maml:description>
            <maml:para>
                Executes a command returning the number of rows affected.  If specified then -AsDataSet is ignored.
            </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Password</maml:name>
          <maml:description>
            <maml:para>
              The password to use when connecting to the target server.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Server</maml:name>
          <maml:description>
            <maml:para>
                The name of the host or named instance (with MSSQL) to connect to.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>UserName</maml:name>
          <maml:description>
            <maml:para>
                The username to use when connecting to the target server.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="4">
          <maml:name>CommandParameters</maml:name>
          <maml:description>
            <maml:para>
              The parameters of the Transact-SQL statement or stored procedure. The default is an empty collection.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">Hashtable</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
        <maml:name>ProviderName</maml:name>
        <maml:description>
          <maml:para>
                The name of the desired .NET data provider. Typical values are System.Data.SqlClient, System.Data.OleDb,
                System.Data.Odbc and System.Data.OracleClient. Accepts pipeline input from Get-AdoProvider command.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" globbing="false" pipelineInput="false" position="2">
        <maml:name>Connection</maml:name>
        <maml:description>
          <maml:para>
                The connection object used in lieu of a connection string.  This object is created using the 
                Get-AdoConnection cmdlet.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">DbConnection</command:parameterValue>
        <dev:type>
          <maml:name>DbConnection</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" globbing="false" pipelineInput="false" position="2">
        <maml:name>ConnectionProperties</maml:name>
        <maml:description>
          <maml:para>
                Accepts a hashtable of one or more common connection properties such as Server, User, Password and Database.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">Hashtable</command:parameterValue>
        <dev:type>
          <maml:name>Hashtable</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" globbing="false" pipelineInput="false" position="2">
        <maml:name>ConnectionString</maml:name>
        <maml:description>
          <maml:para>
              The connecion string required to connect to the database.  For help with connection strings see
              the following link - http://msdn.microsoft.com/en-us/library/ms254500.aspx.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" globbing="false" pipelineInput="false" position="3">
        <maml:name>CommandText</maml:name>
        <maml:description>
          <maml:para>
              The Transact-SQL statement, table name or stored procedure to execute at the data source.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
                N/A
            </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>AsDataSet</maml:name>
        <maml:description>
          <maml:para>
                If specified returns the result as an ADO.NET DataSet.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>AsPSObject</maml:name>
        <maml:description>
          <maml:para>
          </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>CommandType</maml:name>
        <maml:description>
          <maml:para>
                Specifies the type of command.  Valid values are StoredProcedure, TableDirect and Text.  The default value is Text.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">CommandType</command:parameterValue>
        <dev:type>
          <maml:name>CommandType</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
                Text
            </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Database</maml:name>
        <maml:description>
          <maml:para>
              The name of the current database or the database to be used after a connection is opened.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>NonQuery</maml:name>
        <maml:description>
          <maml:para>
                Executes a command returning the number of rows affected.  If specified then -AsDataSet is ignored.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Password</maml:name>
        <maml:description>
          <maml:para>
              The password to use when connecting to the target server.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Server</maml:name>
        <maml:description>
          <maml:para>
                The name of the host or named instance (with MSSQL) to connect to.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>UserName</maml:name>
        <maml:description>
          <maml:para>
                The username to use when connecting to the target server.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="4">
        <maml:name>CommandParameters</maml:name>
        <maml:description>
          <maml:para>
              The parameters of the Transact-SQL statement or stored procedure. The default is an empty collection.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">Hashtable</command:parameterValue>
        <dev:type>
          <maml:name>Hashtable</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
                Empty parameter collection.
            </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </dev:type>
        <maml:description />
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </dev:type>
        <maml:description />
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:title />
      <maml:alert>
        <maml:para>
            The typical problem encountered when using the ConnectionString property is getting the connection string right.
            See the following link for help with connection strings - http://msdn.microsoft.com/en-us/library/ms254500.aspx.
            For this reason, this Cmdlet uses the built-in .NET data factory classes when using the ConnectionProperties
            parameter or the individual connection property parameters. Thankfully, you don't need to know the specifics
            of a support database's connection string properties. The Server, Username, Password and Database properties are
            automatically translated to the target database's format.
          </maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>
          $connection = Get-AdoProvider oracle | Get-AdoConnection -server orcl02 -username scott -password -tiger
          invoke-adocommand -connection $connection -commandtext "select * from foo"
        </dev:code>
        <dev:remarks>
          <maml:para>This example fetches the oracle client provider and pipes it to Get-AdoConnection. Using this technique
          means you don't have to know the specifics of any given database's connection string properties.</maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>
              $conn = 'Data Source=.\SQLEXPRESS;Initial Catalog=pubs;Integrated Security=SSPI'
              $ds = Invoke-AdoCommand -ProviderName SqlClient -ConnectionString $conn -CommandText 'Select * from Authors' -AsDataSet
              $ds.Tables
              
              au_id    : 172-32-1176
              au_lname : White
              au_fname : Johnson
              ...
            </dev:code>
        <dev:remarks>
          <maml:para>This example queries the pubs database for all authors on the current machine's SQLEXPRESS database instance.</maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks />
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Ping-Host</command:name>
      <maml:description>
        <maml:para>PSCX Cmdlet: Sends ICMP echo requests to network hosts.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Ping</command:verb>
      <command:noun>Host</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>
         Sends ICMP echo requests to network hosts.
    </maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Ping-Host</maml:name>
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="1">
          <maml:name>HostName</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">PSObject[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="2">
          <maml:name>Count</maml:name>
          <maml:description>
            <maml:para>
                Number of messages to send to each address.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>NoDnsResolution</maml:name>
          <maml:description>
            <maml:para>
          Suppresses DNS resolution of IP addresses to host names.
        </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Quiet</maml:name>
          <maml:description>
            <maml:para>
          Suppresses output sent directly to the host (console) i.e. ping replies.
        </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="3">
          <maml:name>BufferSize</maml:name>
          <maml:description>
            <maml:para>
                Size of the message in bytes.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="4">
          <maml:name>Timeout</maml:name>
          <maml:description>
            <maml:para>
                Timeout in milliseconds to wait for each reply.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="5">
          <maml:name>TTL</maml:name>
          <maml:description>
            <maml:para>
                Time To Live.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="6">
          <maml:name>AllAddresses</maml:name>
          <maml:description>
            <maml:para>
                Pings the host on all IP addresses found.
            </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="7">
          <maml:name>Asynchronous</maml:name>
          <maml:description>
            <maml:para>
                Pings all hosts in parallel.
            </maml:para>
          </maml:description>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="1">
        <maml:name>HostName</maml:name>
        <maml:description>
          <maml:para>
          </maml:para>
        </maml:description>
        <command:parameterValue required="true">PSObject[]</command:parameterValue>
        <dev:type>
          <maml:name>PSObject[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="2">
        <maml:name>Count</maml:name>
        <maml:description>
          <maml:para>
                Number of messages to send to each address.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">Int32</command:parameterValue>
        <dev:type>
          <maml:name>Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>NoDnsResolution</maml:name>
        <maml:description>
          <maml:para>
          Suppresses DNS resolution of IP addresses to host names.
        </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
          False
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Quiet</maml:name>
        <maml:description>
          <maml:para>
          Suppresses output sent directly to the host (console) i.e. ping replies.
        </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
          False
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="3">
        <maml:name>BufferSize</maml:name>
        <maml:description>
          <maml:para>
                Size of the message in bytes.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">Int32</command:parameterValue>
        <dev:type>
          <maml:name>Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="4">
        <maml:name>Timeout</maml:name>
        <maml:description>
          <maml:para>
                Timeout in milliseconds to wait for each reply.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">Int32</command:parameterValue>
        <dev:type>
          <maml:name>Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="5">
        <maml:name>TTL</maml:name>
        <maml:description>
          <maml:para>
                Time To Live.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">Int32</command:parameterValue>
        <dev:type>
          <maml:name>Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="6">
        <maml:name>AllAddresses</maml:name>
        <maml:description>
          <maml:para>
                Pings the host on all IP addresses found.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="7">
        <maml:name>Asynchronous</maml:name>
        <maml:description>
          <maml:para>
                Pings all hosts in parallel.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:title />
      <maml:alert>
        <maml:para>
        </maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>
        </dev:code>
        <dev:remarks>
          <maml:para>
          </maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Resolve-Host</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Resolve-Host</command:name>
      <maml:description>
        <maml:para>PSCX Cmdlet: Resolves host names to IP addresses.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Resolve</command:verb>
      <command:noun>Host</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>
         Resolves host names to IP addresses.
    </maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Resolve-Host</maml:name>
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="1">
          <maml:name>HostName</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="1">
        <maml:name>HostName</maml:name>
        <maml:description>
          <maml:para>
          </maml:para>
        </maml:description>
        <command:parameterValue required="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:title />
      <maml:alert>
        <maml:para>
        </maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>
        </dev:code>
        <dev:remarks>
          <maml:para>
          </maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Ping-Host</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Send-SmtpMail</command:name>
      <maml:description>
        <maml:para>PSCX Cmdlet: Sends email via specified SMTP server to specified recipients.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Send</command:verb>
      <command:noun>SmtpMail</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>
      Sends email via specified SMTP server to specified recipients. This cmdlet checks for existence of several preference that if set can make this cmdlet much easier to use.  Those preference variables are:

      * $PscxSmtpHostPreference="smtp.example.net"
      * $PscxSmtpPortPreference=587
      * $PscxSmtpFromPreference="john_doe@example.net"
    </maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Send-SmtpMail</maml:name>
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>To</maml:name>
          <maml:description>
            <maml:para>
              Specifies who the email will be sent to.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>AttachmentLiteralPath</maml:name>
          <maml:description>
            <maml:para>
              Specifies literal paths (no wildcard expansion) to attachments for the email.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>AttachmentPath</maml:name>
          <maml:description>
            <maml:para>
              Specifies paths to attachments for the email.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Bcc</maml:name>
          <maml:description>
            <maml:para>
              Specifies who to BCC on the email.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Body</maml:name>
          <maml:description>
            <maml:para>
              Specifies the body of the email.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Cc</maml:name>
          <maml:description>
            <maml:para>
              Specifies who to CC on the email.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Credential</maml:name>
          <maml:description>
            <maml:para>
              Specifies credentials required to aunthenticate on the SMTP host.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">PSCredential</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>From</maml:name>
          <maml:description>
            <maml:para>
              Specifies who the email is from.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>HtmlBody</maml:name>
          <maml:description>
            <maml:para>
              Indicates that the body of the message is HTML.
            </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>InputObject</maml:name>
          <maml:description>
            <maml:para>
                Input objects are rendered to text using Out-String and placed in the body of the message.  The Width parameter can be used to control the width of string generated by Out-String.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">PSObject</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PassThru</maml:name>
          <maml:description>
            <maml:para>
                Causes the MailMessage object to be passed to the next stage of the pipeline.
            </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PortNumber</maml:name>
          <maml:description>
            <maml:para>
              Specifies which port to use on the SMTP host.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">Nullable`1</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Priority</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">MailPriority</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ReplyTo</maml:name>
          <maml:description>
            <maml:para>
              Specifies who replies to the email will be sent to.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SmtpHost</maml:name>
          <maml:description>
            <maml:para>
              Specifies which SMTP host to use to send the email.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Subject</maml:name>
          <maml:description>
            <maml:para>
              Specifies the subject of the email.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Timeout</maml:name>
          <maml:description>
            <maml:para>
              Specifies timeout for SMTP Server.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Width</maml:name>
          <maml:description>
            <maml:para>
                Specifies the width for Out-String to render pipeline input objects to text.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">Nullable`1</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Send-SmtpMail</maml:name>
        <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>To</maml:name>
          <maml:description>
            <maml:para>
              Specifies who the email will be sent to.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Anonymous</maml:name>
          <maml:description>
            <maml:para>
              Connect to SMTP host anonymously.
            </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>AttachmentLiteralPath</maml:name>
          <maml:description>
            <maml:para>
              Specifies literal paths (no wildcard expansion) to attachments for the email.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>AttachmentPath</maml:name>
          <maml:description>
            <maml:para>
              Specifies paths to attachments for the email.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Bcc</maml:name>
          <maml:description>
            <maml:para>
              Specifies who to BCC on the email.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Body</maml:name>
          <maml:description>
            <maml:para>
              Specifies the body of the email.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Cc</maml:name>
          <maml:description>
            <maml:para>
              Specifies who to CC on the email.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>From</maml:name>
          <maml:description>
            <maml:para>
              Specifies who the email is from.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>HtmlBody</maml:name>
          <maml:description>
            <maml:para>
              Indicates that the body of the message is HTML.
            </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>InputObject</maml:name>
          <maml:description>
            <maml:para>
                Input objects are rendered to text using Out-String and placed in the body of the message.  The Width parameter can be used to control the width of string generated by Out-String.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">PSObject</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PassThru</maml:name>
          <maml:description>
            <maml:para>
                Causes the MailMessage object to be passed to the next stage of the pipeline.
            </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PortNumber</maml:name>
          <maml:description>
            <maml:para>
              Specifies which port to use on the SMTP host.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">Nullable`1</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Priority</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">MailPriority</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ReplyTo</maml:name>
          <maml:description>
            <maml:para>
              Specifies who replies to the email will be sent to.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SmtpHost</maml:name>
          <maml:description>
            <maml:para>
              Specifies which SMTP host to use to send the email.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Subject</maml:name>
          <maml:description>
            <maml:para>
              Specifies the subject of the email.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Timeout</maml:name>
          <maml:description>
            <maml:para>
              Specifies timeout for SMTP Server.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Width</maml:name>
          <maml:description>
            <maml:para>
                Specifies the width for Out-String to render pipeline input objects to text.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">Nullable`1</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>To</maml:name>
        <maml:description>
          <maml:para>
              Specifies who the email will be sent to.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Anonymous</maml:name>
        <maml:description>
          <maml:para>
              Connect to SMTP host anonymously.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
                False
            </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>AttachmentLiteralPath</maml:name>
        <maml:description>
          <maml:para>
              Specifies literal paths (no wildcard expansion) to attachments for the email.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>AttachmentPath</maml:name>
        <maml:description>
          <maml:para>
              Specifies paths to attachments for the email.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Bcc</maml:name>
        <maml:description>
          <maml:para>
              Specifies who to BCC on the email.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Body</maml:name>
        <maml:description>
          <maml:para>
              Specifies the body of the email.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Cc</maml:name>
        <maml:description>
          <maml:para>
              Specifies who to CC on the email.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Credential</maml:name>
        <maml:description>
          <maml:para>
              Specifies credentials required to aunthenticate on the SMTP host.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">PSCredential</command:parameterValue>
        <dev:type>
          <maml:name>PSCredential</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>From</maml:name>
        <maml:description>
          <maml:para>
              Specifies who the email is from.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
              Value of $PscxSmtpFromPreference if defined, otherwise null.
            </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>HtmlBody</maml:name>
        <maml:description>
          <maml:para>
              Indicates that the body of the message is HTML.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>InputObject</maml:name>
        <maml:description>
          <maml:para>
                Input objects are rendered to text using Out-String and placed in the body of the message.  The Width parameter can be used to control the width of string generated by Out-String.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">PSObject</command:parameterValue>
        <dev:type>
          <maml:name>PSObject</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>PassThru</maml:name>
        <maml:description>
          <maml:para>
                Causes the MailMessage object to be passed to the next stage of the pipeline.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
                False
            </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>PortNumber</maml:name>
        <maml:description>
          <maml:para>
              Specifies which port to use on the SMTP host.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">Nullable`1</command:parameterValue>
        <dev:type>
          <maml:name>Nullable`1</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
              Value of $PscxSmtpPortPreference if defined, otherwise 25.
            </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Priority</maml:name>
        <maml:description>
          <maml:para>
          </maml:para>
        </maml:description>
        <command:parameterValue required="true">MailPriority</command:parameterValue>
        <dev:type>
          <maml:name>MailPriority</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>ReplyTo</maml:name>
        <maml:description>
          <maml:para>
              Specifies who replies to the email will be sent to.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>SmtpHost</maml:name>
        <maml:description>
          <maml:para>
              Specifies which SMTP host to use to send the email.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
              Value of $PscxSmtpHostPreference if defined, otherwise null.
            </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Subject</maml:name>
        <maml:description>
          <maml:para>
              Specifies the subject of the email.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Timeout</maml:name>
        <maml:description>
          <maml:para>
              Specifies timeout for SMTP Server.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">Int32</command:parameterValue>
        <dev:type>
          <maml:name>Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
                100 seconds.
            </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Width</maml:name>
        <maml:description>
          <maml:para>
                Specifies the width for Out-String to render pipeline input objects to text.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">Nullable`1</command:parameterValue>
        <dev:type>
          <maml:name>Nullable`1</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
                Out-String default width is used if Width not specified.
            </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:title />
      <maml:alert>
        <maml:para>
        </maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>
              Send-SmtpMail -SmtpHost smtp.example.net -To jane_doe@example.net `
              -From john_doe@example.net -Subject "Hi there" -Credential (get-credential) `
              -Body @"
              &gt;&gt; Hi Jane,
              &gt;&gt; Let's do lunch.
              &gt;&gt; --
              &gt;&gt; John"
              &gt;&gt; "@
              &gt;&gt;
            </dev:code>
        <dev:remarks>
          <maml:para>
          </maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks />
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-HttpResource</command:name>
      <maml:description>
        <maml:para>PSCX Cmdlet: Gets an HTTP resource or optionally the headers associated with the resource.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Get</command:verb>
      <command:noun>HttpResource</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>
      Gets an HTTP resource or optionally the headers associated with the resource.  
    </maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-HttpResource</maml:name>
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="1">
          <maml:name>Url</maml:name>
          <maml:description>
            <maml:para>
                The url of the HTTP resource to get.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">Uri</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>AcceptHeader</maml:name>
          <maml:description>
            <maml:para>
          AcceptHeader allows you to specify which media type is preferred in response.
        </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Anonymous</maml:name>
          <maml:description>
            <maml:para>
                Use anonymous credentials when accessing the URL.
            </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Encoding</maml:name>
          <maml:description>
            <maml:para>
                The encoding to use for string InputObjects.  Valid values are: Byte, ASCII, UTF7, UTF8, UTF32, Unicode, BigEndianUnicode and Default.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">EncodingParameter</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>HeadersOnly</maml:name>
          <maml:description>
            <maml:para>
                Retrieves just the headers for the specified URL. This option can be used as a light weight way to determine properties of certain URLs such as the size of an image.
            </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Proxy</maml:name>
          <maml:description>
            <maml:para>
          Allows the proxy information to be customized for this request.  Create and configure a new System.Net.WebProxy object to supply for this parameter.
        </maml:para>
          </maml:description>
          <command:parameterValue required="true">IWebProxy</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ReadCount</maml:name>
          <maml:description>
            <maml:para>
                ReadCount determines how many items of data are processed before sending down the pipeline. An an item will be either a string or a byte (when -Encoding Byte) is used. A value of 0 will cause the entire response to be sent as a single string or byte array.  A value of 1 will cause each line or byte of the response to be sent down the pipeline. A value of N, where N &gt; 1 will cause an array of strings or bytes of size N (or smaller) to be sent down the pipeline.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">Int64</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ReadWriteTimeout</maml:name>
          <maml:description>
            <maml:para>
              Sets a time-out in milliseconds when reading from the stream of data in the response.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">Nullable`1</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Timeout</maml:name>
          <maml:description>
            <maml:para>
              Sets the time-out value in milliseconds for the GetResponse and GetRequestStream methods
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">Nullable`1</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>UserAgent</maml:name>
          <maml:description>
            <maml:para>
                The user agent string to use in the web request's header.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Get-HttpResource</maml:name>
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="1">
          <maml:name>Url</maml:name>
          <maml:description>
            <maml:para>
                The url of the HTTP resource to get.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">Uri</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>AcceptHeader</maml:name>
          <maml:description>
            <maml:para>
          AcceptHeader allows you to specify which media type is preferred in response.
        </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Credential</maml:name>
          <maml:description>
            <maml:para>
                Credential to use when accessing the URL.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">PSCredential</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Encoding</maml:name>
          <maml:description>
            <maml:para>
                The encoding to use for string InputObjects.  Valid values are: Byte, ASCII, UTF7, UTF8, UTF32, Unicode, BigEndianUnicode and Default.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">EncodingParameter</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>HeadersOnly</maml:name>
          <maml:description>
            <maml:para>
                Retrieves just the headers for the specified URL. This option can be used as a light weight way to determine properties of certain URLs such as the size of an image.
            </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Proxy</maml:name>
          <maml:description>
            <maml:para>
          Allows the proxy information to be customized for this request.  Create and configure a new System.Net.WebProxy object to supply for this parameter.
        </maml:para>
          </maml:description>
          <command:parameterValue required="true">IWebProxy</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ReadCount</maml:name>
          <maml:description>
            <maml:para>
                ReadCount determines how many items of data are processed before sending down the pipeline. An an item will be either a string or a byte (when -Encoding Byte) is used. A value of 0 will cause the entire response to be sent as a single string or byte array.  A value of 1 will cause each line or byte of the response to be sent down the pipeline. A value of N, where N &gt; 1 will cause an array of strings or bytes of size N (or smaller) to be sent down the pipeline.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">Int64</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ReadWriteTimeout</maml:name>
          <maml:description>
            <maml:para>
              Sets a time-out in milliseconds when reading from the stream of data in the response.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">Nullable`1</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Timeout</maml:name>
          <maml:description>
            <maml:para>
              Sets the time-out value in milliseconds for the GetResponse and GetRequestStream methods
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">Nullable`1</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>UserAgent</maml:name>
          <maml:description>
            <maml:para>
                The user agent string to use in the web request's header.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="1">
        <maml:name>Url</maml:name>
        <maml:description>
          <maml:para>
                The url of the HTTP resource to get.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">Uri</command:parameterValue>
        <dev:type>
          <maml:name>Uri</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>AcceptHeader</maml:name>
        <maml:description>
          <maml:para>
          AcceptHeader allows you to specify which media type is preferred in response.
        </maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
          Null
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Anonymous</maml:name>
        <maml:description>
          <maml:para>
                Use anonymous credentials when accessing the URL.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
                N/A
            </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Credential</maml:name>
        <maml:description>
          <maml:para>
                Credential to use when accessing the URL.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">PSCredential</command:parameterValue>
        <dev:type>
          <maml:name>PSCredential</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
                N/A
            </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Encoding</maml:name>
        <maml:description>
          <maml:para>
                The encoding to use for string InputObjects.  Valid values are: Byte, ASCII, UTF7, UTF8, UTF32, Unicode, BigEndianUnicode and Default.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">EncodingParameter</command:parameterValue>
        <dev:type>
          <maml:name>EncodingParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
                Byte will cause the result to be output as an array 
            </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>HeadersOnly</maml:name>
        <maml:description>
          <maml:para>
                Retrieves just the headers for the specified URL. This option can be used as a light weight way to determine properties of certain URLs such as the size of an image.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
                False
            </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Proxy</maml:name>
        <maml:description>
          <maml:para>
          Allows the proxy information to be customized for this request.  Create and configure a new System.Net.WebProxy object to supply for this parameter.
        </maml:para>
        </maml:description>
        <command:parameterValue required="true">IWebProxy</command:parameterValue>
        <dev:type>
          <maml:name>IWebProxy</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>ReadCount</maml:name>
        <maml:description>
          <maml:para>
                ReadCount determines how many items of data are processed before sending down the pipeline. An an item will be either a string or a byte (when -Encoding Byte) is used. A value of 0 will cause the entire response to be sent as a single string or byte array.  A value of 1 will cause each line or byte of the response to be sent down the pipeline. A value of N, where N &gt; 1 will cause an array of strings or bytes of size N (or smaller) to be sent down the pipeline.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">Int64</command:parameterValue>
        <dev:type>
          <maml:name>Int64</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>ReadWriteTimeout</maml:name>
        <maml:description>
          <maml:para>
              Sets a time-out in milliseconds when reading from the stream of data in the response.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">Nullable`1</command:parameterValue>
        <dev:type>
          <maml:name>Nullable`1</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
                300,000 milliseconds (5 minutes)
            </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Timeout</maml:name>
        <maml:description>
          <maml:para>
              Sets the time-out value in milliseconds for the GetResponse and GetRequestStream methods
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">Nullable`1</command:parameterValue>
        <dev:type>
          <maml:name>Nullable`1</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
                100,000 milliseconds (100 seconds)
            </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>UserAgent</maml:name>
        <maml:description>
          <maml:para>
                The user agent string to use in the web request's header.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
              PSCX_HttpResource_Cmdlet
            </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </dev:type>
        <maml:description />
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>Default output.</maml:para>
          </maml:description>
        </dev:type>
        <maml:description />
      </command:returnValue>
      <command:returnValue>
        <dev:type>
          <maml:name>Byte</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>When -Encoding Byte is specified</maml:para>
          </maml:description>
        </dev:type>
        <maml:description />
      </command:returnValue>
      <command:returnValue>
        <dev:type>
          <maml:name>Hashtable</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>When -HeadersOnly is specified</maml:para>
          </maml:description>
        </dev:type>
        <maml:description />
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:title />
      <maml:alert>
        <maml:para>
        </maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>PS&gt; Get-HttpResource http://blogs.msdn.com/powershell</dev:code>
        <dev:remarks>
          <maml:para>Gets the contents of the above URL as a string.</maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>
          PS&gt; Get-HttpResource -headersOnly http://assets0.twitter.com/images/twitter_logo_header.png
          
          Name                           Value
          ----                           -----
          Content-Length                 6656
          Last-Modified                  Fri, 08 May 2009 21:40:51 GMT
          Expires                        Wed, 08 May 2019 19:54:41 GMT
          Server                         Apache
          Accept-Ranges                  bytes
          Content-Type                   image/png
          Cache-Control                  max-age=315360000
          Date                           Sun, 10 May 2009 19:54:41 GMT
          Connection                     close
        </dev:code>
        <dev:remarks>
          <maml:para>Gets just the headers for the URL.</maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks />
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-PEHeader</command:name>
      <maml:description>
        <maml:para>PSCX Cmdlet: Gets the Portable Header information from an executable file.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Get</command:verb>
      <command:noun>PEHeader</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>
         The PE header for Windows executables includes various useful bits of information including the image base address, subsystem, linker version, etc.
    </maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-PEHeader</maml:name>
        <command:parameter required="true" globbing="true" pipelineInput="true (ByValue, ByPropertyName)" position="1">
          <maml:name>Path</maml:name>
          <maml:description>
            <maml:para>
                Specifies the path to the file to process. Wildcard syntax is allowed.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Get-PEHeader</maml:name>
        <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
          <maml:name>LiteralPath</maml:name>
          <maml:description>
            <maml:para>
                Specifies a path to the item. The value of -LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
        <maml:name>LiteralPath</maml:name>
        <maml:description>
          <maml:para>
                Specifies a path to the item. The value of -LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" globbing="true" pipelineInput="true (ByValue, ByPropertyName)" position="1">
        <maml:name>Path</maml:name>
        <maml:description>
          <maml:para>
                Specifies the path to the file to process. Wildcard syntax is allowed.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:title />
      <maml:alert>
        <maml:para>
        </maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>Get-PEHeader $PSHome\PowerShell.exe</dev:code>
        <dev:remarks>
          <maml:para>
          </maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks />
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Test-Assembly</command:name>
      <maml:description>
        <maml:para>PSCX Cmdlet: Tests whether or not the specified file is a .NET assembly.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Test</command:verb>
      <command:noun>Assembly</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>
         Tests whether or not the specified file is a .NET assembly.
    </maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Test-Assembly</maml:name>
        <command:parameter required="true" globbing="true" pipelineInput="true (ByValue, ByPropertyName)" position="1">
          <maml:name>Path</maml:name>
          <maml:description>
            <maml:para>
                Specifies the path to the file to process. Wildcard syntax is allowed.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Test-Assembly</maml:name>
        <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
          <maml:name>LiteralPath</maml:name>
          <maml:description>
            <maml:para>
                Specifies a path to the item. The value of -LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
        <maml:name>LiteralPath</maml:name>
        <maml:description>
          <maml:para>
                Specifies a path to the item. The value of -LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" globbing="true" pipelineInput="true (ByValue, ByPropertyName)" position="1">
        <maml:name>Path</maml:name>
        <maml:description>
          <maml:para>
                Specifies the path to the file to process. Wildcard syntax is allowed.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:title />
      <maml:alert>
        <maml:para>
        </maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>
        </dev:code>
        <dev:remarks>
          <maml:para>
          </maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks />
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Import-Bitmap</command:name>
      <maml:description>
        <maml:para>PSCX Cmdlet: Loads bitmap files.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Import</command:verb>
      <command:noun>Bitmap</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>
         Loads bitmap files.
    </maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Import-Bitmap</maml:name>
        <command:parameter required="true" globbing="true" pipelineInput="true (ByValue, ByPropertyName)" position="1">
          <maml:name>Path</maml:name>
          <maml:description>
            <maml:para>
                Specifies the path to the file to process. Wildcard syntax is allowed.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Import-Bitmap</maml:name>
        <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
          <maml:name>LiteralPath</maml:name>
          <maml:description>
            <maml:para>
                Specifies a path to the item. The value of -LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
        <maml:name>LiteralPath</maml:name>
        <maml:description>
          <maml:para>
                Specifies a path to the item. The value of -LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" globbing="true" pipelineInput="true (ByValue, ByPropertyName)" position="1">
        <maml:name>Path</maml:name>
        <maml:description>
          <maml:para>
                Specifies the path to the file to process. Wildcard syntax is allowed.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:title />
      <maml:alert>
        <maml:para>
        </maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>
        </dev:code>
        <dev:remarks>
          <maml:para>
          </maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks />
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Export-Bitmap</command:name>
      <maml:description>
        <maml:para>PSCX Cmdlet: Exports bitmap objects to various formats.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Export</command:verb>
      <command:noun>Bitmap</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>
         Exports a bitmap object to a specified file format.
    </maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Export-Bitmap</maml:name>
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="1">
          <maml:name>Bitmap</maml:name>
          <maml:description>
            <maml:para>
                The bitmap to process.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">Bitmap</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
          <maml:name>Path</maml:name>
          <maml:description>
            <maml:para>
                Specifies the path to the file that will be created.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PassThru</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="true (ByPropertyName)" position="3">
          <maml:name>Format</maml:name>
          <maml:description>
            <maml:para>
              Specifies the file format. Supported values are:
              Bmp, Gif, Jpeg, Png, Tiff.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">BitmapFormat</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="true (ByPropertyName)" position="4">
          <maml:name>Quality</maml:name>
          <maml:description>
            <maml:para>
                Specifies the JPEG compression level.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">Nullable`1</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="1">
        <maml:name>Bitmap</maml:name>
        <maml:description>
          <maml:para>
                The bitmap to process.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">Bitmap</command:parameterValue>
        <dev:type>
          <maml:name>Bitmap</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
        <maml:name>Path</maml:name>
        <maml:description>
          <maml:para>
                Specifies the path to the file that will be created.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>PassThru</maml:name>
        <maml:description>
          <maml:para>
          </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="true (ByPropertyName)" position="3">
        <maml:name>Format</maml:name>
        <maml:description>
          <maml:para>
              Specifies the file format. Supported values are:
              Bmp, Gif, Jpeg, Png, Tiff.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">BitmapFormat</command:parameterValue>
        <dev:type>
          <maml:name>BitmapFormat</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
                Jpeg
            </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="true (ByPropertyName)" position="4">
        <maml:name>Quality</maml:name>
        <maml:description>
          <maml:para>
                Specifies the JPEG compression level.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">Nullable`1</command:parameterValue>
        <dev:type>
          <maml:name>Nullable`1</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
                75
            </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:inputType>
    </command:inputTypes>
    <command:returnValues />
    <maml:alertSet>
      <maml:title />
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>
              $bmp = (Import-Bitmap test.bmp | Resize-Bitmap -Perc 10);
              Export-Bitmap $bmp thumb.jpg Jpeg 50
            </dev:code>
        <dev:remarks>
          <maml:para>Resizes the bitmap to 10% of its original size and saves it
                in a JPEG file with quality level 50.</maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks />
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Set-BitmapSize</command:name>
      <maml:description>
        <maml:para>PSCX Cmdlet: Sets the size of the specified bitmap.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Set</command:verb>
      <command:noun>BitmapSize</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>
         Sets the size of the specified bitmap.
    </maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Set-BitmapSize</maml:name>
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="1">
          <maml:name>Bitmap</maml:name>
          <maml:description>
            <maml:para>
                The bitmap to process.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">Bitmap</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="2">
          <maml:name>Width</maml:name>
          <maml:description>
            <maml:para>
                The width of the resized bitmap.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="3">
          <maml:name>Height</maml:name>
          <maml:description>
            <maml:para>
                The height of the resized bitmap.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="4">
          <maml:name>KeepAspectRatio</maml:name>
          <maml:description>
            <maml:para>
                Keep the aspect ratio.
            </maml:para>
          </maml:description>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Set-BitmapSize</maml:name>
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="1">
          <maml:name>Bitmap</maml:name>
          <maml:description>
            <maml:para>
                The bitmap to process.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">Bitmap</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" globbing="false" pipelineInput="false" position="2">
          <maml:name>Percent</maml:name>
          <maml:description>
            <maml:para>
                The size of the output bitmap relative to the original size.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">Int32</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="1">
        <maml:name>Bitmap</maml:name>
        <maml:description>
          <maml:para>
                The bitmap to process.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">Bitmap</command:parameterValue>
        <dev:type>
          <maml:name>Bitmap</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" globbing="false" pipelineInput="false" position="2">
        <maml:name>Percent</maml:name>
        <maml:description>
          <maml:para>
                The size of the output bitmap relative to the original size.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">Int32</command:parameterValue>
        <dev:type>
          <maml:name>Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="2">
        <maml:name>Width</maml:name>
        <maml:description>
          <maml:para>
                The width of the resized bitmap.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">Int32</command:parameterValue>
        <dev:type>
          <maml:name>Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="3">
        <maml:name>Height</maml:name>
        <maml:description>
          <maml:para>
                The height of the resized bitmap.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">Int32</command:parameterValue>
        <dev:type>
          <maml:name>Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="4">
        <maml:name>KeepAspectRatio</maml:name>
        <maml:description>
          <maml:para>
                Keep the aspect ratio.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:title />
      <maml:alert>
        <maml:para>
        </maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>
        </dev:code>
        <dev:remarks>
          <maml:para>
          </maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks />
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-Privilege</command:name>
      <maml:description>
        <maml:para>PSCX Cmdlet: Lists privileges held by the session and their current status.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Get</command:verb>
      <command:noun>Privilege</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>
         Lists privileges held by the session and their current status.
    </maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-Privilege</maml:name>
        <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="2">
          <maml:name>Identity</maml:name>
          <maml:description>
            <maml:para>
                The identity to act upon.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">WindowsIdentity</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="2">
        <maml:name>Identity</maml:name>
        <maml:description>
          <maml:para>
                The identity to act upon.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">WindowsIdentity</command:parameterValue>
        <dev:type>
          <maml:name>WindowsIdentity</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:title />
      <maml:alert>
        <maml:para>
        </maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>
        </dev:code>
        <dev:remarks>
          <maml:para>
          </maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks />
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Set-Privilege</command:name>
      <maml:description>
        <maml:para>PSCX Cmdlet: Adjusts privileges associated with a user (identity).</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Set</command:verb>
      <command:noun>Privilege</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>
         Adjusts privileges associated with a user (identity).
    </maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Set-Privilege</maml:name>
        <command:parameter required="true" globbing="false" pipelineInput="false" position="1">
          <maml:name>Privileges</maml:name>
          <maml:description>
            <maml:para>
              The privileges to modify. See http://msdn.microsoft.com/en-us/library/bb530716(VS.85).aspx for details.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">TokenPrivilegeCollection</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="2">
          <maml:name>Identity</maml:name>
          <maml:description>
            <maml:para>
                The identity to act upon.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">WindowsIdentity</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" globbing="false" pipelineInput="false" position="1">
        <maml:name>Privileges</maml:name>
        <maml:description>
          <maml:para>
              The privileges to modify. See http://msdn.microsoft.com/en-us/library/bb530716(VS.85).aspx for details.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">TokenPrivilegeCollection</command:parameterValue>
        <dev:type>
          <maml:name>TokenPrivilegeCollection</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="2">
        <maml:name>Identity</maml:name>
        <maml:description>
          <maml:para>
                The identity to act upon.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">WindowsIdentity</command:parameterValue>
        <dev:type>
          <maml:name>WindowsIdentity</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:title />
      <maml:alert>
        <maml:para>
        </maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>
$p = Get-Privilege
$p.Enable('SeTimeZonePrivilege')
Set-Privilege $p
Get-Privilege | ft Name, Status -a

Name Status
---- ------
SeShutdownPrivilege Disabled
SeChangeNotifyPrivilege EnabledByDefault, Enabled
SeUndockPrivilege Disabled
SeIncreaseWorkingSetPrivilege Disabled
SeTimeZonePrivilege Enabled
            </dev:code>
        <dev:remarks>
          <maml:para>This enables the SeTimeZonePrivilege for the current user.</maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks />
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Test-UserGroupMembership</command:name>
      <maml:description>
        <maml:para>PSCX Cmdlet: Tests whether or not a user (current user by default) is a member of the specified group name.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Test</command:verb>
      <command:noun>UserGroupMembership</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>
      Tests whether or not a user (current user by default) is a member of the specified group name.  This can be used to test whether a user is admin or elevated to admin.
    </maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Test-UserGroupMembership</maml:name>
        <command:parameter required="true" globbing="false" pipelineInput="false" position="1">
          <maml:name>GroupName</maml:name>
          <maml:description>
            <maml:para>
                Name of the group to test membership of. Examples: Administrators, Users, Power Users, etc
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="2">
          <maml:name>Identity</maml:name>
          <maml:description>
            <maml:para>
                The identity to act upon.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">WindowsIdentity</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Test-UserGroupMembership</maml:name>
        <command:parameter required="true" globbing="false" pipelineInput="false" position="1">
          <maml:name>IdentityReference</maml:name>
          <maml:description>
            <maml:para>
              Reference to the identity to act upon.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">IdentityReference[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="2">
          <maml:name>Identity</maml:name>
          <maml:description>
            <maml:para>
                The identity to act upon.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">WindowsIdentity</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" globbing="false" pipelineInput="false" position="1">
        <maml:name>GroupName</maml:name>
        <maml:description>
          <maml:para>
                Name of the group to test membership of. Examples: Administrators, Users, Power Users, etc
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" globbing="false" pipelineInput="false" position="1">
        <maml:name>IdentityReference</maml:name>
        <maml:description>
          <maml:para>
              Reference to the identity to act upon.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">IdentityReference[]</command:parameterValue>
        <dev:type>
          <maml:name>IdentityReference[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="2">
        <maml:name>Identity</maml:name>
        <maml:description>
          <maml:para>
                The identity to act upon.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">WindowsIdentity</command:parameterValue>
        <dev:type>
          <maml:name>WindowsIdentity</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </dev:type>
        <maml:description />
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>Boolean</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </dev:type>
        <maml:description />
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:title />
      <maml:alert>
        <maml:para>
        </maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>
PS&gt; Test-UserGroupMembership -GroupName Administrators
False
            </dev:code>
        <dev:remarks>
          <maml:para>Tests to see if the current user is a member of the Administrators group.</maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks />
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-Clipboard</command:name>
      <maml:description>
        <maml:para>PSCX Cmdlet: Gets data from the clipboard.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Get</command:verb>
      <command:noun>Clipboard</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>
         Gets data from the clipboard.
    </maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-Clipboard</maml:name>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Text</maml:name>
          <maml:description>
            <maml:para>
                Retrieves plain text data from clipboard.
            </maml:para>
          </maml:description>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Get-Clipboard</maml:name>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>FragmentOnly</maml:name>
          <maml:description>
            <maml:para>
                Retrieves only the selected fragment of the HTML data.
            </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Html</maml:name>
          <maml:description>
            <maml:para>
                Retrieves HTML data from clipboard.
            </maml:para>
          </maml:description>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Get-Clipboard</maml:name>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Rtf</maml:name>
          <maml:description>
            <maml:para>
                Retrieves rich text data from clipboard.
            </maml:para>
          </maml:description>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Get-Clipboard</maml:name>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Csv</maml:name>
          <maml:description>
            <maml:para>
                Retrieves CSV data from clipboard.
            </maml:para>
          </maml:description>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Get-Clipboard</maml:name>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Image</maml:name>
          <maml:description>
            <maml:para>
                Retrieves image data from clipboard.
            </maml:para>
          </maml:description>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Get-Clipboard</maml:name>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Files</maml:name>
          <maml:description>
            <maml:para>
                Retrieves list of file names from clipboard.
            </maml:para>
          </maml:description>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Get-Clipboard</maml:name>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Audio</maml:name>
          <maml:description>
            <maml:para>
                Retrieves audio data from clipboard.
            </maml:para>
          </maml:description>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Audio</maml:name>
        <maml:description>
          <maml:para>
                Retrieves audio data from clipboard.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Csv</maml:name>
        <maml:description>
          <maml:para>
                Retrieves CSV data from clipboard.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Files</maml:name>
        <maml:description>
          <maml:para>
                Retrieves list of file names from clipboard.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>FragmentOnly</maml:name>
        <maml:description>
          <maml:para>
                Retrieves only the selected fragment of the HTML data.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Html</maml:name>
        <maml:description>
          <maml:para>
                Retrieves HTML data from clipboard.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Image</maml:name>
        <maml:description>
          <maml:para>
                Retrieves image data from clipboard.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Rtf</maml:name>
        <maml:description>
          <maml:para>
                Retrieves rich text data from clipboard.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Text</maml:name>
        <maml:description>
          <maml:para>
                Retrieves plain text data from clipboard.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:title />
      <maml:alert>
        <maml:para>
        </maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>
        </dev:code>
        <dev:remarks>
          <maml:para>
          </maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Out-Clipboard</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-Clipboard</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Write-Clipboard</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-ForegroundWindow</command:name>
      <maml:description>
        <maml:para>PSCX Cmdlet: Returns the hWnd or handle of the window in the foreground on the current desktop. See also Set-ForegroundWindow.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Get</command:verb>
      <command:noun>ForegroundWindow</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>
         Returns the hWnd or handle of the window in the foreground on the current desktop. See also Set-ForegroundWindow.
    </maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-ForegroundWindow</maml:name>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters />
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:title />
      <maml:alert>
        <maml:para>
        </maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>
        </dev:code>
        <dev:remarks>
          <maml:para>
          </maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Set-ForegroundWindow</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Out-Clipboard</command:name>
      <maml:description>
        <maml:para>PSCX Cmdlet: Formats text via Out-String before placing in clipboard. Can also place string in clipboard as a file.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Out</command:verb>
      <command:noun>Clipboard</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>
         Formats text via Out-String before placing in clipboard. Can also place string in clipboard as a file.
    </maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Out-Clipboard</maml:name>
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="1">
          <maml:name>InputObject</maml:name>
          <maml:description>
            <maml:para>
                Accepts an object as input to the cmdlet. Enter a variable that contains the objects or type a command or expression that gets the objects.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">PSObject</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="2">
          <maml:name>PasteFileName</maml:name>
          <maml:description>
            <maml:para>
          If AsFile switch is set, value supplied will be the name of the file placed in the clipboard. 
        </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>AsFile</maml:name>
          <maml:description>
            <maml:para>
          Copies input as string and places on clipboard as a file. If PasteFileName is not supplied, the file will be named randomly with a .txt extension.
        </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>NoTrimEnd</maml:name>
          <maml:description>
            <maml:para>
                Suppresses trimming whitespace from the line of each line of input.
            </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Width</maml:name>
          <maml:description>
            <maml:para>
                Specifies the number of characters in each line of output. Any additional characters are truncated, not wrapped. If you omit this parameter, the width is determined by the characteristics of the host. The default for the PowerShell.exe host is 120 (characters).
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">Int32</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="1">
        <maml:name>InputObject</maml:name>
        <maml:description>
          <maml:para>
                Accepts an object as input to the cmdlet. Enter a variable that contains the objects or type a command or expression that gets the objects.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">PSObject</command:parameterValue>
        <dev:type>
          <maml:name>PSObject</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="2">
        <maml:name>PasteFileName</maml:name>
        <maml:description>
          <maml:para>
          If AsFile switch is set, value supplied will be the name of the file placed in the clipboard. 
        </maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>AsFile</maml:name>
        <maml:description>
          <maml:para>
          Copies input as string and places on clipboard as a file. If PasteFileName is not supplied, the file will be named randomly with a .txt extension.
        </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>NoTrimEnd</maml:name>
        <maml:description>
          <maml:para>
                Suppresses trimming whitespace from the line of each line of input.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Width</maml:name>
        <maml:description>
          <maml:para>
                Specifies the number of characters in each line of output. Any additional characters are truncated, not wrapped. If you omit this parameter, the width is determined by the characteristics of the host. The default for the PowerShell.exe host is 120 (characters).
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">Int32</command:parameterValue>
        <dev:type>
          <maml:name>Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
                Same as Out-String -Width Default.
            </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:title />
      <maml:alert>
        <maml:para>
        </maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>
        </dev:code>
        <dev:remarks>
          <maml:para>
          </maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Get-Clipboard</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-Clipboard</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Write-Clipboard</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Set-ForegroundWindow</command:name>
      <maml:description>
        <maml:para>PSCX Cmdlet: Given an hWnd or window handle, brings that window to the foreground. Useful for restoring a window to uppermost after an application which seizes the foreground is invoked. See also Get-ForegroundWindow</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Set</command:verb>
      <command:noun>ForegroundWindow</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>
         Given an hWnd or window handle, brings that window to the foreground. Useful for restoring a window to uppermost after an application which seizes the foreground is invoked. See also Get-ForegroundWindow
    </maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Set-ForegroundWindow</maml:name>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="1">
          <maml:name>Handle</maml:name>
          <maml:description>
            <maml:para>
                handle for the window to be set as the foreground window. If not specified, this defaults to the main window of the current process.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">IntPtr</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="1">
        <maml:name>Handle</maml:name>
        <maml:description>
          <maml:para>
                handle for the window to be set as the foreground window. If not specified, this defaults to the main window of the current process.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">IntPtr</command:parameterValue>
        <dev:type>
          <maml:name>IntPtr</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:title />
      <maml:alert>
        <maml:para>
        </maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>
        </dev:code>
        <dev:remarks>
          <maml:para>
          </maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Get-ForegroundWindow</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Write-Clipboard</command:name>
      <maml:description>
        <maml:para>PSCX Cmdlet: Writes objects to the clipboard using their string representation, bypassing the default PowerShell formatting.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Write</command:verb>
      <command:noun>Clipboard</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>
         Writes objects to the clipboard using their string representation, bypassing the default PowerShell formatting.
    </maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Write-Clipboard</maml:name>
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="1">
          <maml:name>Object</maml:name>
          <maml:description>
            <maml:para>
                Accepts an object as input to the cmdlet. Enter a variable that contains the objects or type a command or expression that gets the objects.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">Object</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>NoNewLine</maml:name>
          <maml:description>
            <maml:para>
                Specifies that the content written to the clipboard does not end with a newline character.
            </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Separator</maml:name>
          <maml:description>
            <maml:para>
                String to output between objects written to the clipboard.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">Object</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="1">
        <maml:name>Object</maml:name>
        <maml:description>
          <maml:para>
                Accepts an object as input to the cmdlet. Enter a variable that contains the objects or type a command or expression that gets the objects.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>NoNewLine</maml:name>
        <maml:description>
          <maml:para>
                Specifies that the content written to the clipboard does not end with a newline character.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Separator</maml:name>
        <maml:description>
          <maml:para>
                String to output between objects written to the clipboard.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
                One space
            </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:title />
      <maml:alert>
        <maml:para>
        </maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>
        </dev:code>
        <dev:remarks>
          <maml:para>
          </maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Get-Clipboard</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Out-Clipboard</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-Clipboard</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Set-Clipboard</command:name>
      <maml:description>
        <maml:para>PSCX Cmdlet: Puts the specified object into the system clipboard.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Set</command:verb>
      <command:noun>Clipboard</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>
         Puts the specified object into the system clipboard.
    </maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Set-Clipboard</maml:name>
        <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Image</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">Image</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Set-Clipboard</maml:name>
        <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Files</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">FileSystemInfo[]</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Set-Clipboard</maml:name>
        <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Text</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Set-Clipboard</maml:name>
        <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Html</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Set-Clipboard</maml:name>
        <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>Rtf</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>Files</maml:name>
        <maml:description>
          <maml:para>
          </maml:para>
        </maml:description>
        <command:parameterValue required="true">FileSystemInfo[]</command:parameterValue>
        <dev:type>
          <maml:name>FileSystemInfo[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>Html</maml:name>
        <maml:description>
          <maml:para>
          </maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>Image</maml:name>
        <maml:description>
          <maml:para>
          </maml:para>
        </maml:description>
        <command:parameterValue required="true">Image</command:parameterValue>
        <dev:type>
          <maml:name>Image</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>Rtf</maml:name>
        <maml:description>
          <maml:para>
          </maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>Text</maml:name>
        <maml:description>
          <maml:para>
          </maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:title />
      <maml:alert>
        <maml:para>
        </maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>
        </dev:code>
        <dev:remarks>
          <maml:para>
          </maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Get-Clipboard</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Out-Clipboard</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Write-Clipboard</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Convert-Xml</command:name>
      <maml:description>
        <maml:para>PSCX Cmdlet: Performs XSLT transforms on the specified XML file or XmlDocument.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Convert</command:verb>
      <command:noun>Xml</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>
    Performs XSLT transforms on the specified XML file or XmlDocument.  Use the EnableScript parameter to enable script embedded in the XSLT file.
  </maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Convert-Xml</maml:name>
        <command:parameter required="true" globbing="true" pipelineInput="true (ByPropertyName)" position="1">
          <maml:name>Path</maml:name>
          <maml:description>
            <maml:para>
        Specifies the path to the file to process. Wildcard syntax is allowed.
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" globbing="false" pipelineInput="false" position="2">
          <maml:name>XsltPath</maml:name>
          <maml:description>
            <maml:para>
        Path to the XSLT file to apply during the transform.
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ConformanceLevel</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">ConformanceLevel</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>EnableDocumentFunction</maml:name>
          <maml:description>
            <maml:para>
        Enable the document() function in XPath expressions.
      </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>EnableDtd</maml:name>
          <maml:description>
            <maml:para>
        Enables document type definition (DTD) processing.
      </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>EnableScript</maml:name>
          <maml:description>
            <maml:para>
        Enable embedded script blocks in the XSLT.
      </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>OutputPath</maml:name>
          <maml:description>
            <maml:para>
        If set, specifies the path to a file to receive the output. No characters are interpreted as wildcards.
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Convert-Xml</maml:name>
        <command:parameter required="true" globbing="false" pipelineInput="false" position="2">
          <maml:name>XsltPath</maml:name>
          <maml:description>
            <maml:para>
        Path to the XSLT file to apply during the transform.
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>InputObject</maml:name>
          <maml:description>
            <maml:para>
        Accepts an object as input to the cmdlet. Enter a variable that contains the objects or type a command or expression that gets the objects.
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">PSObject</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ConformanceLevel</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">ConformanceLevel</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>EnableDocumentFunction</maml:name>
          <maml:description>
            <maml:para>
        Enable the document() function in XPath expressions.
      </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>EnableDtd</maml:name>
          <maml:description>
            <maml:para>
        Enables document type definition (DTD) processing.
      </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>EnableScript</maml:name>
          <maml:description>
            <maml:para>
        Enable embedded script blocks in the XSLT.
      </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>OutputPath</maml:name>
          <maml:description>
            <maml:para>
        If set, specifies the path to a file to receive the output. No characters are interpreted as wildcards.
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Convert-Xml</maml:name>
        <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
          <maml:name>LiteralPath</maml:name>
          <maml:description>
            <maml:para>
        Specifies a path to the item. The value of -LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" globbing="false" pipelineInput="false" position="2">
          <maml:name>XsltPath</maml:name>
          <maml:description>
            <maml:para>
        Path to the XSLT file to apply during the transform.
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ConformanceLevel</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">ConformanceLevel</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>EnableDocumentFunction</maml:name>
          <maml:description>
            <maml:para>
        Enable the document() function in XPath expressions.
      </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>EnableDtd</maml:name>
          <maml:description>
            <maml:para>
        Enables document type definition (DTD) processing.
      </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>EnableScript</maml:name>
          <maml:description>
            <maml:para>
        Enable embedded script blocks in the XSLT.
      </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>OutputPath</maml:name>
          <maml:description>
            <maml:para>
        If set, specifies the path to a file to receive the output. No characters are interpreted as wildcards.
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
        <maml:name>LiteralPath</maml:name>
        <maml:description>
          <maml:para>
        Specifies a path to the item. The value of -LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" globbing="true" pipelineInput="true (ByPropertyName)" position="1">
        <maml:name>Path</maml:name>
        <maml:description>
          <maml:para>
        Specifies the path to the file to process. Wildcard syntax is allowed.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" globbing="false" pipelineInput="false" position="2">
        <maml:name>XsltPath</maml:name>
        <maml:description>
          <maml:para>
        Path to the XSLT file to apply during the transform.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>InputObject</maml:name>
        <maml:description>
          <maml:para>
        Accepts an object as input to the cmdlet. Enter a variable that contains the objects or type a command or expression that gets the objects.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">PSObject</command:parameterValue>
        <dev:type>
          <maml:name>PSObject</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>ConformanceLevel</maml:name>
        <maml:description>
          <maml:para>
          </maml:para>
        </maml:description>
        <command:parameterValue required="true">ConformanceLevel</command:parameterValue>
        <dev:type>
          <maml:name>ConformanceLevel</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>EnableDocumentFunction</maml:name>
        <maml:description>
          <maml:para>
        Enable the document() function in XPath expressions.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>EnableDtd</maml:name>
        <maml:description>
          <maml:para>
        Enables document type definition (DTD) processing.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>EnableScript</maml:name>
        <maml:description>
          <maml:para>
        Enable embedded script blocks in the XSLT.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>OutputPath</maml:name>
        <maml:description>
          <maml:para>
        If set, specifies the path to a file to receive the output. No characters are interpreted as wildcards.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:title />
      <maml:alert>
        <maml:para>
        </maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>C:\PS&gt; Convert-Xml foo.xml foo.xslt</dev:code>
        <dev:remarks>
          <maml:para>Transforms the XML in the input file foo.xml based on the XSLT specified foo.xslt.</maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>C:\PS&gt; Convert-Xml foo.xml bar.xslt -EnableScript</dev:code>
        <dev:remarks>
          <maml:para>Transforms the XML in the input file foo.xml based on the XSLT specified foo.xslt while enabling embedded script to be processed.</maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Test-Xml</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Format-Xml</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Format-Xml</command:name>
      <maml:description>
        <maml:para>PSCX Cmdlet: Pretty print for XML files and XmlDocument objects.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Format</command:verb>
      <command:noun>Xml</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>
         Pretty print for XML files and XmlDocument objects.
    </maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Format-Xml</maml:name>
        <command:parameter required="true" globbing="true" pipelineInput="true (ByPropertyName)" position="1">
          <maml:name>Path</maml:name>
          <maml:description>
            <maml:para>
                Specifies the path to the file to process. Wildcard syntax is allowed.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>AttributesOnNewLine</maml:name>
          <maml:description>
            <maml:para>
                Write attributes on a new line.
            </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ConformanceLevel</maml:name>
          <maml:description>
            <maml:para>
                Conformance level for XML.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">ConformanceLevel</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>EnableDtd</maml:name>
          <maml:description>
            <maml:para>
          Enables document type definition (DTD) processing.
        </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IndentString</maml:name>
          <maml:description>
            <maml:para>
                The string to use for indenting.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>OmitXmlDeclaration</maml:name>
          <maml:description>
            <maml:para>
                Omit the XML declaration element.
            </maml:para>
          </maml:description>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Format-Xml</maml:name>
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>InputObject</maml:name>
          <maml:description>
            <maml:para>
                Accepts an object as input to the cmdlet. Enter a variable that contains the objects or type a command or expression that gets the objects.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">PSObject</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>AttributesOnNewLine</maml:name>
          <maml:description>
            <maml:para>
                Write attributes on a new line.
            </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ConformanceLevel</maml:name>
          <maml:description>
            <maml:para>
                Conformance level for XML.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">ConformanceLevel</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>EnableDtd</maml:name>
          <maml:description>
            <maml:para>
          Enables document type definition (DTD) processing.
        </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IndentString</maml:name>
          <maml:description>
            <maml:para>
                The string to use for indenting.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>OmitXmlDeclaration</maml:name>
          <maml:description>
            <maml:para>
                Omit the XML declaration element.
            </maml:para>
          </maml:description>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Format-Xml</maml:name>
        <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
          <maml:name>LiteralPath</maml:name>
          <maml:description>
            <maml:para>
                Specifies a path to the item. The value of -LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>AttributesOnNewLine</maml:name>
          <maml:description>
            <maml:para>
                Write attributes on a new line.
            </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ConformanceLevel</maml:name>
          <maml:description>
            <maml:para>
                Conformance level for XML.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">ConformanceLevel</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>EnableDtd</maml:name>
          <maml:description>
            <maml:para>
          Enables document type definition (DTD) processing.
        </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IndentString</maml:name>
          <maml:description>
            <maml:para>
                The string to use for indenting.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>OmitXmlDeclaration</maml:name>
          <maml:description>
            <maml:para>
                Omit the XML declaration element.
            </maml:para>
          </maml:description>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
        <maml:name>LiteralPath</maml:name>
        <maml:description>
          <maml:para>
                Specifies a path to the item. The value of -LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" globbing="true" pipelineInput="true (ByPropertyName)" position="1">
        <maml:name>Path</maml:name>
        <maml:description>
          <maml:para>
                Specifies the path to the file to process. Wildcard syntax is allowed.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>InputObject</maml:name>
        <maml:description>
          <maml:para>
                Accepts an object as input to the cmdlet. Enter a variable that contains the objects or type a command or expression that gets the objects.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">PSObject</command:parameterValue>
        <dev:type>
          <maml:name>PSObject</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>AttributesOnNewLine</maml:name>
        <maml:description>
          <maml:para>
                Write attributes on a new line.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>ConformanceLevel</maml:name>
        <maml:description>
          <maml:para>
                Conformance level for XML.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">ConformanceLevel</command:parameterValue>
        <dev:type>
          <maml:name>ConformanceLevel</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
                Auto
            </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>EnableDtd</maml:name>
        <maml:description>
          <maml:para>
          Enables document type definition (DTD) processing.
        </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IndentString</maml:name>
        <maml:description>
          <maml:para>
                The string to use for indenting.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>OmitXmlDeclaration</maml:name>
        <maml:description>
          <maml:para>
                Omit the XML declaration element.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:title />
      <maml:alert>
        <maml:para>
        </maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>C:\PS&gt; Format-Xml foo.xml</dev:code>
        <dev:remarks>
          <maml:para>Formats the XML in foo.xml in a "pretty print" manner.</maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>C:\PS&gt; Format-Xml foo.xml -AttributesOnNewLine</dev:code>
        <dev:remarks>
          <maml:para>Formats the XML in foo.xml in a "pretty print" manner putting each attribute on a new line.</maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>C:\PS&gt; Format-Xml foo.xml -EnableDtd</dev:code>
        <dev:remarks>
          <maml:para>Formats the XML in foo.xml which uses a DTD in a "pretty print" manner.</maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Convert-Xml</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Test-Xml</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Test-Xml</command:name>
      <maml:description>
        <maml:para>PSCX Cmdlet: Tests for well formedness and optionally validates against XML Schema.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Test</command:verb>
      <command:noun>Xml</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>
    Tests for well formedness and optionally validates against XML Schema.  It doesn't handle specifying the targetNamespace.  To see validation error messages, specify the -Verbose flag.
  </maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Test-Xml</maml:name>
        <command:parameter required="true" globbing="true" pipelineInput="true (ByPropertyName)" position="1">
          <maml:name>Path</maml:name>
          <maml:description>
            <maml:para>
        Specifies the path to the file to process. Wildcard syntax is allowed.
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>EnableDtd</maml:name>
          <maml:description>
            <maml:para>
        Enables document type definition (DTD) processing.
      </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SchemaPath</maml:name>
          <maml:description>
            <maml:para>
        Array of paths to the required schema files to perform schema-based validation.
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Validate</maml:name>
          <maml:description>
            <maml:para>
        Forces schema validation of the XML against inline schema.
      </maml:para>
          </maml:description>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Test-Xml</maml:name>
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>InputObject</maml:name>
          <maml:description>
            <maml:para>
        Accepts an object as input to the cmdlet. Enter a variable that contains the objects or type a command or expression that gets the objects.
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">PSObject</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>EnableDtd</maml:name>
          <maml:description>
            <maml:para>
        Enables document type definition (DTD) processing.
      </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SchemaPath</maml:name>
          <maml:description>
            <maml:para>
        Array of paths to the required schema files to perform schema-based validation.
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Validate</maml:name>
          <maml:description>
            <maml:para>
        Forces schema validation of the XML against inline schema.
      </maml:para>
          </maml:description>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Test-Xml</maml:name>
        <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
          <maml:name>LiteralPath</maml:name>
          <maml:description>
            <maml:para>
        Specifies a path to the item. The value of -LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>EnableDtd</maml:name>
          <maml:description>
            <maml:para>
        Enables document type definition (DTD) processing.
      </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SchemaPath</maml:name>
          <maml:description>
            <maml:para>
        Array of paths to the required schema files to perform schema-based validation.
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Validate</maml:name>
          <maml:description>
            <maml:para>
        Forces schema validation of the XML against inline schema.
      </maml:para>
          </maml:description>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
        <maml:name>LiteralPath</maml:name>
        <maml:description>
          <maml:para>
        Specifies a path to the item. The value of -LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" globbing="true" pipelineInput="true (ByPropertyName)" position="1">
        <maml:name>Path</maml:name>
        <maml:description>
          <maml:para>
        Specifies the path to the file to process. Wildcard syntax is allowed.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>InputObject</maml:name>
        <maml:description>
          <maml:para>
        Accepts an object as input to the cmdlet. Enter a variable that contains the objects or type a command or expression that gets the objects.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">PSObject</command:parameterValue>
        <dev:type>
          <maml:name>PSObject</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>EnableDtd</maml:name>
        <maml:description>
          <maml:para>
        Enables document type definition (DTD) processing.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>SchemaPath</maml:name>
        <maml:description>
          <maml:para>
        Array of paths to the required schema files to perform schema-based validation.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Validate</maml:name>
        <maml:description>
          <maml:para>
        Forces schema validation of the XML against inline schema.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:title />
      <maml:alert>
        <maml:para>
        </maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>C:\PS&gt; Test-Xml foo.xml </dev:code>
        <dev:remarks>
          <maml:para>Returns true or false indicating whether or not foo.xml is well-formed.</maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>C:\PS&gt; Test-Xml foo.xml -Verbose </dev:code>
        <dev:remarks>
          <maml:para>Returns true or false indicating whether or not foo.xml is well-formed and displays any XML error info.</maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>C:\PS&gt; Test-Xml foo.xml -SchemaPath .\foo.xsd</dev:code>
        <dev:remarks>
          <maml:para>Returns true or false indicating whether or not foo.xml is well-formed and conforms to the schema defined in foo.xsd.</maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 4 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>C:\PS&gt; Test-Xml foo.xml -EnableDtd</dev:code>
        <dev:remarks>
          <maml:para>Returns true or false indicating whether or not foo.xml is well-formed. This examples enables DTD processing for XML files that use a DTD.</maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Convert-Xml</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Format-Xml</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>ConvertFrom-Base64</command:name>
      <maml:description>
        <maml:para>PSCX Cmdlet: Converts base64 encoded string to byte array.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>ConvertFrom</command:verb>
      <command:noun>Base64</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>
    Converts base64 encoded string to byte array.
  </maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>ConvertFrom-Base64</maml:name>
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="1">
          <maml:name>Base64Text</maml:name>
          <maml:description>
            <maml:para>
        Base64 encoded string to be converted into byte arary.
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>OutputPath</maml:name>
          <maml:description>
            <maml:para>
        The path to write the results to.  The results are written in binary format.
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="1">
        <maml:name>Base64Text</maml:name>
        <maml:description>
          <maml:para>
        Base64 encoded string to be converted into byte arary.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>OutputPath</maml:name>
        <maml:description>
          <maml:para>
        The path to write the results to.  The results are written in binary format.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:title />
      <maml:alert>
        <maml:para>If an OutputPath is not specified then an array of bytes is output.  Using the OutputPath parameter is faster than using 'set-content -enc byte foo.dll' to write the output to a file.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>
        $b64 | ConvertFrom-Base64 -OutputPath foo.dll
      </dev:code>
        <dev:remarks>
          <maml:para>Converts the Base64 string in $b64 to a byte array and stores it in the foo.dll file.</maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>
        ConvertFrom-Base64 -Base64Text $b64 -OutputPath foo.dll
      </dev:code>
        <dev:remarks>
          <maml:para>Converts the Base64 string in $b64 to a byte array and stores it in the foo.dll file.</maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>ConvertTo-Base64</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>ConvertTo-Base64</command:name>
      <maml:description>
        <maml:para>PSCX Cmdlet: Converts byte array or specified file contents to base64 string.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>ConvertTo</command:verb>
      <command:noun>Base64</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>
    Converts byte array or specified file contents to base64 string.  By default, this cmdlet inserts line breaks every 76 characters and outputs the result in a single string. For very large files, you may run into OutOfMemoryExceptions. In this case, use the -Stream parameter which will generate multiple string outputs that, combined together, result in the equivalent base 64 text.
  </maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>ConvertTo-Base64</maml:name>
        <command:parameter required="true" globbing="true" pipelineInput="true (ByPropertyName)" position="1">
          <maml:name>Path</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>NoLineBreak</maml:name>
          <maml:description>
            <maml:para>
        Suppress line breaks that are added by default every 76 characters.
      </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Stream</maml:name>
          <maml:description>
            <maml:para>
        Outputs multiple strings for the base 64 encoded data. By default, the bytes are accumulated and encoded as a single string which can generate OutOfMemoryExceptions for very large files.
      </maml:para>
          </maml:description>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>ConvertTo-Base64</maml:name>
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>InputObject</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">PSObject</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>NoLineBreak</maml:name>
          <maml:description>
            <maml:para>
        Suppress line breaks that are added by default every 76 characters.
      </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Stream</maml:name>
          <maml:description>
            <maml:para>
        Outputs multiple strings for the base 64 encoded data. By default, the bytes are accumulated and encoded as a single string which can generate OutOfMemoryExceptions for very large files.
      </maml:para>
          </maml:description>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>ConvertTo-Base64</maml:name>
        <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
          <maml:name>LiteralPath</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>NoLineBreak</maml:name>
          <maml:description>
            <maml:para>
        Suppress line breaks that are added by default every 76 characters.
      </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Stream</maml:name>
          <maml:description>
            <maml:para>
        Outputs multiple strings for the base 64 encoded data. By default, the bytes are accumulated and encoded as a single string which can generate OutOfMemoryExceptions for very large files.
      </maml:para>
          </maml:description>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
        <maml:name>LiteralPath</maml:name>
        <maml:description>
          <maml:para>
          </maml:para>
        </maml:description>
        <command:parameterValue required="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" globbing="true" pipelineInput="true (ByPropertyName)" position="1">
        <maml:name>Path</maml:name>
        <maml:description>
          <maml:para>
          </maml:para>
        </maml:description>
        <command:parameterValue required="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>InputObject</maml:name>
        <maml:description>
          <maml:para>
          </maml:para>
        </maml:description>
        <command:parameterValue required="true">PSObject</command:parameterValue>
        <dev:type>
          <maml:name>PSObject</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>NoLineBreak</maml:name>
        <maml:description>
          <maml:para>
        Suppress line breaks that are added by default every 76 characters.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        false
      </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Stream</maml:name>
        <maml:description>
          <maml:para>
        Outputs multiple strings for the base 64 encoded data. By default, the bytes are accumulated and encoded as a single string which can generate OutOfMemoryExceptions for very large files.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        false
      </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:inputType>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:inputType>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:title />
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>[byte[]](1..127) | ConvertTo-Base64</dev:code>
        <dev:remarks>
          <maml:para>This buffers up the steam of bytes and then outputs the base64 string.</maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>$arr = [byte[]](1..127); ConvertTo-Base64 -Inp $arr</dev:code>
        <dev:remarks>
          <maml:para>This outputs the base64 string based on the byte array passed into the InputObject parameter.</maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>$b64 = ConvertTo-Base64 Foo.dll -NoLineBreak</dev:code>
        <dev:remarks>
          <maml:para>Converts the specified file (read as binary) to a base 64 string.</maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 4 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>ConvertTo-Base64 $PSHome\PowerShell.exe -stream &gt; b64.txt</dev:code>
        <dev:remarks>
          <maml:para>When dealing with large files it is usually better to pass the path to ConvertTo-Base64.</maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>ConvertFrom-Base64</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Join-String</command:name>
      <maml:description>
        <maml:para>PSCX Cmdlet: Joins an array of strings into a single string.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Join</command:verb>
      <command:noun>String</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>
         Joins an array of strings into a single string.
    </maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Join-String</maml:name>
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="1">
          <maml:name>Strings</maml:name>
          <maml:description>
            <maml:para>
                String(s) to be joined.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>NewLine</maml:name>
          <maml:description>
            <maml:para>
                Insert newline as separator between joined strings.
            </maml:para>
          </maml:description>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Join-String</maml:name>
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="1">
          <maml:name>Strings</maml:name>
          <maml:description>
            <maml:para>
                String(s) to be joined.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Separator</maml:name>
          <maml:description>
            <maml:para>
                Insert specified string as the separator between joined strings.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="1">
        <maml:name>Strings</maml:name>
        <maml:description>
          <maml:para>
                String(s) to be joined.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>NewLine</maml:name>
        <maml:description>
          <maml:para>
                Insert newline as separator between joined strings.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Separator</maml:name>
        <maml:description>
          <maml:para>
                Insert specified string as the separator between joined strings.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:title />
      <maml:alert>
        <maml:para>
        </maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>
        </dev:code>
        <dev:remarks>
          <maml:para>
          </maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Split-String</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Split-String</command:name>
      <maml:description>
        <maml:para>PSCX Cmdlet: Splits a single string into an array of strings.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Split</command:verb>
      <command:noun>String</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>
         Splits a single string into an array of strings.
    </maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Split-String</maml:name>
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="2">
          <maml:name>Input</maml:name>
          <maml:description>
            <maml:para>
                String input to be split.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="1">
          <maml:name>Separator</maml:name>
          <maml:description>
            <maml:para>
                Array of characters or string to use for separator.  Null value or empty array will result in white space being used as separator.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Count</maml:name>
          <maml:description>
            <maml:para>
                Maximum count of substrings to output.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>NewLine</maml:name>
          <maml:description>
            <maml:para>
                Add environment's newline string as a separator.
            </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>RemoveEmptyStrings</maml:name>
          <maml:description>
            <maml:para>
                If specified, empty substrings will be removed from output.
            </maml:para>
          </maml:description>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Split-String</maml:name>
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="2">
          <maml:name>Input</maml:name>
          <maml:description>
            <maml:para>
                String input to be split.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>CaseSensitive</maml:name>
          <maml:description>
            <maml:para>
                Indicates that the regex is case sensitive.
            </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Count</maml:name>
          <maml:description>
            <maml:para>
                Maximum count of substrings to output.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>MultiLine</maml:name>
          <maml:description>
            <maml:para>
                Enables the Multiline regex option. ^ and $ will match begging and end of each line in a single string.
            </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="true" pipelineInput="false" position="named">
          <maml:name>RegexSeparator</maml:name>
          <maml:description>
            <maml:para>
                Regular expression pattern to use as a separator.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>RemoveEmptyStrings</maml:name>
          <maml:description>
            <maml:para>
                If specified, empty substrings will be removed from output.
            </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SingleLine</maml:name>
          <maml:description>
            <maml:para>
                Enables the Singeline regex option. The period character (.) will match every character including newline characters.
            </maml:para>
          </maml:description>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="2">
        <maml:name>Input</maml:name>
        <maml:description>
          <maml:para>
                String input to be split.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="1">
        <maml:name>Separator</maml:name>
        <maml:description>
          <maml:para>
                Array of characters or string to use for separator.  Null value or empty array will result in white space being used as separator.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>CaseSensitive</maml:name>
        <maml:description>
          <maml:para>
                Indicates that the regex is case sensitive.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Count</maml:name>
        <maml:description>
          <maml:para>
                Maximum count of substrings to output.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">Int32</command:parameterValue>
        <dev:type>
          <maml:name>Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>MultiLine</maml:name>
        <maml:description>
          <maml:para>
                Enables the Multiline regex option. ^ and $ will match begging and end of each line in a single string.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>NewLine</maml:name>
        <maml:description>
          <maml:para>
                Add environment's newline string as a separator.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="true" pipelineInput="false" position="named">
        <maml:name>RegexSeparator</maml:name>
        <maml:description>
          <maml:para>
                Regular expression pattern to use as a separator.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>RemoveEmptyStrings</maml:name>
        <maml:description>
          <maml:para>
                If specified, empty substrings will be removed from output.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>SingleLine</maml:name>
        <maml:description>
          <maml:para>
                Enables the Singeline regex option. The period character (.) will match every character including newline characters.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:title />
      <maml:alert>
        <maml:para>
        </maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>
        </dev:code>
        <dev:remarks>
          <maml:para>
          </maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Join-String</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>ConvertTo-MacOs9LineEnding</command:name>
      <maml:description>
        <maml:para>PSCX Cmdlet: Converts the line endings in the specified file to Mac OS9 and earlier style line endings "\r".</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>ConvertTo</command:verb>
      <command:noun>MacOs9LineEnding</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>
         Converts the line endings in the specified file to Mac OS9 and earlier style line endings "\r".  You can convert a single file to a new file name.  Or you can convert multiple files and specify a destination directory.  By default, this cmdlet will overwrite existing files unless you specify -NoClobber.  If you want to force the overwrite of read only files use the -Force option.  
    </maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>ConvertTo-MacOs9LineEnding</maml:name>
        <command:parameter required="true" globbing="true" pipelineInput="true (ByValue, ByPropertyName)" position="1">
          <maml:name>Path</maml:name>
          <maml:description>
            <maml:para>
                Specifies the path to the file to process. Wildcard syntax is allowed.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" globbing="false" pipelineInput="false" position="2">
          <maml:name>Destination</maml:name>
          <maml:description>
            <maml:para>
                Destination to write the converted file. If the destination is a directory, then the file is written to the directory using the same name.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Force</maml:name>
          <maml:description>
            <maml:para>
                Overwrite any existing readonly file.
            </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>NoClobber</maml:name>
          <maml:description>
            <maml:para>
                Specifies not to overwrite any existing file.
            </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="3">
          <maml:name>Encoding</maml:name>
          <maml:description>
            <maml:para>
                Encoding used to write the output file. By default the encoding of the input file is used.  Valid values are: unicode, utf7, utf8, utf32, ascii and bigendianunicode
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">StringEncodingParameter</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>ConvertTo-MacOs9LineEnding</maml:name>
        <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
          <maml:name>LiteralPath</maml:name>
          <maml:description>
            <maml:para>
                Specifies a path to the item. The value of -LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" globbing="false" pipelineInput="false" position="2">
          <maml:name>Destination</maml:name>
          <maml:description>
            <maml:para>
                Destination to write the converted file. If the destination is a directory, then the file is written to the directory using the same name.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Force</maml:name>
          <maml:description>
            <maml:para>
                Overwrite any existing readonly file.
            </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>NoClobber</maml:name>
          <maml:description>
            <maml:para>
                Specifies not to overwrite any existing file.
            </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="3">
          <maml:name>Encoding</maml:name>
          <maml:description>
            <maml:para>
                Encoding used to write the output file. By default the encoding of the input file is used.  Valid values are: unicode, utf7, utf8, utf32, ascii and bigendianunicode
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">StringEncodingParameter</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
        <maml:name>LiteralPath</maml:name>
        <maml:description>
          <maml:para>
                Specifies a path to the item. The value of -LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" globbing="true" pipelineInput="true (ByValue, ByPropertyName)" position="1">
        <maml:name>Path</maml:name>
        <maml:description>
          <maml:para>
                Specifies the path to the file to process. Wildcard syntax is allowed.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" globbing="false" pipelineInput="false" position="2">
        <maml:name>Destination</maml:name>
        <maml:description>
          <maml:para>
                Destination to write the converted file. If the destination is a directory, then the file is written to the directory using the same name.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Force</maml:name>
        <maml:description>
          <maml:para>
                Overwrite any existing readonly file.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>NoClobber</maml:name>
        <maml:description>
          <maml:para>
                Specifies not to overwrite any existing file.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="3">
        <maml:name>Encoding</maml:name>
        <maml:description>
          <maml:para>
                Encoding used to write the output file. By default the encoding of the input file is used.  Valid values are: unicode, utf7, utf8, utf32, ascii and bigendianunicode
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">StringEncodingParameter</command:parameterValue>
        <dev:type>
          <maml:name>StringEncodingParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:title />
      <maml:alert>
        <maml:para>
        </maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>
        </dev:code>
        <dev:remarks>
          <maml:para>
          </maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>ConvertTo-UnixLineEnding</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>ConvertTo-WindowsLineEnding</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>ConvertTo-UnixLineEnding</command:name>
      <maml:description>
        <maml:para>PSCX Cmdlet: Converts the line endings in the specified file to Unix line endings "\n".</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>ConvertTo</command:verb>
      <command:noun>UnixLineEnding</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>
         Converts the line endings in the specified file to Unix line endings "\n".  You can convert a single file to a new file name.  Or you can convert multiple files and specify a destination directory.  By default, this cmdlet will overwrite existing files unless you specify -NoClobber.  If you want to force the overwrite of read only files use the -Force option.  
    </maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>ConvertTo-UnixLineEnding</maml:name>
        <command:parameter required="true" globbing="true" pipelineInput="true (ByValue, ByPropertyName)" position="1">
          <maml:name>Path</maml:name>
          <maml:description>
            <maml:para>
                Specifies the path to the file to process. Wildcard syntax is allowed.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" globbing="false" pipelineInput="false" position="2">
          <maml:name>Destination</maml:name>
          <maml:description>
            <maml:para>
                Destination to write the converted file. If the destination is a directory, then the file is written to the directory using the same name.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Force</maml:name>
          <maml:description>
            <maml:para>
                Overwrite any existing readonly file.
            </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>NoClobber</maml:name>
          <maml:description>
            <maml:para>
                Specifies not to overwrite any existing file.
            </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="3">
          <maml:name>Encoding</maml:name>
          <maml:description>
            <maml:para>
                Encoding used to write the output file. By default the encoding of the input file is used.  Valid values are: unicode, utf7, utf8, utf32, ascii and bigendianunicode
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">StringEncodingParameter</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>ConvertTo-UnixLineEnding</maml:name>
        <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
          <maml:name>LiteralPath</maml:name>
          <maml:description>
            <maml:para>
                Specifies a path to the item. The value of -LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" globbing="false" pipelineInput="false" position="2">
          <maml:name>Destination</maml:name>
          <maml:description>
            <maml:para>
                Destination to write the converted file. If the destination is a directory, then the file is written to the directory using the same name.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Force</maml:name>
          <maml:description>
            <maml:para>
                Overwrite any existing readonly file.
            </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>NoClobber</maml:name>
          <maml:description>
            <maml:para>
                Specifies not to overwrite any existing file.
            </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="3">
          <maml:name>Encoding</maml:name>
          <maml:description>
            <maml:para>
                Encoding used to write the output file. By default the encoding of the input file is used.  Valid values are: unicode, utf7, utf8, utf32, ascii and bigendianunicode
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">StringEncodingParameter</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
        <maml:name>LiteralPath</maml:name>
        <maml:description>
          <maml:para>
                Specifies a path to the item. The value of -LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" globbing="true" pipelineInput="true (ByValue, ByPropertyName)" position="1">
        <maml:name>Path</maml:name>
        <maml:description>
          <maml:para>
                Specifies the path to the file to process. Wildcard syntax is allowed.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" globbing="false" pipelineInput="false" position="2">
        <maml:name>Destination</maml:name>
        <maml:description>
          <maml:para>
                Destination to write the converted file. If the destination is a directory, then the file is written to the directory using the same name.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Force</maml:name>
        <maml:description>
          <maml:para>
                Overwrite any existing readonly file.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>NoClobber</maml:name>
        <maml:description>
          <maml:para>
                Specifies not to overwrite any existing file.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="3">
        <maml:name>Encoding</maml:name>
        <maml:description>
          <maml:para>
                Encoding used to write the output file. By default the encoding of the input file is used.  Valid values are: unicode, utf7, utf8, utf32, ascii and bigendianunicode
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">StringEncodingParameter</command:parameterValue>
        <dev:type>
          <maml:name>StringEncodingParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:title />
      <maml:alert>
        <maml:para>
        </maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>
        </dev:code>
        <dev:remarks>
          <maml:para>
          </maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>ConvertTo-MacOs9LineEnding</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>ConvertTo-WindowsLineEnding</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>ConvertTo-WindowsLineEnding</command:name>
      <maml:description>
        <maml:para>PSCX Cmdlet: Converts the line endings in the specified file to Windows line endings "\r\n".</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>ConvertTo</command:verb>
      <command:noun>WindowsLineEnding</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>
         Converts the line endings in the specified file to Windows line endings "\r\n".  You can convert a single file to a new file name.  Or you can convert multiple files and specify a destination directory.  By default, this cmdlet will overwrite existing files unless you specify -NoClobber.  If you want to force the overwrite of read only files use the -Force option.  
    </maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>ConvertTo-WindowsLineEnding</maml:name>
        <command:parameter required="true" globbing="true" pipelineInput="true (ByValue, ByPropertyName)" position="1">
          <maml:name>Path</maml:name>
          <maml:description>
            <maml:para>
                Specifies the path to the file to process. Wildcard syntax is allowed.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" globbing="false" pipelineInput="false" position="2">
          <maml:name>Destination</maml:name>
          <maml:description>
            <maml:para>
                Destination to write the converted file. If the destination is a directory, then the file is written to the directory using the same name.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Force</maml:name>
          <maml:description>
            <maml:para>
                Overwrite any existing readonly file.
            </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>NoClobber</maml:name>
          <maml:description>
            <maml:para>
                Specifies not to overwrite any existing file.
            </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="3">
          <maml:name>Encoding</maml:name>
          <maml:description>
            <maml:para>
                Encoding used to write the output file. By default the encoding of the input file is used.  Valid values are: unicode, utf7, utf8, utf32, ascii and bigendianunicode
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">StringEncodingParameter</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>ConvertTo-WindowsLineEnding</maml:name>
        <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
          <maml:name>LiteralPath</maml:name>
          <maml:description>
            <maml:para>
                Specifies a path to the item. The value of -LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" globbing="false" pipelineInput="false" position="2">
          <maml:name>Destination</maml:name>
          <maml:description>
            <maml:para>
                Destination to write the converted file. If the destination is a directory, then the file is written to the directory using the same name.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Force</maml:name>
          <maml:description>
            <maml:para>
                Overwrite any existing readonly file.
            </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>NoClobber</maml:name>
          <maml:description>
            <maml:para>
                Specifies not to overwrite any existing file.
            </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="3">
          <maml:name>Encoding</maml:name>
          <maml:description>
            <maml:para>
                Encoding used to write the output file. By default the encoding of the input file is used.  Valid values are: unicode, utf7, utf8, utf32, ascii and bigendianunicode
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">StringEncodingParameter</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
        <maml:name>LiteralPath</maml:name>
        <maml:description>
          <maml:para>
                Specifies a path to the item. The value of -LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" globbing="true" pipelineInput="true (ByValue, ByPropertyName)" position="1">
        <maml:name>Path</maml:name>
        <maml:description>
          <maml:para>
                Specifies the path to the file to process. Wildcard syntax is allowed.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" globbing="false" pipelineInput="false" position="2">
        <maml:name>Destination</maml:name>
        <maml:description>
          <maml:para>
                Destination to write the converted file. If the destination is a directory, then the file is written to the directory using the same name.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Force</maml:name>
        <maml:description>
          <maml:para>
                Overwrite any existing readonly file.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>NoClobber</maml:name>
        <maml:description>
          <maml:para>
                Specifies not to overwrite any existing file.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="3">
        <maml:name>Encoding</maml:name>
        <maml:description>
          <maml:para>
                Encoding used to write the output file. By default the encoding of the input file is used.  Valid values are: unicode, utf7, utf8, utf32, ascii and bigendianunicode
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">StringEncodingParameter</command:parameterValue>
        <dev:type>
          <maml:name>StringEncodingParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:title />
      <maml:alert>
        <maml:para>
        </maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>
        </dev:code>
        <dev:remarks>
          <maml:para>
          </maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>ConvertTo-MacOs9LineEnding</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>ConvertTo-UnixLineEnding</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-LoremIpsum</command:name>
      <maml:description>
        <maml:para>PSCX Cmdlet: </maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Get</command:verb>
      <command:noun>LoremIpsum</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>
      </maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-LoremIpsum</maml:name>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="1">
          <maml:name>Length</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Character</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Language</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">LoremIpsumLanguage</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Get-LoremIpsum</maml:name>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="1">
          <maml:name>Length</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Language</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">LoremIpsumLanguage</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Word</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Get-LoremIpsum</maml:name>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="1">
          <maml:name>Length</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Language</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">LoremIpsumLanguage</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Paragraph</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="1">
        <maml:name>Length</maml:name>
        <maml:description>
          <maml:para>
          </maml:para>
        </maml:description>
        <command:parameterValue required="true">Int32</command:parameterValue>
        <dev:type>
          <maml:name>Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Character</maml:name>
        <maml:description>
          <maml:para>
          </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Language</maml:name>
        <maml:description>
          <maml:para>
          </maml:para>
        </maml:description>
        <command:parameterValue required="true">LoremIpsumLanguage</command:parameterValue>
        <dev:type>
          <maml:name>LoremIpsumLanguage</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Paragraph</maml:name>
        <maml:description>
          <maml:para>
          </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Word</maml:name>
        <maml:description>
          <maml:para>
          </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </dev:type>
        <maml:description />
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </dev:type>
        <maml:description />
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:title />
      <maml:alert>
        <maml:para>
        </maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>
        </dev:code>
        <dev:remarks>
          <maml:para>
          </maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks />
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Edit-File</command:name>
      <maml:description>
        <maml:para>PSCX Cmdlet: Edits a file using a regex pattern to find text to be replaced by a specified replacement string.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Edit</command:verb>
      <command:noun>File</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>
    The Edit-File cmdlet modifies the specified files using a search pattern and replacement text. The search pattern is specified by the Pattern parameter and can be either "simple match" text or a regular expression.  The replacement text is specified by the Replacement parameter.  The Edit-File cmdlet can also be used to edit files interactively.  By default, notepad.exe is used to interactively edit the specified file.  You can specify an alternate interactive text editor using $Pscx:Preferences['TextEditor] = 'notepad2.exe'.
    
By default the regex is applied to the file line by line. You can use the SingleString parameter to load the entire file into memory as a single string.  With SingleString, the regex is applied to the entire file at once.  This enables you to specify a regular expression such as '(?s)(&lt;PostBuildEvent&gt;).*?(&lt;/PostBuildEvent&gt;)' that spans multiple lines.  The regular expression mode modifier '(?s)' enables Singleline mode which causes the '.' metacharacter to match every character including newline characters. 

One consequence of processing the file using the SingleString parameter is that your regex may have to handle carriage return (\r) characters.  The regex metacharacter $ matches only newline (\n) and NOT carriage return (\r) characters.  You need to be aware of this when using the metacharacter $ in Multiline mode to replace the entire contents of a line.  If you're not careful you can eliminate \r from the newline sequence.  To avoid this, use an end of line regex positve look-ahead pattern like '(?=\r$)'.
  </maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Edit-File</maml:name>
        <command:parameter required="true" globbing="true" pipelineInput="true (ByValue, ByPropertyName)" position="1">
          <maml:name>Path</maml:name>
          <maml:description>
            <maml:para>
        Specifies the path to the file to edit. Wildcard syntax is allowed.
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Force</maml:name>
          <maml:description>
            <maml:para>
        Allows the cmdlet to edit files that are read-only by making them writable.
      </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PassThru</maml:name>
          <maml:description>
            <maml:para>
        Passes a FileInfo object representing the file to the pipeline. By default, this cmdlet does not generate any output.
      </maml:para>
          </maml:description>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Edit-File</maml:name>
        <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
          <maml:name>LiteralPath</maml:name>
          <maml:description>
            <maml:para>
        Specifies a path to the file to edit. The value of -LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Edit-File</maml:name>
        <command:parameter required="true" globbing="false" pipelineInput="false" position="2">
          <maml:name>Pattern</maml:name>
          <maml:description>
            <maml:para>
        Specifies the text to replace. Type a string or regular expression. If you type a string, use the SimpleMatch parameter. To learn about regular expressions, see about_Regular_Expressions.
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" globbing="false" pipelineInput="false" position="3">
          <maml:name>Replacement</maml:name>
          <maml:description>
            <maml:para>
        The replacement string to use for the specified pattern.  You can use regular expression substitutions in the replacement string.
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>CaseSensitive</maml:name>
          <maml:description>
            <maml:para>
        Makes Pattern matches case-sensitive. By default, Pattern matches are not case-sensitive.
      </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Encoding</maml:name>
          <maml:description>
            <maml:para>
        Specifies the type of character encoding used to write to the file. Valid values are "Unicode", "UTF7", "UTF8", "UTF32", "ASCII", "BigEndianUnicode", "Default", and "OEM".  By default, the cmdlet uses the encoding it detected while reading the file.

"Default" uses the encoding of the system's current ANSI code page.

"OEM" uses the current original equipment manufacturer code page identifier for the operating system.
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SimpleMatch</maml:name>
          <maml:description>
            <maml:para>
        Uses a simple match rather than a regular expression match. In a simple match, Edit-File searches the file for the text in the Pattern parameter. It does not interpret the value of the Pattern parameter as a regular expression statement.
      </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SingleString</maml:name>
          <maml:description>
            <maml:para>
        Processes the file's contents as a single string.  By default, the cmdlet processes the file one line at at time.  Using SingleString enables regex patterns to select text that spans multiple lines.  In order to take take advantage of SingleString you will likely need to use the Singleline mode modifier (?s), Multiline mode modifier (?m) or both (?sm).
      </maml:para>
          </maml:description>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" globbing="true" pipelineInput="true (ByValue, ByPropertyName)" position="1">
        <maml:name>Path</maml:name>
        <maml:description>
          <maml:para>
        Specifies the path to the file to edit. Wildcard syntax is allowed.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" globbing="false" pipelineInput="false" position="2">
        <maml:name>Pattern</maml:name>
        <maml:description>
          <maml:para>
        Specifies the text to replace. Type a string or regular expression. If you type a string, use the SimpleMatch parameter. To learn about regular expressions, see about_Regular_Expressions.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
        <maml:name>LiteralPath</maml:name>
        <maml:description>
          <maml:para>
        Specifies a path to the file to edit. The value of -LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" globbing="false" pipelineInput="false" position="3">
        <maml:name>Replacement</maml:name>
        <maml:description>
          <maml:para>
        The replacement string to use for the specified pattern.  You can use regular expression substitutions in the replacement string.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>CaseSensitive</maml:name>
        <maml:description>
          <maml:para>
        Makes Pattern matches case-sensitive. By default, Pattern matches are not case-sensitive.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Encoding</maml:name>
        <maml:description>
          <maml:para>
        Specifies the type of character encoding used to write to the file. Valid values are "Unicode", "UTF7", "UTF8", "UTF32", "ASCII", "BigEndianUnicode", "Default", and "OEM".  By default, the cmdlet uses the encoding it detected while reading the file.

"Default" uses the encoding of the system's current ANSI code page.

"OEM" uses the current original equipment manufacturer code page identifier for the operating system.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Force</maml:name>
        <maml:description>
          <maml:para>
        Allows the cmdlet to edit files that are read-only by making them writable.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>PassThru</maml:name>
        <maml:description>
          <maml:para>
        Passes a FileInfo object representing the file to the pipeline. By default, this cmdlet does not generate any output.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>SimpleMatch</maml:name>
        <maml:description>
          <maml:para>
        Uses a simple match rather than a regular expression match. In a simple match, Edit-File searches the file for the text in the Pattern parameter. It does not interpret the value of the Pattern parameter as a regular expression statement.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>SingleString</maml:name>
        <maml:description>
          <maml:para>
        Processes the file's contents as a single string.  By default, the cmdlet processes the file one line at at time.  Using SingleString enables regex patterns to select text that spans multiple lines.  In order to take take advantage of SingleString you will likely need to use the Singleline mode modifier (?s), Multiline mode modifier (?m) or both (?sm).
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>You can pipe a path that represents the file to edit.</maml:para>
          </maml:description>
        </dev:type>
        <maml:description />
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>None or a System.IO.FileInfo object representing the file.</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>When you use the Passthru parameter, Edit-File generates an object representing the file. Otherwise, this cmdlet does not generate any output.</maml:para>
          </maml:description>
        </dev:type>
        <maml:description />
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:title />
      <maml:alert>
        <maml:para>
        </maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>
        PS C:\&gt; Edit-File
      </dev:code>
        <dev:remarks>
          <maml:para>Starts the editor. Notepad.exe is started unless the PSCX TextEditor preference has been set to another text editor.  You can specify an alternate text editor using $Pscx:Preferences['TextEditor] = 'notepad2.exe'</maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>
        PS C:\&gt; Edit-File $profile
      </dev:code>
        <dev:remarks>
          <maml:para>Starts the text editor passing the specified file to be opened. Notepad.exe is started unless the PSCX TextEditor preference has been set to another text editor.  You can specify an alternate text editor using $Pscx:Preferences['TextEditor] = 'notepad2.exe'</maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>
        PS C:\&gt; Edit-File Acme\Src\Foo\Foo.csproj -Pattern v4\.0 -Replacement v4.5.1
      </dev:code>
        <dev:remarks>
          <maml:para>Edits the C# project file replacing v4.0 with v4.5.1</maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 4 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>
        PS C:\&gt; Get-ChildItem Acme\Src\*.csproj -Recurse | Edit-File -Pattern v4.0 -Replacement v4.5.1 -Force -SimpleMatch
      </dev:code>
        <dev:remarks>
          <maml:para>Edits all of the C# project files replacing v4.0 with v4.5.1 and making them writable with the Force parameter.</maml:para>
          <maml:para>By using the SimpleMatch parameter, you can specify a Pattern that is not interpreted as a regular expression.</maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 5 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>
        PS C:\&gt; Get-ChildItem Acme\Src\*.csproj -Recurse | Edit-File -Pattern v4\.0 -Replacement v4.5.1 -Force -PassThru | Set-ReadOnly
      </dev:code>
        <dev:remarks>
          <maml:para>Edits all of the C# project files replacing v4.0 with v4.5.1 and making them writable with the Force parameter.</maml:para>
          <maml:para>The PassThru switch causes each file to be passed down the pipeline to the Set-ReadOnly command.</maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 6 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>
 PS C:\&gt; $pattern = '(?s)(&lt;PostBuildEvent&gt;).*?(&lt;/PostBuildEvent&gt;)'
 PS C:\&gt; Get-ChildItem Acme\Src\*.csproj -Recurse | Edit-File -Pattern $pattern -Replacement '$1$2' -SingleString
      </dev:code>
        <dev:remarks>
          <maml:para>Edits all of the C# project files effectivly removing all text between the opening and closing PostBuildEvent XML tags.</maml:para>
          <maml:para>Specifying the SingleString parameter loads the file into memory as a single string.  This enables Singleline mode which causes the '.' metacharacter to match newline (\n) characters.  This allows a regex pattern to select text that spans multiple lines.</maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 7 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>
        PS C:\&gt; Edit-File site.css -Pattern '#555\s*;' -Replacement '#5f5f5f;' -Encoding ascii
      </dev:code>
        <dev:remarks>
          <maml:para>The Encoding parameter specifies that the cmdlet writes the file using the specified encoding.</maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks />
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-ShortPath</command:name>
      <maml:description>
        <maml:para>PSCX Cmdlet: Gets the short, 8.3 name for the given path.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Get</command:verb>
      <command:noun>ShortPath</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>
         Gets the short, 8.3 name for the given path.  This cmdlet emits a ShortPathInfo object that contains a ShortPath property as well as a Path property which contains the original long path.
    </maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-ShortPath</maml:name>
        <command:parameter required="true" globbing="true" pipelineInput="true (ByValue, ByPropertyName)" position="1">
          <maml:name>Path</maml:name>
          <maml:description>
            <maml:para>
                Specifies the path to the file to process. Wildcard syntax is allowed.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Get-ShortPath</maml:name>
        <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
          <maml:name>LiteralPath</maml:name>
          <maml:description>
            <maml:para>
                Specifies a path to the item. The value of -LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
        <maml:name>LiteralPath</maml:name>
        <maml:description>
          <maml:para>
                Specifies a path to the item. The value of -LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" globbing="true" pipelineInput="true (ByValue, ByPropertyName)" position="1">
        <maml:name>Path</maml:name>
        <maml:description>
          <maml:para>
                Specifies the path to the file to process. Wildcard syntax is allowed.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:title />
      <maml:alert>
        <maml:para>
        </maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>
        </dev:code>
        <dev:remarks>
          <maml:para>
          </maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks />
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>New-Shortcut</command:name>
      <maml:description>
        <maml:para>PSCX Cmdlet: Creates shell shortcuts.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>New</command:verb>
      <command:noun>Shortcut</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>
         Creates shell shortcuts.
    </maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>New-Shortcut</maml:name>
        <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
          <maml:name>LiteralPath</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
          <maml:name>TargetPath</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
        <maml:name>LiteralPath</maml:name>
        <maml:description>
          <maml:para>
          </maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
        <maml:name>TargetPath</maml:name>
        <maml:description>
          <maml:para>
          </maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:title />
      <maml:alert>
        <maml:para>
        </maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>
        </dev:code>
        <dev:remarks>
          <maml:para>
          </maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks />
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Set-FileTime</command:name>
      <maml:description>
        <maml:para>PSCX Cmdlet: Sets a file or folder's created and last accessed/write times.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Set</command:verb>
      <command:noun>FileTime</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>
    Sets a file or folder's created and last accessed/write times.
  </maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Set-FileTime</maml:name>
        <command:parameter required="true" globbing="true" pipelineInput="true (ByValue, ByPropertyName)" position="1">
          <maml:name>Path</maml:name>
          <maml:description>
            <maml:para>
        Specifies the path to the file to process. Wildcard syntax is allowed.
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="2">
          <maml:name>Time</maml:name>
          <maml:description>
            <maml:para>
        The time to use to set the access, created and modified times unless -Accessed, -Created and/or -Modified is specified, then only those times will be updated.
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">DateTime</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Accessed</maml:name>
          <maml:description>
            <maml:para>
        Update the accessed time.  Created and modified time will not be updated unless also specified. Parameter alias is SetAccessedTime.
      </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Created</maml:name>
          <maml:description>
            <maml:para>
        Update the created time.  Accessed and modified time will not be upated unless also specified. Parameter alias is SetCreatedTime.
      </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Force</maml:name>
          <maml:description>
            <maml:para>
        Attempt to set the specified time even if the file is readonly.
      </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Modified</maml:name>
          <maml:description>
            <maml:para>
        Update the modified time.  Accessed and created time will not be updated unless also specified. Parameter alias is SetModifiedTime.
      </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PassThru</maml:name>
          <maml:description>
            <maml:para>
        Passing the processing path to the next stage of the pipeline.
      </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>UseTimeFromFile</maml:name>
          <maml:description>
            <maml:para>
        Use the date and time from the file at the specified path to set the access and/or write times.
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Utc</maml:name>
          <maml:description>
            <maml:para>
        Set the accessed, created and/or modified times as UTC times.
      </maml:para>
          </maml:description>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Set-FileTime</maml:name>
        <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
          <maml:name>LiteralPath</maml:name>
          <maml:description>
            <maml:para>
        Specifies a path to the item. The value of -LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="2">
          <maml:name>Time</maml:name>
          <maml:description>
            <maml:para>
        The time to use to set the access, created and modified times unless -Accessed, -Created and/or -Modified is specified, then only those times will be updated.
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">DateTime</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Accessed</maml:name>
          <maml:description>
            <maml:para>
        Update the accessed time.  Created and modified time will not be updated unless also specified. Parameter alias is SetAccessedTime.
      </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Created</maml:name>
          <maml:description>
            <maml:para>
        Update the created time.  Accessed and modified time will not be upated unless also specified. Parameter alias is SetCreatedTime.
      </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Force</maml:name>
          <maml:description>
            <maml:para>
        Attempt to set the specified time even if the file is readonly.
      </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Modified</maml:name>
          <maml:description>
            <maml:para>
        Update the modified time.  Accessed and created time will not be updated unless also specified. Parameter alias is SetModifiedTime.
      </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PassThru</maml:name>
          <maml:description>
            <maml:para>
        Passing the processing path to the next stage of the pipeline.
      </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>UseTimeFromFile</maml:name>
          <maml:description>
            <maml:para>
        Use the date and time from the file at the specified path to set the access and/or write times.
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Utc</maml:name>
          <maml:description>
            <maml:para>
        Set the accessed, created and/or modified times as UTC times.
      </maml:para>
          </maml:description>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
        <maml:name>LiteralPath</maml:name>
        <maml:description>
          <maml:para>
        Specifies a path to the item. The value of -LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" globbing="true" pipelineInput="true (ByValue, ByPropertyName)" position="1">
        <maml:name>Path</maml:name>
        <maml:description>
          <maml:para>
        Specifies the path to the file to process. Wildcard syntax is allowed.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="2">
        <maml:name>Time</maml:name>
        <maml:description>
          <maml:para>
        The time to use to set the access, created and modified times unless -Accessed, -Created and/or -Modified is specified, then only those times will be updated.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">DateTime</command:parameterValue>
        <dev:type>
          <maml:name>DateTime</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        The current system time
      </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Accessed</maml:name>
        <maml:description>
          <maml:para>
        Update the accessed time.  Created and modified time will not be updated unless also specified. Parameter alias is SetAccessedTime.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        True
      </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Created</maml:name>
        <maml:description>
          <maml:para>
        Update the created time.  Accessed and modified time will not be upated unless also specified. Parameter alias is SetCreatedTime.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        False
      </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Force</maml:name>
        <maml:description>
          <maml:para>
        Attempt to set the specified time even if the file is readonly.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        False
      </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Modified</maml:name>
        <maml:description>
          <maml:para>
        Update the modified time.  Accessed and created time will not be updated unless also specified. Parameter alias is SetModifiedTime.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        True
      </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>PassThru</maml:name>
        <maml:description>
          <maml:para>
        Passing the processing path to the next stage of the pipeline.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        False
      </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>UseTimeFromFile</maml:name>
        <maml:description>
          <maml:para>
        Use the date and time from the file at the specified path to set the access and/or write times.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Utc</maml:name>
        <maml:description>
          <maml:para>
        Set the accessed, created and/or modified times as UTC times.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        False
      </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:title />
      <maml:alert>
        <maml:para>
        </maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>C:PS&gt; Set-FileTime foo.txt</dev:code>
        <dev:remarks>
          <maml:para>Updates the LastWriteTime and LastAccessTime properties of the file foo.txt to the current local time.</maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>C:PS&gt; Set-FileTime foo.txt -Time ((get-date).AddDays(-14))</dev:code>
        <dev:remarks>
          <maml:para>Updates the LastWriteTime and LastAccessTime properties of the file foo.txt to the current local time minus 14 days.</maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>C:PS&gt; Get-ChildItem . *.cs -r | Set-FileTime</dev:code>
        <dev:remarks>
          <maml:para>Updates the LastWriteTime and LastAccessTime properties on all files with extension .CS in the current dir and below to the current local time.</maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 4 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>C:PS&gt; Get-ChildItem . *.cs -r | Set-FileTime -Modified</dev:code>
        <dev:remarks>
          <maml:para>Updates only the LastWriteTime property on all files with extension .CS in the current dir and below to the current local time.</maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 5 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>C:PS&gt; Get-ChildItem . *.cs -r | Set-FileTime -UseTimeFromFile C:\boot.ini</dev:code>
        <dev:remarks>
          <maml:para>Updates the LastWriteTime and LastAccessTime properties on all files with extension .CS in the current dir and below to the same time as the LastWriteTime of the file C:\boot.ini.</maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks />
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Set-VolumeLabel</command:name>
      <maml:description>
        <maml:para>PSCX Cmdlet: Modifies the label shown in Windows Explorer for a particular disk volume.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Set</command:verb>
      <command:noun>VolumeLabel</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>
         Modifies the label shown in Windows Explorer for a particular disk volume.
    </maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Set-VolumeLabel</maml:name>
        <command:parameter required="false" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
          <maml:name>Path</maml:name>
          <maml:description>
            <maml:para>
                Path to the root directory of a file system volume. This can be a folder where a volume is mounted. If not specified, defaults to the root of the current FileSystem location.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
          <maml:name>Label</maml:name>
          <maml:description>
            <maml:para>
                New volume label. If not specified, the volume label will be blank.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
        <maml:name>Path</maml:name>
        <maml:description>
          <maml:para>
                Path to the root directory of a file system volume. This can be a folder where a volume is mounted. If not specified, defaults to the root of the current FileSystem location.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
        <maml:name>Label</maml:name>
        <maml:description>
          <maml:para>
                New volume label. If not specified, the volume label will be blank.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:title />
      <maml:alert>
        <maml:para>
        </maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>
        </dev:code>
        <dev:remarks>
          <maml:para>
          </maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks />
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-Hash</command:name>
      <maml:description>
        <maml:para>PSCX Cmdlet: Gets the hash value for the specified file or byte array via the pipeline.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Get</command:verb>
      <command:noun>Hash</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>
    Gets the hash value for the specified file or byte array via the pipeline.  The default hash algorithm is MD5, although you can specify other algorithms using the -Algorithm parameter (MD5, SHA1, SHA256, SHA384, SHA512 and RIPEMD160).  This cmdlet emits a HashInfo object that has properties for Path, Algorithm, HashString and Hash.
  </maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-Hash</maml:name>
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>InputObject</maml:name>
          <maml:description>
            <maml:para>
        Accepts an object as input to the cmdlet. Enter a variable that contains the objects or type a command or expression that gets the objects.
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">PSObject</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Algorithm</maml:name>
          <maml:description>
            <maml:para>
        Specifies the hash algorithm to use.  Valid values are MD5 (default), SHA1, SHA256, SHA384, SHA512, RIPEMD160
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
          <maml:name>StringEncoding</maml:name>
          <maml:description>
            <maml:para>
        The encoding to use for string InputObjects.  Valid values are: ASCII, UTF7, UTF8, UTF32, Unicode, BigEndianUnicode and Default.
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">StringEncodingParameter</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Get-Hash</maml:name>
        <command:parameter required="true" globbing="true" pipelineInput="true (ByPropertyName)" position="1">
          <maml:name>Path</maml:name>
          <maml:description>
            <maml:para>
        Specifies the path to the file to process. Wildcard syntax is allowed.
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Algorithm</maml:name>
          <maml:description>
            <maml:para>
        Specifies the hash algorithm to use.  Valid values are MD5 (default), SHA1, SHA256, SHA384, SHA512, RIPEMD160
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Get-Hash</maml:name>
        <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
          <maml:name>LiteralPath</maml:name>
          <maml:description>
            <maml:para>
        Specifies a path to the item. The value of -LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Algorithm</maml:name>
          <maml:description>
            <maml:para>
        Specifies the hash algorithm to use.  Valid values are MD5 (default), SHA1, SHA256, SHA384, SHA512, RIPEMD160
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
        <maml:name>LiteralPath</maml:name>
        <maml:description>
          <maml:para>
        Specifies a path to the item. The value of -LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" globbing="true" pipelineInput="true (ByPropertyName)" position="1">
        <maml:name>Path</maml:name>
        <maml:description>
          <maml:para>
        Specifies the path to the file to process. Wildcard syntax is allowed.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>InputObject</maml:name>
        <maml:description>
          <maml:para>
        Accepts an object as input to the cmdlet. Enter a variable that contains the objects or type a command or expression that gets the objects.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">PSObject</command:parameterValue>
        <dev:type>
          <maml:name>PSObject</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Algorithm</maml:name>
        <maml:description>
          <maml:para>
        Specifies the hash algorithm to use.  Valid values are MD5 (default), SHA1, SHA256, SHA384, SHA512, RIPEMD160
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        MD5
      </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="true (ByPropertyName)" position="named">
        <maml:name>StringEncoding</maml:name>
        <maml:description>
          <maml:para>
        The encoding to use for string InputObjects.  Valid values are: ASCII, UTF7, UTF8, UTF32, Unicode, BigEndianUnicode and Default.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">StringEncodingParameter</command:parameterValue>
        <dev:type>
          <maml:name>StringEncodingParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        Unicode
      </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:title />
      <maml:alert>
        <maml:para>
        </maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>
        C:\PS&gt; Get-Hash $PSHOME\PowerShell.exe
        Algorithm: MD5

        Path       : C:\Windows\System32\WindowsPowerShell\v1.0\PowerShell.exe
        HashString : E22825B10BE3E8709BA1AB4D2DF36B57
      </dev:code>
        <dev:remarks>
          <maml:para>Gets the MD5 hash (default hash algorithm) of the PowerShell executable.</maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>
        C:\PS&gt; Get-Hash $PSHOME\PowerShell.exe -Algorithm SHA1
        Algorithm: SHA1

        Path       : C:\Windows\System32\WindowsPowerShell\v1.0\PowerShell.exe
        HashString : 3BA6DDF13A5DEDE95D427E7EFFEDFBC6F1BB267D
      </dev:code>
        <dev:remarks>
          <maml:para>Gets the SHA1 hash of the PowerShell executable.</maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>
        C:\PS&gt; "Hello" | Get-Hash -Algorithm SHA1 -StringEncoding Ascii
        Algorithm: SHA1

        Path       :
        HashString : F7FF9E8B7BB2E09B70935A5D785E0CC5D9D0ABF0
      </dev:code>
        <dev:remarks>
          <maml:para>Gets the SHA1 hash of the string "Hello" interpreted as Ascii characters.</maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks />
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-DriveInfo</command:name>
      <maml:description>
        <maml:para>PSCX Cmdlet: Gets disk usage information on the system's disk drives.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Get</command:verb>
      <command:noun>DriveInfo</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>
      Gets disk usage information on the system's disk drives.
    </maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-DriveInfo</maml:name>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters />
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </dev:type>
        <maml:description />
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </dev:type>
        <maml:description />
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:title />
      <maml:alert>
        <maml:para>
        </maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>PS&gt; Get-DriveInfo</dev:code>
        <dev:remarks>
          <maml:para>
          </maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks />
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-FileTail</command:name>
      <maml:description>
        <maml:para>PSCX Cmdlet: Tails the contents of a file - optionally waiting on new content.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Get</command:verb>
      <command:noun>FileTail</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>
         This implentation efficiently tails the contents of a file by reading lines from the end rather then processing the entire file. This behavior is crucial for efficiently tailing large log files and large log files over a network.  You can also specify the Wait parameter to have the cmdlet wait and display new content as it is written to the file.  Use Ctrl+C to break out of the wait loop.  Note that if an encoding is not specified, the cmdlet will attempt to auto-detect the encoding by reading the first character from the file. If no character haven't been written to the file yet, the cmdlet will default to using Unicode encoding. You can override this behavior by explicitly specifying the encoding via the Encoding parameter.
    </maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-FileTail</maml:name>
        <command:parameter required="true" globbing="true" pipelineInput="true (ByValue, ByPropertyName)" position="1">
          <maml:name>Path</maml:name>
          <maml:description>
            <maml:para>
                Specifies the path to the file to process. Wildcard syntax is allowed.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Count</maml:name>
          <maml:description>
            <maml:para>
                The number of lines to display from the end of the file.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Encoding</maml:name>
          <maml:description>
            <maml:para>
                The encoding to use for string InputObjects.  Valid values are: ASCII, Unicode and UTF8. If the file contains only ASCII characters specify the parameter "-Encoding ASCII" on the file. UTF8 is only supported if the file contains ASCII characters.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">EncodingParameter</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>LineTerminator</maml:name>
          <maml:description>
            <maml:para>
                The line termination sequence for the file.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Wait</maml:name>
          <maml:description>
            <maml:para>
                Puts Tail-File into an infinite wait loop, waiting for new content to be appended to the file.  When new content is appended to the file it will be displayed.  Use Ctrl+C to exit the wait loop. </maml:para>
          </maml:description>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Get-FileTail</maml:name>
        <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
          <maml:name>LiteralPath</maml:name>
          <maml:description>
            <maml:para>
                Specifies a path to the item. The value of -LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Count</maml:name>
          <maml:description>
            <maml:para>
                The number of lines to display from the end of the file.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Encoding</maml:name>
          <maml:description>
            <maml:para>
                The encoding to use for string InputObjects.  Valid values are: ASCII, Unicode and UTF8. If the file contains only ASCII characters specify the parameter "-Encoding ASCII" on the file. UTF8 is only supported if the file contains ASCII characters.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">EncodingParameter</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>LineTerminator</maml:name>
          <maml:description>
            <maml:para>
                The line termination sequence for the file.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Wait</maml:name>
          <maml:description>
            <maml:para>
                Puts Tail-File into an infinite wait loop, waiting for new content to be appended to the file.  When new content is appended to the file it will be displayed.  Use Ctrl+C to exit the wait loop. </maml:para>
          </maml:description>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
        <maml:name>LiteralPath</maml:name>
        <maml:description>
          <maml:para>
                Specifies a path to the item. The value of -LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" globbing="true" pipelineInput="true (ByValue, ByPropertyName)" position="1">
        <maml:name>Path</maml:name>
        <maml:description>
          <maml:para>
                Specifies the path to the file to process. Wildcard syntax is allowed.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Count</maml:name>
        <maml:description>
          <maml:para>
                The number of lines to display from the end of the file.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">Int32</command:parameterValue>
        <dev:type>
          <maml:name>Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
                10
            </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Encoding</maml:name>
        <maml:description>
          <maml:para>
                The encoding to use for string InputObjects.  Valid values are: ASCII, Unicode and UTF8. If the file contains only ASCII characters specify the parameter "-Encoding ASCII" on the file. UTF8 is only supported if the file contains ASCII characters.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">EncodingParameter</command:parameterValue>
        <dev:type>
          <maml:name>EncodingParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
                Unicode (if the encoding cannot be detected by reading the first 1 character from the file)
            </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>LineTerminator</maml:name>
        <maml:description>
          <maml:para>
                The line termination sequence for the file.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
                [System.Environment]::NewLine
            </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Wait</maml:name>
        <maml:description>
          <maml:para>
                Puts Tail-File into an infinite wait loop, waiting for new content to be appended to the file.  When new content is appended to the file it will be displayed.  Use Ctrl+C to exit the wait loop. </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
                False
            </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </dev:type>
        <maml:description />
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </dev:type>
        <maml:description />
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:title />
      <maml:alert>
        <maml:para>
        </maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>C:\&gt; Tail-File foo.log -Count 20</dev:code>
        <dev:remarks>
          <maml:para>Displays the last 20 lines of the file foo.log.  If there are fewer than 20 lines, it will display all lines.</maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>C:\&gt; Tail-File ascii.log -Wait -Encoding Ascii</dev:code>
        <dev:remarks>
          <maml:para>Displays the last 10 lines of the ASCII encoded file ascii.log and then waits.  Any new content appended to the file will be displayed.  Press Ctrl+C to break out of the loop and return control to the console.</maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks />
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-OpticalDriveInfo</command:name>
      <maml:description>
        <maml:para>PSCX Cmdlet: Get information on optical drive capabilities on the local machine.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Get</command:verb>
      <command:noun>OpticalDriveInfo</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>Get information on optical drive capabilities on the local machine.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-OpticalDriveInfo</maml:name>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="1">
          <maml:name>DriveLetter</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="1">
        <maml:name>DriveLetter</maml:name>
        <maml:description>
          <maml:para>
          </maml:para>
        </maml:description>
        <command:parameterValue required="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </dev:type>
        <maml:description />
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </dev:type>
        <maml:description />
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:title />
      <maml:alert>
        <maml:para>
        </maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>
        </dev:code>
        <dev:remarks>
          <maml:para>
          </maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks />
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Expand-Archive</command:name>
      <maml:description>
        <maml:para>PSCX Cmdlet: Expands a compressed archive file, or ArchiveEntry object, to its constituent file(s).</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Expand</command:verb>
      <command:noun>Archive</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>Expands a compressed archive file, or ArchiveEntry object, to its constituent file(s).</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Expand-Archive</maml:name>
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>InputObject</maml:name>
          <maml:description>
            <maml:para>Accepts an object as input to the cmdlet. Enter a variable that contains the objects or type a command or expression that gets the objects.</maml:para>
          </maml:description>
          <command:parameterValue required="true">PSObject</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="1">
          <maml:name>OutputPath</maml:name>
          <maml:description>
            <maml:para>The path to place the expanded file(s). This path must lie on the FileSystem provider.</maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="true" pipelineInput="false" position="named">
          <maml:name>EntryPath</maml:name>
          <maml:description>
            <maml:para>The relative path of the file or file(s) inside the archive to expand. For multiple files, use array syntax (comma-separated).</maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>FlattenPaths</maml:name>
          <maml:description>
            <maml:para>Store all files in the archives in the root. If multiple files have the same name, the last file in, wins.</maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Force</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Index</maml:name>
          <maml:description>
            <maml:para>The index, or indices, of the file(s) inside the archive to expand. For multiple indices, use array syntax (comma-separated).</maml:para>
          </maml:description>
          <command:parameterValue required="true">Int32[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PassThru</maml:name>
          <maml:description>
            <maml:para>Output a FileInfo or DirectoryInfo for each file or directory expanded, respectively.</maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Password</maml:name>
          <maml:description>
            <maml:para>A password to decrypt encrypted entries in the archive, if required.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SecureString</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ShowProgress</maml:name>
          <maml:description>
            <maml:para>Show the PowerShell progress bar while performing expansion and scanning operations.</maml:para>
          </maml:description>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Expand-Archive</maml:name>
        <command:parameter required="true" globbing="true" pipelineInput="true (ByPropertyName)" position="1">
          <maml:name>Path</maml:name>
          <maml:description>
            <maml:para>Specifies the path to the file to process. Wildcard syntax is allowed.</maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="true" pipelineInput="false" position="named">
          <maml:name>EntryPath</maml:name>
          <maml:description>
            <maml:para>The relative path of the file or file(s) inside the archive to expand. For multiple files, use array syntax (comma-separated).</maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>FlattenPaths</maml:name>
          <maml:description>
            <maml:para>Store all files in the archives in the root. If multiple files have the same name, the last file in, wins.</maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Force</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Index</maml:name>
          <maml:description>
            <maml:para>The index, or indices, of the file(s) inside the archive to expand. For multiple indices, use array syntax (comma-separated).</maml:para>
          </maml:description>
          <command:parameterValue required="true">Int32[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PassThru</maml:name>
          <maml:description>
            <maml:para>Output a FileInfo or DirectoryInfo for each file or directory expanded, respectively.</maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Password</maml:name>
          <maml:description>
            <maml:para>A password to decrypt encrypted entries in the archive, if required.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SecureString</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ShowProgress</maml:name>
          <maml:description>
            <maml:para>Show the PowerShell progress bar while performing expansion and scanning operations.</maml:para>
          </maml:description>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Expand-Archive</maml:name>
        <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
          <maml:name>LiteralPath</maml:name>
          <maml:description>
            <maml:para>Specifies a path to the item. The value of -LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.</maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="true" pipelineInput="false" position="named">
          <maml:name>EntryPath</maml:name>
          <maml:description>
            <maml:para>The relative path of the file or file(s) inside the archive to expand. For multiple files, use array syntax (comma-separated).</maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>FlattenPaths</maml:name>
          <maml:description>
            <maml:para>Store all files in the archives in the root. If multiple files have the same name, the last file in, wins.</maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Force</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Index</maml:name>
          <maml:description>
            <maml:para>The index, or indices, of the file(s) inside the archive to expand. For multiple indices, use array syntax (comma-separated).</maml:para>
          </maml:description>
          <command:parameterValue required="true">Int32[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>PassThru</maml:name>
          <maml:description>
            <maml:para>Output a FileInfo or DirectoryInfo for each file or directory expanded, respectively.</maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Password</maml:name>
          <maml:description>
            <maml:para>A password to decrypt encrypted entries in the archive, if required.</maml:para>
          </maml:description>
          <command:parameterValue required="true">SecureString</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ShowProgress</maml:name>
          <maml:description>
            <maml:para>Show the PowerShell progress bar while performing expansion and scanning operations.</maml:para>
          </maml:description>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
        <maml:name>LiteralPath</maml:name>
        <maml:description>
          <maml:para>Specifies a path to the item. The value of -LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.</maml:para>
        </maml:description>
        <command:parameterValue required="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" globbing="true" pipelineInput="true (ByPropertyName)" position="1">
        <maml:name>Path</maml:name>
        <maml:description>
          <maml:para>Specifies the path to the file to process. Wildcard syntax is allowed.</maml:para>
        </maml:description>
        <command:parameterValue required="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>InputObject</maml:name>
        <maml:description>
          <maml:para>Accepts an object as input to the cmdlet. Enter a variable that contains the objects or type a command or expression that gets the objects.</maml:para>
        </maml:description>
        <command:parameterValue required="true">PSObject</command:parameterValue>
        <dev:type>
          <maml:name>PSObject</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="1">
        <maml:name>OutputPath</maml:name>
        <maml:description>
          <maml:para>The path to place the expanded file(s). This path must lie on the FileSystem provider.</maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>The current location of the FileSystem provider.</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="true" pipelineInput="false" position="named">
        <maml:name>EntryPath</maml:name>
        <maml:description>
          <maml:para>The relative path of the file or file(s) inside the archive to expand. For multiple files, use array syntax (comma-separated).</maml:para>
        </maml:description>
        <command:parameterValue required="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>FlattenPaths</maml:name>
        <maml:description>
          <maml:para>Store all files in the archives in the root. If multiple files have the same name, the last file in, wins.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Force</maml:name>
        <maml:description>
          <maml:para>
          </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Index</maml:name>
        <maml:description>
          <maml:para>The index, or indices, of the file(s) inside the archive to expand. For multiple indices, use array syntax (comma-separated).</maml:para>
        </maml:description>
        <command:parameterValue required="true">Int32[]</command:parameterValue>
        <dev:type>
          <maml:name>Int32[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>PassThru</maml:name>
        <maml:description>
          <maml:para>Output a FileInfo or DirectoryInfo for each file or directory expanded, respectively.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Password</maml:name>
        <maml:description>
          <maml:para>A password to decrypt encrypted entries in the archive, if required.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SecureString</command:parameterValue>
        <dev:type>
          <maml:name>SecureString</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>Not Set</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>ShowProgress</maml:name>
        <maml:description>
          <maml:para>Show the PowerShell progress bar while performing expansion and scanning operations.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>System.IO.FileInfo</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>An archive file from the filesystem, e.g. logs.zip.</maml:para>
          </maml:description>
        </dev:type>
        <maml:description />
      </command:inputType>
      <command:inputType>
        <dev:type>
          <maml:name>Pscx.IO.Compression.ArchiveEntry</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>An object emitted from the Read-Archive cmdlet.</maml:para>
          </maml:description>
        </dev:type>
        <maml:description />
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>System.IO.FileSystemInfo</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>If -Passthru is specified, one ore more FileSystemInfo object(s) (FileInfo/DirectoryInfo) may be returned.</maml:para>
          </maml:description>
        </dev:type>
        <maml:description />
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:title />
      <maml:alert>
        <maml:para>Supported formats are: SevenZip, Arj, BZip2, Cab, Chm, Compound, Cpio, Deb, GZip, Iso, Lzh, Lzma, Nsis, Rar, Rpm, Split, Tar, Wim, Z, Zip.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>Expand-Archive -Path *.zip -OutputPath .\Temp\ -ShowProgress</dev:code>
        <dev:remarks>
          <maml:para>Expand all zip files in the current directory to .\temp while showing a progress bar.</maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>Expand-Archive -Path setup.exe -EntryPath en-us\readme.htm -format Zip</dev:code>
        <dev:remarks>
          <maml:para>Search a self-expanding zip file named setup.exe in the current directory for a file named "readme.htm" in a subdirectory named "en-us," and expand it to the current directory.</maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>Read-Archive *.iso | where { $_.size -gt 1mb } | Expand-Archive</dev:code>
        <dev:remarks>
          <maml:para>Scan through all ISOs in the current directory and expand any files bigger than 1MB to the current directory.</maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 4 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>dir x:\ISOs -rec -inc *.iso | Read-Archive | where {$_.path -eq "setup.exe"} | extract-archive -path {$_.archivepath} -index (0..19)</dev:code>
        <dev:remarks>
          <maml:para>Look through all files under x:\ISOs for ISOs that contain a setup.exe in the root, and if so, expand the first twenty files of that ISO to the current directory.</maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks />
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Read-Archive</command:name>
      <maml:description>
        <maml:para>PSCX Cmdlet: Enumerates compressed archives such as 7z or rar, emitting ArchiveEntry objects representing records in the archive.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Read</command:verb>
      <command:noun>Archive</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>Enumerates compressed archives such as 7z or rar, emitting ArchiveEntry objects representing records in the archive.Read-Archive is used to list the contents of a compressed archive containing one or more compressed file(s). The format of the file being read can be overriden with the Format parameter, for example to enumerate the contents of a self-extracting archive (EXE).Read-Archive is useful if you wish to perform filtering using standard pipeline Where-Object and/or ForEach-Object cmdlets before piping ArchiveEntry objects to Expand-Archive.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Read-Archive</maml:name>
        <command:parameter required="true" globbing="true" pipelineInput="true (ByPropertyName)" position="1">
          <maml:name>Path</maml:name>
          <maml:description>
            <maml:para>Specifies the path to the file to process. Wildcard syntax is allowed.</maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IncludeDirectories</maml:name>
          <maml:description>
            <maml:para>If present, directs Read-Archive to list the 0-length directory entries that represent folders in the archive.</maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ShowProgress</maml:name>
          <maml:description>
            <maml:para>Show the PowerShell progress bar while performing expansion and scanning operations.</maml:para>
          </maml:description>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Read-Archive</maml:name>
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>InputObject</maml:name>
          <maml:description>
            <maml:para>Accepts an object as input to the cmdlet. Enter a variable that contains the objects or type a command or expression that gets the objects.</maml:para>
          </maml:description>
          <command:parameterValue required="true">PSObject</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IncludeDirectories</maml:name>
          <maml:description>
            <maml:para>If present, directs Read-Archive to list the 0-length directory entries that represent folders in the archive.</maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ShowProgress</maml:name>
          <maml:description>
            <maml:para>Show the PowerShell progress bar while performing expansion and scanning operations.</maml:para>
          </maml:description>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Read-Archive</maml:name>
        <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
          <maml:name>LiteralPath</maml:name>
          <maml:description>
            <maml:para>Specifies a path to the item. The value of -LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.</maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IncludeDirectories</maml:name>
          <maml:description>
            <maml:para>If present, directs Read-Archive to list the 0-length directory entries that represent folders in the archive.</maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>ShowProgress</maml:name>
          <maml:description>
            <maml:para>Show the PowerShell progress bar while performing expansion and scanning operations.</maml:para>
          </maml:description>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
        <maml:name>LiteralPath</maml:name>
        <maml:description>
          <maml:para>Specifies a path to the item. The value of -LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.</maml:para>
        </maml:description>
        <command:parameterValue required="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" globbing="true" pipelineInput="true (ByPropertyName)" position="1">
        <maml:name>Path</maml:name>
        <maml:description>
          <maml:para>Specifies the path to the file to process. Wildcard syntax is allowed.</maml:para>
        </maml:description>
        <command:parameterValue required="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>InputObject</maml:name>
        <maml:description>
          <maml:para>Accepts an object as input to the cmdlet. Enter a variable that contains the objects or type a command or expression that gets the objects.</maml:para>
        </maml:description>
        <command:parameterValue required="true">PSObject</command:parameterValue>
        <dev:type>
          <maml:name>PSObject</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IncludeDirectories</maml:name>
        <maml:description>
          <maml:para>If present, directs Read-Archive to list the 0-length directory entries that represent folders in the archive.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>ShowProgress</maml:name>
        <maml:description>
          <maml:para>Show the PowerShell progress bar while performing expansion and scanning operations.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>System.IO.FileInfo</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>A FileInfo representing a compressed archive on the filesystem.</maml:para>
          </maml:description>
        </dev:type>
        <maml:description />
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>Pscx.IO.Compression.ArchiveEntry</maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>One or more ArchiveEntry object(s) representing files and folders within the compressed archive.</maml:para>
          </maml:description>
        </dev:type>
        <maml:description />
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:title />
      <maml:alert>
        <maml:para>Supported formats are: SevenZip, Arj, BZip2, Cab, Chm, Compound, Cpio, Deb, GZip, Iso, Lzh, Lzma, Nsis, Rar, Rpm, Split, Tar, Wim, Z, Zip.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>Read-Archive -Path *.iso &gt; contents.txt</dev:code>
        <dev:remarks>
          <maml:para>Read all ISO compressed archives and dump the contents into a text file.</maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>Read-Archive -Path Setup.exe -Format Zip | Where-Object { $_.Name -like "*.txt" } | Expand-Archive</dev:code>
        <dev:remarks>
          <maml:para>Read contents from a self-extracting zip file and expand any txt files into the current filesystem location.</maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks />
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Write-BZip2</command:name>
      <maml:description>
        <maml:para>PSCX Cmdlet: Create BZIP2 format archive files from pipline or parameter input.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Write</command:verb>
      <command:noun>BZip2</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>
    Create BZIP2 format archive files from pipline or parameter input.
  </maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Write-BZip2</maml:name>
        <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
          <maml:name>LiteralPath</maml:name>
          <maml:description>
            <maml:para>
        Specifies a path to the item. The value of -LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="2">
          <maml:name>OutputPath</maml:name>
          <maml:description>
            <maml:para>
        If set, a single archive will be created with all input files stored in it. If not set, each archive will be stored in a separate archive in the current directory. This must be set to an output filename, not a directory.
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>NoClobber</maml:name>
          <maml:description>
            <maml:para>
        If set, existing archives with the same name as the current output archive will not be overwritten.
      </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Quiet</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Write-BZip2</maml:name>
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>InputObject</maml:name>
          <maml:description>
            <maml:para>
        Accepts an object as input to the cmdlet. Enter a variable that contains the objects or type a command or expression that gets the objects.
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">PSObject</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="2">
          <maml:name>EntryPathRoot</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>NoClobber</maml:name>
          <maml:description>
            <maml:para>
        If set, existing archives with the same name as the current output archive will not be overwritten.
      </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Quiet</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Write-BZip2</maml:name>
        <command:parameter required="true" globbing="true" pipelineInput="true (ByPropertyName)" position="1">
          <maml:name>Path</maml:name>
          <maml:description>
            <maml:para>
        Specifies the path to the file to process. Wildcard syntax is allowed.
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>NoClobber</maml:name>
          <maml:description>
            <maml:para>
        If set, existing archives with the same name as the current output archive will not be overwritten.
      </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Quiet</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
        <maml:name>LiteralPath</maml:name>
        <maml:description>
          <maml:para>
        Specifies a path to the item. The value of -LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" globbing="true" pipelineInput="true (ByPropertyName)" position="1">
        <maml:name>Path</maml:name>
        <maml:description>
          <maml:para>
        Specifies the path to the file to process. Wildcard syntax is allowed.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>InputObject</maml:name>
        <maml:description>
          <maml:para>
        Accepts an object as input to the cmdlet. Enter a variable that contains the objects or type a command or expression that gets the objects.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">PSObject</command:parameterValue>
        <dev:type>
          <maml:name>PSObject</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="2">
        <maml:name>EntryPathRoot</maml:name>
        <maml:description>
          <maml:para>
          </maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="2">
        <maml:name>OutputPath</maml:name>
        <maml:description>
          <maml:para>
        If set, a single archive will be created with all input files stored in it. If not set, each archive will be stored in a separate archive in the current directory. This must be set to an output filename, not a directory.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        Not set.
      </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>NoClobber</maml:name>
        <maml:description>
          <maml:para>
        If set, existing archives with the same name as the current output archive will not be overwritten.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        Not set, existing archives with the same name WILL be overwritten.
      </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Quiet</maml:name>
        <maml:description>
          <maml:para>
          </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:inputType>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:inputType>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:title />
      <maml:alert>
        <maml:para>
        </maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>
        PS&gt; dir c:\logs\ -rec -inc *.log | write-bzip2 -level 9 | move-item c:\archived_logs\
      </dev:code>
        <dev:remarks>
          <maml:para>This will recursively search C:\logs for *.log files, compress them with maximum compression, and finally move them to c:\archived_logs.</maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks />
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Write-GZip</command:name>
      <maml:description>
        <maml:para>PSCX Cmdlet: Create GNU ZIP (GZIP) format files from pipeline or parameter input.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Write</command:verb>
      <command:noun>GZip</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>
    Create GNU ZIP (GZIP) format files from pipeline or parameter input.
  </maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Write-GZip</maml:name>
        <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
          <maml:name>LiteralPath</maml:name>
          <maml:description>
            <maml:para>
        Specifies a path to the item. The value of -LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="2">
          <maml:name>OutputPath</maml:name>
          <maml:description>
            <maml:para>
        If set, a single archive will be created with all input files stored in it. If not set, each archive will be stored in a separate archive in the current directory. This must be set to an output filename, not a directory.
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Level</maml:name>
          <maml:description>
            <maml:para>
        Can be set between 1 and 9 inclusive. Higher numbers use a more efficient compression method, resulting in smaller archives. Higher levels generally result in slower compression times.
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">Nullable`1</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>NoClobber</maml:name>
          <maml:description>
            <maml:para>
        If set, existing archives with the same name as the current output archive will not be overwritten.
      </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Quiet</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Write-GZip</maml:name>
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>InputObject</maml:name>
          <maml:description>
            <maml:para>
        Accepts an object as input to the cmdlet. Enter a variable that contains the objects or type a command or expression that gets the objects.
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">PSObject</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="2">
          <maml:name>EntryPathRoot</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Level</maml:name>
          <maml:description>
            <maml:para>
        Can be set between 1 and 9 inclusive. Higher numbers use a more efficient compression method, resulting in smaller archives. Higher levels generally result in slower compression times.
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">Nullable`1</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>NoClobber</maml:name>
          <maml:description>
            <maml:para>
        If set, existing archives with the same name as the current output archive will not be overwritten.
      </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Quiet</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Write-GZip</maml:name>
        <command:parameter required="true" globbing="true" pipelineInput="true (ByPropertyName)" position="1">
          <maml:name>Path</maml:name>
          <maml:description>
            <maml:para>
        Specifies the path to the file to process. Wildcard syntax is allowed.
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Level</maml:name>
          <maml:description>
            <maml:para>
        Can be set between 1 and 9 inclusive. Higher numbers use a more efficient compression method, resulting in smaller archives. Higher levels generally result in slower compression times.
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">Nullable`1</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>NoClobber</maml:name>
          <maml:description>
            <maml:para>
        If set, existing archives with the same name as the current output archive will not be overwritten.
      </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Quiet</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
        <maml:name>LiteralPath</maml:name>
        <maml:description>
          <maml:para>
        Specifies a path to the item. The value of -LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" globbing="true" pipelineInput="true (ByPropertyName)" position="1">
        <maml:name>Path</maml:name>
        <maml:description>
          <maml:para>
        Specifies the path to the file to process. Wildcard syntax is allowed.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>InputObject</maml:name>
        <maml:description>
          <maml:para>
        Accepts an object as input to the cmdlet. Enter a variable that contains the objects or type a command or expression that gets the objects.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">PSObject</command:parameterValue>
        <dev:type>
          <maml:name>PSObject</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="2">
        <maml:name>EntryPathRoot</maml:name>
        <maml:description>
          <maml:para>
          </maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="2">
        <maml:name>OutputPath</maml:name>
        <maml:description>
          <maml:para>
        If set, a single archive will be created with all input files stored in it. If not set, each archive will be stored in a separate archive in the current directory. This must be set to an output filename, not a directory.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        Not set.
      </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Level</maml:name>
        <maml:description>
          <maml:para>
        Can be set between 1 and 9 inclusive. Higher numbers use a more efficient compression method, resulting in smaller archives. Higher levels generally result in slower compression times.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">Nullable`1</command:parameterValue>
        <dev:type>
          <maml:name>Nullable`1</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        5
      </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>NoClobber</maml:name>
        <maml:description>
          <maml:para>
        If set, existing archives with the same name as the current output archive will not be overwritten.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        Not set, existing archives with the same name WILL be overwritten.
      </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Quiet</maml:name>
        <maml:description>
          <maml:para>
          </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:inputType>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:inputType>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:title />
      <maml:alert>
        <maml:para>
        </maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>
        PS&gt; dir c:\logs\ -rec -inc *.log | write-tar -output logs.tar | write-gzip -level 9 | move-item c:\archived_logs\
      </dev:code>
        <dev:remarks>
          <maml:para>This will recursively search C:\logs for *.log files, archive them into a single tar, compress the resulting tar with gzip and move it to c:\archived_logs.</maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks />
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Write-Tar</command:name>
      <maml:description>
        <maml:para>PSCX Cmdlet: Create Tape Archive (TAR) format files from pipeline or parameter input.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Write</command:verb>
      <command:noun>Tar</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>
    Create Tape Archive (TAR) format files from pipeline or parameter input.
  </maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Write-Tar</maml:name>
        <command:parameter required="true" globbing="false" pipelineInput="false" position="2">
          <maml:name>OutputPath</maml:name>
          <maml:description>
            <maml:para>
        If set, a single archive will be created with all input files stored in it. If not set, each archive will be stored in a separate archive in the current directory. This must be set to an output filename, not a directory.
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>InputObject</maml:name>
          <maml:description>
            <maml:para>
        Accepts an object as input to the cmdlet. Enter a variable that contains the objects or type a command or expression that gets the objects.
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">PSObject</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="2">
          <maml:name>EntryPathRoot</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>NoClobber</maml:name>
          <maml:description>
            <maml:para>
        If set, existing archives with the same name as the current output archive will not be overwritten.
      </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Quiet</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Write-Tar</maml:name>
        <command:parameter required="true" globbing="true" pipelineInput="true (ByPropertyName)" position="1">
          <maml:name>Path</maml:name>
          <maml:description>
            <maml:para>
        Specifies the path to the file to process. Wildcard syntax is allowed.
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" globbing="false" pipelineInput="false" position="2">
          <maml:name>OutputPath</maml:name>
          <maml:description>
            <maml:para>
        If set, a single archive will be created with all input files stored in it. If not set, each archive will be stored in a separate archive in the current directory. This must be set to an output filename, not a directory.
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>NoClobber</maml:name>
          <maml:description>
            <maml:para>
        If set, existing archives with the same name as the current output archive will not be overwritten.
      </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Quiet</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Write-Tar</maml:name>
        <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
          <maml:name>LiteralPath</maml:name>
          <maml:description>
            <maml:para>
        Specifies a path to the item. The value of -LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" globbing="false" pipelineInput="false" position="2">
          <maml:name>OutputPath</maml:name>
          <maml:description>
            <maml:para>
        If set, a single archive will be created with all input files stored in it. If not set, each archive will be stored in a separate archive in the current directory. This must be set to an output filename, not a directory.
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>NoClobber</maml:name>
          <maml:description>
            <maml:para>
        If set, existing archives with the same name as the current output archive will not be overwritten.
      </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Quiet</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
        <maml:name>LiteralPath</maml:name>
        <maml:description>
          <maml:para>
        Specifies a path to the item. The value of -LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" globbing="true" pipelineInput="true (ByPropertyName)" position="1">
        <maml:name>Path</maml:name>
        <maml:description>
          <maml:para>
        Specifies the path to the file to process. Wildcard syntax is allowed.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" globbing="false" pipelineInput="false" position="2">
        <maml:name>OutputPath</maml:name>
        <maml:description>
          <maml:para>
        If set, a single archive will be created with all input files stored in it. If not set, each archive will be stored in a separate archive in the current directory. This must be set to an output filename, not a directory.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        Not set.
      </dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>InputObject</maml:name>
        <maml:description>
          <maml:para>
        Accepts an object as input to the cmdlet. Enter a variable that contains the objects or type a command or expression that gets the objects.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">PSObject</command:parameterValue>
        <dev:type>
          <maml:name>PSObject</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="2">
        <maml:name>EntryPathRoot</maml:name>
        <maml:description>
          <maml:para>
          </maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>NoClobber</maml:name>
        <maml:description>
          <maml:para>
        If set, existing archives with the same name as the current output archive will not be overwritten.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        Not set, existing archives with the same name WILL be overwritten.
      </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Quiet</maml:name>
        <maml:description>
          <maml:para>
          </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:inputType>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:inputType>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:title />
      <maml:alert>
        <maml:para>OutputPath is mandatory for Write-Tar. It does not support creating one TAR per input file.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>
        PS&gt; dir c:\logs\ -rec -inc *.log | write-tar -output logs.tar | write-gzip -level 9 | move-item c:\archived_logs\
      </dev:code>
        <dev:remarks>
          <maml:para>This will recursively search C:\logs for *.log files, archive them into a single tar, compress the resulting tar with gzip and move it to c:\archived_logs.</maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks />
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Write-Zip</command:name>
      <maml:description>
        <maml:para>PSCX Cmdlet: Create ZIP format archive files from pipline or parameter input.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Write</command:verb>
      <command:noun>Zip</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>
    Create ZIP format archive files from pipline or parameter input.
  </maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Write-Zip</maml:name>
        <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
          <maml:name>LiteralPath</maml:name>
          <maml:description>
            <maml:para>
        Specifies a path to the item. The value of -LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="2">
          <maml:name>OutputPath</maml:name>
          <maml:description>
            <maml:para>
        If set, a single archive will be created with all input files stored in it. If not set, each archive will be stored in a separate archive in the current directory. This must be set to an output filename, not a directory.
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Append</maml:name>
          <maml:description>
            <maml:para>If set, the input files will be added to, or updated in, the zip file specified by OutputPath.</maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>FlattenPaths</maml:name>
          <maml:description>
            <maml:para>
        If set, no path information will be stored in the archive, effectively placing all files in the root. Files in subdirectories matching those in lower levels with clashing names will not be added and a warning will be emitted.
      </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IncludeEmptyDirectories</maml:name>
          <maml:description>
            <maml:para>
        If set, empty directories will be added as entries into the archive.
      </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Level</maml:name>
          <maml:description>
            <maml:para>
        Can be set between 1 and 9 inclusive. Higher numbers use a more efficient compression method, resulting in smaller archives. Higher levels generally result in slower compression times.
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">Nullable`1</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>NoClobber</maml:name>
          <maml:description>
            <maml:para>
        If set, existing archives with the same name as the current output archive will not be overwritten.
      </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Quiet</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Write-Zip</maml:name>
        <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
          <maml:name>InputObject</maml:name>
          <maml:description>
            <maml:para>
        Accepts an object as input to the cmdlet. Enter a variable that contains the objects or type a command or expression that gets the objects.
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">PSObject</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="2">
          <maml:name>EntryPathRoot</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Append</maml:name>
          <maml:description>
            <maml:para>If set, the input files will be added to, or updated in, the zip file specified by OutputPath.</maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>FlattenPaths</maml:name>
          <maml:description>
            <maml:para>
        If set, no path information will be stored in the archive, effectively placing all files in the root. Files in subdirectories matching those in lower levels with clashing names will not be added and a warning will be emitted.
      </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IncludeEmptyDirectories</maml:name>
          <maml:description>
            <maml:para>
        If set, empty directories will be added as entries into the archive.
      </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Level</maml:name>
          <maml:description>
            <maml:para>
        Can be set between 1 and 9 inclusive. Higher numbers use a more efficient compression method, resulting in smaller archives. Higher levels generally result in slower compression times.
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">Nullable`1</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>NoClobber</maml:name>
          <maml:description>
            <maml:para>
        If set, existing archives with the same name as the current output archive will not be overwritten.
      </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Quiet</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Write-Zip</maml:name>
        <command:parameter required="true" globbing="true" pipelineInput="true (ByPropertyName)" position="1">
          <maml:name>Path</maml:name>
          <maml:description>
            <maml:para>
        Specifies the path to the file to process. Wildcard syntax is allowed.
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Append</maml:name>
          <maml:description>
            <maml:para>If set, the input files will be added to, or updated in, the zip file specified by OutputPath.</maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>FlattenPaths</maml:name>
          <maml:description>
            <maml:para>
        If set, no path information will be stored in the archive, effectively placing all files in the root. Files in subdirectories matching those in lower levels with clashing names will not be added and a warning will be emitted.
      </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>IncludeEmptyDirectories</maml:name>
          <maml:description>
            <maml:para>
        If set, empty directories will be added as entries into the archive.
      </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Level</maml:name>
          <maml:description>
            <maml:para>
        Can be set between 1 and 9 inclusive. Higher numbers use a more efficient compression method, resulting in smaller archives. Higher levels generally result in slower compression times.
      </maml:para>
          </maml:description>
          <command:parameterValue required="true">Nullable`1</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>NoClobber</maml:name>
          <maml:description>
            <maml:para>
        If set, existing archives with the same name as the current output archive will not be overwritten.
      </maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Quiet</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
        <maml:name>LiteralPath</maml:name>
        <maml:description>
          <maml:para>
        Specifies a path to the item. The value of -LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        N/A
      </dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" globbing="true" pipelineInput="true (ByPropertyName)" position="1">
        <maml:name>Path</maml:name>
        <maml:description>
          <maml:para>
        Specifies the path to the file to process. Wildcard syntax is allowed.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        N/A
      </dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" globbing="false" pipelineInput="true (ByValue)" position="named">
        <maml:name>InputObject</maml:name>
        <maml:description>
          <maml:para>
        Accepts an object as input to the cmdlet. Enter a variable that contains the objects or type a command or expression that gets the objects.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">PSObject</command:parameterValue>
        <dev:type>
          <maml:name>PSObject</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        N/A
      </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="2">
        <maml:name>EntryPathRoot</maml:name>
        <maml:description>
          <maml:para>
          </maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="2">
        <maml:name>OutputPath</maml:name>
        <maml:description>
          <maml:para>
        If set, a single archive will be created with all input files stored in it. If not set, each archive will be stored in a separate archive in the current directory. This must be set to an output filename, not a directory.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        Not set.
      </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Append</maml:name>
        <maml:description>
          <maml:para>If set, the input files will be added to, or updated in, the zip file specified by OutputPath.</maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>FlattenPaths</maml:name>
        <maml:description>
          <maml:para>
        If set, no path information will be stored in the archive, effectively placing all files in the root. Files in subdirectories matching those in lower levels with clashing names will not be added and a warning will be emitted.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        Not set.
      </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>IncludeEmptyDirectories</maml:name>
        <maml:description>
          <maml:para>
        If set, empty directories will be added as entries into the archive.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        Not set.
      </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Level</maml:name>
        <maml:description>
          <maml:para>
        Can be set between 1 and 9 inclusive. Higher numbers use a more efficient compression method, resulting in smaller archives. Higher levels generally result in slower compression times.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">Nullable`1</command:parameterValue>
        <dev:type>
          <maml:name>Nullable`1</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        5
      </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>NoClobber</maml:name>
        <maml:description>
          <maml:para>
        If set, existing archives with the same name as the current output archive will not be overwritten.
      </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        Not set, existing archives with the same name WILL be overwritten.
      </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Quiet</maml:name>
        <maml:description>
          <maml:para>
          </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:inputType>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:inputType>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:title />
      <maml:alert>
        <maml:para>When passing DirectoryInfo objects via the pipeline, the Cmdlet will NOT iterate their contents. However, if you pass a directory name via -Path, they WILL be iterated for contents.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>
        PS&gt; write-zip .\Desktop desktop.zip
      </dev:code>
        <dev:remarks>
          <maml:para>This will zip the contents of the Desktop directory into the file desktop.zip.</maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>
        PS&gt; dir c:\logs\ -rec -inc *.log | write-zip -level 9 | move-item c:\archived_logs\
      </dev:code>
        <dev:remarks>
          <maml:para>This will recursively search C:\logs for *.log files, compress them with maximum compression, move them to c:\archived_logs.</maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks />
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-MountPoint</command:name>
      <maml:description>
        <maml:para>PSCX Cmdlet: Returns all mount points defined for a specific root path.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Get</command:verb>
      <command:noun>MountPoint</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>
         Returns all mount points defined for a specific root path.
    </maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-MountPoint</maml:name>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="1">
          <maml:name>Volume</maml:name>
          <maml:description>
            <maml:para>
                When specified, gets mount points on the specified volume; otherwise, returns mount points on all volumes.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="1">
        <maml:name>Volume</maml:name>
        <maml:description>
          <maml:para>
                When specified, gets mount points on the specified volume; otherwise, returns mount points on all volumes.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:title />
      <maml:alert>
        <maml:para>
        </maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>
        </dev:code>
        <dev:remarks>
          <maml:para>
          </maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>New-Hardlink</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-Junction</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Remove-MountPoint</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-ReparsePoint</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Remove-ReparsePoint</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-Symlink</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-ReparsePoint</command:name>
      <maml:description>
        <maml:para>PSCX Cmdlet: Gets NTFS reparse point data.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Get</command:verb>
      <command:noun>ReparsePoint</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>
         Gets NTFS reparse point data.
    </maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-ReparsePoint</maml:name>
        <command:parameter required="true" globbing="true" pipelineInput="true (ByValue, ByPropertyName)" position="1">
          <maml:name>Path</maml:name>
          <maml:description>
            <maml:para>
                Specifies the path to the file to process. Wildcard syntax is allowed.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Raw</maml:name>
          <maml:description>
            <maml:para>
                When specified, gets the raw reparse point data as a byte array.
            </maml:para>
          </maml:description>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Get-ReparsePoint</maml:name>
        <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
          <maml:name>LiteralPath</maml:name>
          <maml:description>
            <maml:para>
                Specifies a path to the item. The value of -LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Raw</maml:name>
          <maml:description>
            <maml:para>
                When specified, gets the raw reparse point data as a byte array.
            </maml:para>
          </maml:description>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
        <maml:name>LiteralPath</maml:name>
        <maml:description>
          <maml:para>
                Specifies a path to the item. The value of -LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" globbing="true" pipelineInput="true (ByValue, ByPropertyName)" position="1">
        <maml:name>Path</maml:name>
        <maml:description>
          <maml:para>
                Specifies the path to the file to process. Wildcard syntax is allowed.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Raw</maml:name>
        <maml:description>
          <maml:para>
                When specified, gets the raw reparse point data as a byte array.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:title />
      <maml:alert>
        <maml:para>
        </maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>
        </dev:code>
        <dev:remarks>
          <maml:para>
          </maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>New-Hardlink</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-Junction</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-MountPoint</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Remove-MountPoint</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Remove-ReparsePoint</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-Symlink</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>New-Hardlink</command:name>
      <maml:description>
        <maml:para>PSCX Cmdlet: Creates filesystem hard links. The hardlink and the target must reside on the same NTFS volume.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>New</command:verb>
      <command:noun>Hardlink</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>
         Creates filesystem hard links. The hardlink and the target must reside on the same NTFS volume.
    </maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>New-Hardlink</maml:name>
        <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
          <maml:name>LiteralPath</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
          <maml:name>TargetPath</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
        <maml:name>LiteralPath</maml:name>
        <maml:description>
          <maml:para>
          </maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
        <maml:name>TargetPath</maml:name>
        <maml:description>
          <maml:para>
          </maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:title />
      <maml:alert>
        <maml:para>
        </maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>
        </dev:code>
        <dev:remarks>
          <maml:para>
          </maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>New-Junction</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-MountPoint</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Remove-MountPoint</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-ReparsePoint</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Remove-ReparsePoint</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-Symlink</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>New-Junction</command:name>
      <maml:description>
        <maml:para>PSCX Cmdlet: Creates NTFS directory junctions.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>New</command:verb>
      <command:noun>Junction</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>
         Creates NTFS directory junctions.
    </maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>New-Junction</maml:name>
        <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
          <maml:name>LiteralPath</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
          <maml:name>TargetPath</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
        <maml:name>LiteralPath</maml:name>
        <maml:description>
          <maml:para>
          </maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
        <maml:name>TargetPath</maml:name>
        <maml:description>
          <maml:para>
          </maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:title />
      <maml:alert>
        <maml:para>
        </maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>
        </dev:code>
        <dev:remarks>
          <maml:para>
          </maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>New-Hardlink</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-MountPoint</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Remove-MountPoint</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-ReparsePoint</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Remove-ReparsePoint</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-Symlink</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>New-Symlink</command:name>
      <maml:description>
        <maml:para>PSCX Cmdlet: Creates filesystem symbolic links. Requires Microsoft Windows Vista or later.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>New</command:verb>
      <command:noun>Symlink</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>
         Creates filesystem symbolic links. Requires Microsoft Windows Vista or later.
    </maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>New-Symlink</maml:name>
        <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
          <maml:name>LiteralPath</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
          <maml:name>TargetPath</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
        <maml:name>LiteralPath</maml:name>
        <maml:description>
          <maml:para>
          </maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="2">
        <maml:name>TargetPath</maml:name>
        <maml:description>
          <maml:para>
          </maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:title />
      <maml:alert>
        <maml:para>
        </maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>
        </dev:code>
        <dev:remarks>
          <maml:para>
          </maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>New-Hardlink</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-Junction</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-MountPoint</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Remove-MountPoint</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-ReparsePoint</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Remove-ReparsePoint</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Remove-MountPoint</command:name>
      <maml:description>
        <maml:para>PSCX Cmdlet: Removes a mount point, dismounting the current media if any. If used against the root of a fixed drive, removes the drive letter assignment.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Remove</command:verb>
      <command:noun>MountPoint</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>
         Removes a mount point, dismounting the current media if any. If used against the root of a fixed drive, removes the drive letter assignment.
    </maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Remove-MountPoint</maml:name>
        <command:parameter required="true" globbing="true" pipelineInput="true (ByValue, ByPropertyName)" position="1">
          <maml:name>Path</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Remove-MountPoint</maml:name>
        <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
          <maml:name>LiteralPath</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
        <maml:name>LiteralPath</maml:name>
        <maml:description>
          <maml:para>
          </maml:para>
        </maml:description>
        <command:parameterValue required="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" globbing="true" pipelineInput="true (ByValue, ByPropertyName)" position="1">
        <maml:name>Path</maml:name>
        <maml:description>
          <maml:para>
          </maml:para>
        </maml:description>
        <command:parameterValue required="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:title />
      <maml:alert>
        <maml:para>
        </maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>
        </dev:code>
        <dev:remarks>
          <maml:para>
          </maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>New-Hardlink</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-Junction</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-MountPoint</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-ReparsePoint</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Remove-ReparsePoint</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-Symlink</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Remove-ReparsePoint</command:name>
      <maml:description>
        <maml:para>PSCX Cmdlet: Removes NTFS reparse junctions and symbolic links.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Remove</command:verb>
      <command:noun>ReparsePoint</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>
         Removes NTFS reparse junctions and symbolic links.
    </maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Remove-ReparsePoint</maml:name>
        <command:parameter required="true" globbing="true" pipelineInput="true (ByValue, ByPropertyName)" position="1">
          <maml:name>Path</maml:name>
          <maml:description>
            <maml:para>
                Path to the new link.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Remove-ReparsePoint</maml:name>
        <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
          <maml:name>LiteralPath</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
        <maml:name>LiteralPath</maml:name>
        <maml:description>
          <maml:para>
          </maml:para>
        </maml:description>
        <command:parameterValue required="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" globbing="true" pipelineInput="true (ByValue, ByPropertyName)" position="1">
        <maml:name>Path</maml:name>
        <maml:description>
          <maml:para>
                Path to the new link.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description />
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:title />
      <maml:alert>
        <maml:para>
        </maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>
        </dev:code>
        <dev:remarks>
          <maml:para>
          </maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>New-Hardlink</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-Junction</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-MountPoint</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Remove-MountPoint</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-ReparsePoint</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-Symlink</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Test-AlternateDataStream</command:name>
      <maml:description>
        <maml:para>PSCX Cmdlet: Tests for the existence of the specified alternate data stream from an NTFS file.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Test</command:verb>
      <command:noun>AlternateDataStream</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>
         Tests for the existence of the specified alternate data stream from an NTFS file.
    </maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Test-AlternateDataStream</maml:name>
        <command:parameter required="true" globbing="true" pipelineInput="true (ByValue, ByPropertyName)" position="1">
          <maml:name>Path</maml:name>
          <maml:description>
            <maml:para>
                Specifies the path to the file to process. Wildcard syntax is allowed.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" globbing="false" pipelineInput="false" position="2">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>
                Specifies the name of the alternate data stream e.g. Zone.Identifier
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Test-AlternateDataStream</maml:name>
        <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
          <maml:name>LiteralPath</maml:name>
          <maml:description>
            <maml:para>
                Specifies a path to the item. The value of -LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" globbing="false" pipelineInput="false" position="2">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>
                Specifies the name of the alternate data stream e.g. Zone.Identifier
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" globbing="false" pipelineInput="true (ByPropertyName)" position="1">
        <maml:name>LiteralPath</maml:name>
        <maml:description>
          <maml:para>
                Specifies a path to the item. The value of -LiteralPath is used exactly as it is typed. No characters are interpreted as wildcards. If the path includes escape characters, enclose it in single quotation marks. Single quotation marks tell Windows PowerShell not to interpret any characters as escape sequences.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" globbing="true" pipelineInput="true (ByValue, ByPropertyName)" position="1">
        <maml:name>Path</maml:name>
        <maml:description>
          <maml:para>
                Specifies the path to the file to process. Wildcard syntax is allowed.
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" globbing="false" pipelineInput="false" position="2">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>
                Specifies the name of the alternate data stream e.g. Zone.Identifier
            </maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </dev:type>
        <maml:description />
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </dev:type>
        <maml:description />
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:title />
      <maml:alert>
        <maml:para>
        </maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>C:\PS&gt; Get-ChildItem *.zip | Test-AlternateDataStream -Name Zone.Identifier -Verbose</dev:code>
        <dev:remarks>
          <maml:para>Shows which ZIP files have an alternate data stream named Zone.Identifier.</maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks />
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-RunningObject</command:name>
      <maml:description>
        <maml:para>PSCX Cmdlet: </maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Get</command:verb>
      <command:noun>RunningObject</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>
      </maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-RunningObject</maml:name>
        <command:parameter required="false" globbing="true" pipelineInput="true (ByValue)" position="1">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
          <command:parameterValue required="true">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>SuppressRelease</maml:name>
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" globbing="true" pipelineInput="true (ByValue)" position="1">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>
          </maml:para>
        </maml:description>
        <command:parameterValue required="true">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>SuppressRelease</maml:name>
        <maml:description>
          <maml:para>
          </maml:para>
        </maml:description>
        <command:parameterValue required="true">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>
        </dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </dev:type>
        <maml:description />
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri />
          <maml:description>
            <maml:para>
            </maml:para>
          </maml:description>
        </dev:type>
        <maml:description />
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:title />
      <maml:alert>
        <maml:para>
        </maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <maml:introduction>
        PS C:\&gt;
      </maml:introduction>
        <dev:code>
        </dev:code>
        <dev:remarks>
          <maml:para>
          </maml:para>
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks />
  </command:command>
<providerHelp>
  <Name>
	AssemblyCache
</Name>
  <Drives>
    <Para>Gac:</Para>
  </Drives>
  <Synopsis>PSCX Provider: Provides access to the .NET Global Assembly Cache and the assemblies it contains. The assemblies are exposed as AssemblyName objects.</Synopsis>
  <DetailedDescription>
      <para>The AssemblyCache provider lets you enumerate all assemblies contained in the Global Assembly Cache (GAC). The GAC is a machine-wide store for shared, strongly-named assemblies that facilitates side-by-side execution.</para>
      <para>The AssemblyCache provider is a flat namespace that contains System.Reflection.AssemblyName objects, one for each assembly that is contained in the GAC. The relationship between paths and AssemblyNames is one-to-many; e.g. on a machine that has both the 1.1 and 2.0 .NET Frameworks installed, peforming Get-Item "system.web" will return two AssemblyName objects.</para>
      <para>The AssemblyCache provider exposes its data store in the Gac: drive. To work with the contained AssemblyNames objects, you can change your location to the Gac: drive ("set-location gac:") or work from any other Windows PowerShell drive. To reference an AssemblyName from another location, use the drive name, "Gac:" in the path.</para>
      <para>The first time you execute a command against the AssemblyCache provider, e.g. get-childitem, the provider will scan the GAC for assemblies and build a cache. A progress bar will be displayed while this operation is performed.</para>
      <para>PowerShell Community Extensions PSCX includes a cmdlet named Resolve-Assembly, that when used with the -Import SwitchParameter will attempt to load an assembly represented by the AssemblyName input object:</para>
        <para>1# Get-ChildItem gac:microsoft.sharepoint | Resolve-Assembly -Import</para>
        <para>This cmdlet can also be used to test assembly resolution; please see Resolve-Assembly documentation for full usage instructions.</para>
        <para>The AssemblyCache provider only supports Get-Item and Get-ChildItem. While this is quite a minimal set of operations for a provider to support, we consider the major value of this provider is to allow easy querying and loading of arbitrary assemblies from the GAC through the use of wildcards and tab-expansion:</para>
        <para>The AssemblyCache provider supports full Tab-Completion features, e.g.</para>
        <para>1# get-item gac:System.W*&lt;tab&gt;</para>
        <para>This will cycle through all matching assemblies that begin with "System.W" each time you hit the Tab key.</para>
  </DetailedDescription>
  <Capabilities>
    <para></para>
  </Capabilities>
  <Filters>
    <para></para>
  </Filters>
  <Notes>The relationship between paths and AssemblyNames is one-to-many; e.g. on a machine that has both the 1.1 and 2.0 .NET Frameworks installed, peforming Get-Item "system.web" will return two AssemblyName objects.</Notes>
  <Tasks>
    <Task>
      <Title>
			Getting to the Gac: drive
		</Title>
      <Description>
        <para></para>
      </Description>
      <Examples>
        <Example>
          <Title>-------------------------- EXAMPLE 1 --------------------------</Title>
          <Introduction>
            <para>This command changes the current location to the Gac: drive. You can use this command from any drive in Windows PowerShell. To return to a file system drive, type the drive name, such as "set-location c:"</para>
          </Introduction>
          <Code>set-location gac:</Code>
          <Remarks>
            <para></para>
          </Remarks>
        </Example>
      </Examples>
    </Task>
      <Task>
          <Title>
              Getting AssemblyName objects
          </Title>
          <Description>
              <para></para>
          </Description>
          <Examples>
              <Example>
                  <Title>-------------------------- EXAMPLE 1 --------------------------</Title>
                  <Introduction>
                      <para>This command gets the list of all assemblies in the GAC, each represented by a corresponding AssemblyName object. You can use this command from any Windows PowerShell drive.</para>
                  </Introduction>
                  <Code>get-item -path gac:</Code>
                  <Remarks>
                      <para></para>
                  </Remarks>
              </Example>
              <Example>
                  <Title>-------------------------- EXAMPLE 2 --------------------------</Title>
                  <Introduction>
                      <para>This command gets all versions of the "System.Web" assembly. You can use this command from any Windows PowerShell drive.</para>
                  </Introduction>
                  <Code>get-childitem -path gac:system.web</Code>
                  <Remarks>
                      <para>If you are in the Gac: drive, you can omit the drive name from the path. </para>
                  </Remarks>
              </Example>
              <Example>
                  <Title>-------------------------- EXAMPLE 3 --------------------------</Title>
                  <Introduction>
                      <para>This command gets a list of all assemblies beginning with Micros*. You can use this command from any Windows PowerShell drive.</para>
                  </Introduction>
                  <Code>get-childitem -path gac:Micros*</Code>
                  <Remarks>
                      <para></para>
                  </Remarks>
              </Example>
          </Examples>
      </Task>
      <Task>
          <Title>
              Loading assemblies from the returned AssemblyName objects
          </Title>
          <Description>
              <para></para>
          </Description>
          <Examples>
              <Example>
                  <Title>-------------------------- EXAMPLE 1 --------------------------</Title>
                  <Introduction>
                    <para>This shows how to load a number of related assemblies, isolated by version number and a common name stem.</para>
                  </Introduction>
                  <Code>get-childitem -path gac:microsoft.build* -version 2.0.0.0 | resolve-assembly -import</Code>
                  <Remarks>
                    <para>This will load all the MSBuild related assemblies for .NET 2.0 into the current AppDomain.</para>
                  </Remarks>
                </Example>
           </Examples>
    </Task>
  </Tasks>    
  <DynamicParameters>
    <DynamicParameter>
      <Name>Version</Name>
      <CmdletSupported>Get-ChildItem</CmdletSupported>
      <Type>
        <Name>System.Version</Name>
      </Type>
      <Description>Returns AssemblyName objects match the provided version. Version must be a full dotted-quad, e.g. 2.0.0.0 and cannot contain wildcard symbols.</Description>
      <PossibleValues>
      </PossibleValues>
    </DynamicParameter>
      <DynamicParameter>
          <Name>ProcessorArchitecture</Name>
          <CmdletSupported>Get-ChildItem</CmdletSupported>
          <Type>
              <Name>System.Reflection.ProcessorArchitecture</Name>
          </Type>
          <Description>Returns AssemblyName objects with the provided processor architecture.</Description>
          <PossibleValues>
              <PossibleValue>
                  <Value>None</Value>
                  <Description>
                      <para>No explicit architecture.</para>
                  </Description>
              </PossibleValue>
              <PossibleValue>
                  <Value>MSIL</Value>
                  <Description>
                      <para>Microsoft Intermediate Language.</para>
                  </Description>
              </PossibleValue>
              <PossibleValue>
                  <Value>X86</Value>
                  <Description>
                      <para>Intel x86.</para>
                  </Description>
              </PossibleValue>
              <PossibleValue>
                  <Value>IA64</Value>
                  <Description>
                      <para>Intel 64-bit extensions.</para>
                  </Description>
              </PossibleValue>
              <PossibleValue>
                  <Value>AMD64</Value>
                  <Description>
                      <para>AMD 64-bit extensions.</para>
                  </Description>
              </PossibleValue>
          </PossibleValues>
      </DynamicParameter>
      <DynamicParameter>
          <Name>CultureInfo</Name>
          <CmdletSupported>Get-ChildItem</CmdletSupported>
          <Type>
              <Name>System.Globalization.CultureInfo</Name>
          </Type>
          <Description>Returns AssemblyName objects match the provided CultureInfo name.</Description>
          <PossibleValues>
          </PossibleValues>
      </DynamicParameter>      
  </DynamicParameters>
  <RelatedLinks>      
	Resolve-Assembly
	about_provider
</RelatedLinks>
</providerHelp>
<providerHelp>
  <Name>
    DirectoryServices
  </Name>
  <Drives>
    <Para>Europe:</Para>
  </Drives>
  <Synopsis>
    PSCX Provider: Provides access to LDAP servers like Active Directory or AD Lightweight Directory Services.
  </Synopsis>
  <DetailedDescription>
    <para>The PSCX DirectoryServices provider lets you get, add, and change objects on LDAP directory services.  

The PSCX DirectoryServices provider automatically creates a drive for the Active Directory domain the machine is joined to. You can create drives using the New-PSDrive command. The root of the drive should be a valid LDAP path to the root object.

You can get and change object attributes using the Get-ItemProperty and Set-ItemProperty commands. The current version of the provider supports user and group object types. Objects of other types can be retrieved and modified too, at least to some degree. You need to specify the -Raw attribute to get or change the real attribute of an object.  
</para>
  </DetailedDescription>
  <Capabilities>
    <para></para>
  </Capabilities>
  <Filters>
    <para></para>
  </Filters>
  <Notes></Notes>
  <Tasks>
    <Task>
      <Title>
            Creating a DirectoryServices drive
        </Title>
      <Description>
        <para></para>
      </Description>
      <Examples>
        <Example>
          <Title>-------------------------- EXAMPLE 1 --------------------------</Title>
          <Introduction>
            <para>This command connects to an AD LDS application partition  running on some port on the mijavm machine.</para>
          </Introduction>
          <Code>New-PSDrive Adam DirectoryServices 'LDAP://mijavm:389/CN=Partition, DC=mijavm, DC=com'</Code>
          <Remarks>
            <para></para>
          </Remarks>
        </Example>
      </Examples>
    </Task>
    <Task>
      <Title>Creating a DirectoryServices drive using specified credentials.</Title>
      <Description>
        <para></para>
      </Description>
      <Examples>
        <Example>
          <Title>-------------------------- EXAMPLE 1 --------------------------</Title>
          <Introduction>
            <para>This command connects to a naming context on a remote Active Directory LDAP server using specified credentials.</para>
          </Introduction>
          <Code>$credential = Get-Credential
New-PSDrive Litware DirectoryServices 'LDAP://157.58.88.61/DC=litwareinc, DC=com' -Credential $credential
                </Code>
          <Remarks>
            <para></para>
          </Remarks>
        </Example>
      </Examples>
    </Task>
        
   <Task>
      <Title>Retrieving group members.</Title>        
      <Description>
        <para></para>
      </Description>
      <Examples>        
        <Example>
          <Title>-------------------------- EXAMPLE 1 --------------------------</Title>
          <Introduction>
            <para>This command gets members of a specified Active Directory group. </para>
          </Introduction>
          <Code>Get-ItemProperty 'Litware:\Users\Litware FTE' Member</Code>
          <Remarks>
            <para>Specify the -Raw parameter when retrieving or changing the  raw LDAP attributes.</para>
          </Remarks>
        </Example>
       </Examples>
    </Task>   
    <Task>
      <Title>Creating users.</Title>
      <Description>
        <para></para>
      </Description>
      <Examples>
       <Example>
          <Title>-------------------------- EXAMPLE 1 --------------------------</Title>
          <Introduction>
            <para>This command creates a new user in the current organization unit and sets the manager property.</para>
          </Introduction>
          <Code>cd Litware:\Users
new-item NewUser -Type user
Set-ItemProperty newuser manager '.\Dianne Tibbot'</Code>
          <Remarks>
            <para></para>
          </Remarks>
        </Example>
      </Examples>
    </Task>
    
    
    <Task>
      <Title>Getting group members.</Title>
      <Description>
        <para>The group members are stored in the Member property of the object.</para>
      </Description>
      <Examples>
        <Example>
          <Title>-------------------------- EXAMPLE 1 --------------------------</Title>
          <Introduction>
            <para>This command returns members of the Litware FTE group.</para>
          </Introduction>
          <Code>(get-itemproperty 'Litware FTE').Member</Code>
          <Remarks>
            <para></para>
          </Remarks>
        </Example>
      </Examples>
    </Task>
  
    <Task>
      <Title>Modifying multi-valued properties.</Title>
      <Description>
        <para>Some item properties can have more values. To add and remove values, use the Add and Remove dynamic parameters.</para>
      </Description>
      
      <Examples>
        <Example>
          <Title>-------------------------- EXAMPLE 1 --------------------------</Title>
          <Introduction>
            <para>This command adds a member to the Litware FTE group.</para>
          </Introduction>
          <Code>set-itemproperty 'Litware FTE' Member TestUser -Add</Code>
          <Remarks>
            <para></para>
          </Remarks>
        </Example>
        <Example>
          <Title>-------------------------- EXAMPLE 2 --------------------------</Title>
          <Introduction>
            <para>This command removes a member from the Litware FTE group.</para>
          </Introduction>
          <Code>set-itemproperty 'Litware FTE' Member TestUser -Remove</Code>
          <Remarks>
            <para></para>
          </Remarks>
        </Example>
      </Examples>
    </Task>
  </Tasks>  
  
  
  
  <DynamicParameters>
    <DynamicParameter>
      <Name>Raw</Name>
      <CmdletSupported>Get-ItemProperty, Set-ItemProperty</CmdletSupported>
      <Type>
        <Name>System.Management.Automation.SwitchParameter</Name>
      </Type>
      <Description>Returns or modifies the native values of LDAP attributes instead of provider-adapted objects.</Description>
      <PossibleValues>
      </PossibleValues>
    </DynamicParameter>
  
    <DynamicParameter>
      <Name>Add</Name>
      <CmdletSupported>Set-ItemProperty</CmdletSupported>
      <Type>
        <Name>System.Management.Automation.SwitchParameter</Name>
      </Type>
      <Description>Adds the specified value to the multi-valued property.</Description>
      <PossibleValues>
      </PossibleValues>
    </DynamicParameter>  

    <DynamicParameter>
      <Name>Remove</Name>
      <CmdletSupported>Set-ItemProperty</CmdletSupported>
      <Type>
        <Name>System.Management.Automation.SwitchParameter</Name>
      </Type>
      <Description>Removes the specified value from the multi-valued property.</Description>
      <PossibleValues>
      </PossibleValues>
    </DynamicParameter>  


  </DynamicParameters>
  
  
  
  
  <RelatedLinks>
    Get-ADObject
    Get-DhcpServer
    Get-DomainController
    about_provider
</RelatedLinks>
</providerHelp>
<providerHelp>
  <Name>
    FeedStore
  </Name>
  <Drives>
    <Para>Feed:</Para>
  </Drives>
  <Synopsis>
    PSCX Provider: Provides access to the Internet Explorer 7 RSS feed store.
  </Synopsis>
  <DetailedDescription>
    <para>The PSCX FeedStore provider lets you get and delete RSS feeds in Windows PowerShell.</para>
  </DetailedDescription>
  <Capabilities>
    <para></para>
  </Capabilities>
  <Filters>
    <para></para>
  </Filters>
  <Notes></Notes>
  <Tasks>
    <Task>
      <Title>
        Getting to the Feed: drive
      </Title>
      <Description>
        <para></para>
      </Description>
      <Examples>
        <Example>
          <Title>
            -------------------------- EXAMPLE 1 --------------------------
          </Title>
          <Introduction>
            <para>This command changes the current location to the FeedStore: drive. You can use this command from any drive in Windows PowerShell. To return to a file system drive, type the drive name, such as "set-location feed:"</para>
          </Introduction>
          <Code>
            set-location feed:
          </Code>
          <Remarks>
            <para></para>
          </Remarks>
        </Example>
      </Examples>
    </Task>
    <Task>
      <Title>
        Getting RSS feeds
      </Title>
      <Description>
        <para></para>
      </Description>
      <Examples>
        <Example>
          <Title>
            -------------------------- EXAMPLE 1 --------------------------
          </Title>
          <Introduction>
            <para>This command gets the list of all the IE7 feeds. You can use this command from any Windows PowerShell drive.</para>
          </Introduction>
          <Code>
            get-item -path feed:
          </Code>
          <Remarks>
            <para></para>
          </Remarks>
        </Example>
      </Examples>
    </Task>
  </Tasks>
  <DynamicParameters>
  </DynamicParameters>
  <RelatedLinks>
    about_provider
  </RelatedLinks>
</providerHelp>
</helpItems>
